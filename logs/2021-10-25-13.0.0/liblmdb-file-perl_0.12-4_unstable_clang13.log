DC-Build-Header: liblmdb-file-perl 0.12-4 / 2021-10-26 23:21:15 +0000
DC-Task: type:rebuild-binarch-only source:liblmdb-file-perl version:0.12-4 chroot:unstable esttime:45 logfile:/tmp/liblmdb-file-perl_0.12-4_unstable_clang13.log modes:clang13:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang13 liblmdb-file-perl_0.12-4'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-6-254.eu-central-1.compute.internal

+==============================================================================+
| liblmdb-file-perl 0.12-4 (amd64)             Tue, 26 Oct 2021 23:21:15 +0000 |
+==============================================================================+

Package: liblmdb-file-perl
Version: 0.12-4
Source Version: 0.12-4
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-22b3bbde-3445-4882-9d0d-8d63c28f1b9b' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang13
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=13
+ echo 'Install of clang-13'
Install of clang-13
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [165 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [63.6 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [63.6 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Translation-en [6586 kB]
Fetched 6981 kB in 3s (2628 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-13 libomp-13-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386 libclang-common-13-dev
  libclang-cpp13 libclang1-13 libedit2 libgc1 libgcc-9-dev libicu67 libllvm13
  libmd0 libobjc-11-dev libobjc4 libomp5-13 libxml2 libz3-4
Suggested packages:
  clang-13-doc libomp-13-doc
Recommended packages:
  llvm-13-dev python3
The following NEW packages will be installed:
  clang-13 lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386
  libclang-common-13-dev libclang-cpp13 libclang1-13 libedit2 libgc1
  libgcc-9-dev libicu67 libllvm13 libmd0 libobjc-11-dev libobjc-9-dev libobjc4
  libomp-13-dev libomp5-13 libxml2 libz3-4
0 upgraded, 22 newly installed, 0 to remove and 0 not upgraded.
Need to get 68.5 MB of archives.
After this operation, 379 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libmd0 amd64 1.0.4-1 [29.6 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.11.3-1 [108 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20210910-1 [97.5 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libicu67 amd64 67.1-7 [8622 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.12+dfsg-5 [696 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.12-1+b1 [6997 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libllvm13 amd64 1:13.0.0-8 [19.7 MB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp13 amd64 1:13.0.0-8 [10.5 MB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libgc1 amd64 1:8.0.4-3 [239 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 11.2.0-10 [43.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc-11-dev amd64 11.2.0-10 [170 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.32-4 [2624 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 11.2.0-10 [49.9 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 11.2.0-10 [601 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-13-dev amd64 1:13.0.0-8 [5730 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libclang1-13 amd64 1:13.0.0-8 [6093 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 clang-13 amd64 1:13.0.0-8 [119 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libasan5 amd64 9.4.0-3 [2734 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libgcc-9-dev amd64 9.4.0-3 [2343 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.4.0-3 [219 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libomp5-13 amd64 1:13.0.0-8 [377 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libomp-13-dev amd64 1:13.0.0-8 [482 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 68.5 MB in 0s (155 MB/s)
Selecting previously unselected package libmd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12431 files and directories currently installed.)
Preparing to unpack .../00-libmd0_1.0.4-1_amd64.deb ...
Unpacking libmd0:amd64 (1.0.4-1) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../01-libbsd0_0.11.3-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.11.3-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../02-libedit2_3.1-20210910-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20210910-1) ...
Selecting previously unselected package libicu67:amd64.
Preparing to unpack .../03-libicu67_67.1-7_amd64.deb ...
Unpacking libicu67:amd64 (67.1-7) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../04-libxml2_2.9.12+dfsg-5_amd64.deb ...
Unpacking libxml2:amd64 (2.9.12+dfsg-5) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../05-libz3-4_4.8.12-1+b1_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.12-1+b1) ...
Selecting previously unselected package libllvm13:amd64.
Preparing to unpack .../06-libllvm13_1%3a13.0.0-8_amd64.deb ...
Unpacking libllvm13:amd64 (1:13.0.0-8) ...
Selecting previously unselected package libclang-cpp13.
Preparing to unpack .../07-libclang-cpp13_1%3a13.0.0-8_amd64.deb ...
Unpacking libclang-cpp13 (1:13.0.0-8) ...
Selecting previously unselected package libgc1:amd64.
Preparing to unpack .../08-libgc1_1%3a8.0.4-3_amd64.deb ...
Unpacking libgc1:amd64 (1:8.0.4-3) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../09-libobjc4_11.2.0-10_amd64.deb ...
Unpacking libobjc4:amd64 (11.2.0-10) ...
Selecting previously unselected package libobjc-11-dev:amd64.
Preparing to unpack .../10-libobjc-11-dev_11.2.0-10_amd64.deb ...
Unpacking libobjc-11-dev:amd64 (11.2.0-10) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../11-libc6-i386_2.32-4_amd64.deb ...
Unpacking libc6-i386 (2.32-4) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../12-lib32gcc-s1_11.2.0-10_amd64.deb ...
Unpacking lib32gcc-s1 (11.2.0-10) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../13-lib32stdc++6_11.2.0-10_amd64.deb ...
Unpacking lib32stdc++6 (11.2.0-10) ...
Selecting previously unselected package libclang-common-13-dev.
Preparing to unpack .../14-libclang-common-13-dev_1%3a13.0.0-8_amd64.deb ...
Unpacking libclang-common-13-dev (1:13.0.0-8) ...
Selecting previously unselected package libclang1-13.
Preparing to unpack .../15-libclang1-13_1%3a13.0.0-8_amd64.deb ...
Unpacking libclang1-13 (1:13.0.0-8) ...
Selecting previously unselected package clang-13.
Preparing to unpack .../16-clang-13_1%3a13.0.0-8_amd64.deb ...
Unpacking clang-13 (1:13.0.0-8) ...
Selecting previously unselected package libasan5:amd64.
Preparing to unpack .../17-libasan5_9.4.0-3_amd64.deb ...
Unpacking libasan5:amd64 (9.4.0-3) ...
Selecting previously unselected package libgcc-9-dev:amd64.
Preparing to unpack .../18-libgcc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libgcc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../19-libobjc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libomp5-13:amd64.
Preparing to unpack .../20-libomp5-13_1%3a13.0.0-8_amd64.deb ...
Unpacking libomp5-13:amd64 (1:13.0.0-8) ...
Selecting previously unselected package libomp-13-dev.
Preparing to unpack .../21-libomp-13-dev_1%3a13.0.0-8_amd64.deb ...
Unpacking libomp-13-dev (1:13.0.0-8) ...
Setting up libicu67:amd64 (67.1-7) ...
Setting up libasan5:amd64 (9.4.0-3) ...
Setting up libz3-4:amd64 (4.8.12-1+b1) ...
Setting up libgc1:amd64 (1:8.0.4-3) ...
Setting up libmd0:amd64 (1.0.4-1) ...
Setting up libc6-i386 (2.32-4) ...
Setting up libomp5-13:amd64 (1:13.0.0-8) ...
Setting up libbsd0:amd64 (0.11.3-1) ...
Setting up libxml2:amd64 (2.9.12+dfsg-5) ...
Setting up libedit2:amd64 (3.1-20210910-1) ...
Setting up libobjc4:amd64 (11.2.0-10) ...
Setting up libgcc-9-dev:amd64 (9.4.0-3) ...
Setting up lib32gcc-s1 (11.2.0-10) ...
Setting up lib32stdc++6 (11.2.0-10) ...
Setting up libllvm13:amd64 (1:13.0.0-8) ...
Setting up libobjc-9-dev:amd64 (9.4.0-3) ...
Setting up libclang-common-13-dev (1:13.0.0-8) ...
Setting up libomp-13-dev (1:13.0.0-8) ...
Setting up libobjc-11-dev:amd64 (11.2.0-10) ...
Setting up libclang1-13 (1:13.0.0-8) ...
Setting up libclang-cpp13 (1:13.0.0-8) ...
Setting up clang-13 (1:13.0.0-8) ...
Processing triggers for libc-bin (2.32-4) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10 11'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-13 g++-4.6
+ ln -s clang-13 gcc-4.6
+ ln -s clang-13 cpp-4.6
+ ln -s clang-13 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-13 g++-4.7
+ ln -s clang-13 gcc-4.7
+ ln -s clang-13 cpp-4.7
+ ln -s clang-13 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-13 g++-4.8
+ ln -s clang-13 gcc-4.8
+ ln -s clang-13 cpp-4.8
+ ln -s clang-13 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-13 g++-4.9
+ ln -s clang-13 gcc-4.9
+ ln -s clang-13 cpp-4.9
+ ln -s clang-13 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-13 g++-5
+ ln -s clang-13 gcc-5
+ ln -s clang-13 cpp-5
+ ln -s clang-13 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-13 g++-6
+ ln -s clang-13 gcc-6
+ ln -s clang-13 cpp-6
+ ln -s clang-13 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-13 g++-7
+ ln -s clang-13 gcc-7
+ ln -s clang-13 cpp-7
+ ln -s clang-13 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-13 g++-8
+ ln -s clang-13 gcc-8
+ ln -s clang-13 cpp-8
+ ln -s clang-13 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-13 g++-9
+ ln -s clang-13 gcc-9
+ ln -s clang-13 cpp-9
+ ln -s clang-13 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-13 g++-10
+ ln -s clang-13 gcc-10
+ ln -s clang-13 cpp-10
+ ln -s clang-13 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-11 gcc-11 cpp-11 gcc
+ ln -s clang++-13 g++-11
+ ln -s clang-13 gcc-11
+ ln -s clang-13 cpp-11
+ ln -s clang-13 gcc
+ echo 'gcc-11 hold'
+ dpkg --set-selections
+ echo 'g++-11 hold'
+ dpkg --set-selections
+ cd -
/build/liblmdb-file-perl-D0SfHQ
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang
+ cd /usr/bin/
+ rm -f clang++ clang
+ ln -s clang-13 clang++
+ ln -s clang-13 clang
+ clang++ --version
Debian clang version 13.0.0-8
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ clang --version
Debian clang version 13.0.0-8
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ cd -
/build/liblmdb-file-perl-D0SfHQ
+ apt install --yes --no-install-recommends --force-yes qt5-qmake

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  qt5-qmake-bin qtchooser
The following NEW packages will be installed:
  qt5-qmake qt5-qmake-bin qtchooser
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 1322 kB of archives.
After this operation, 4914 kB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake-bin amd64 5.15.2+dfsg-12 [1046 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 qtchooser amd64 66-2 [26.3 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake amd64 5.15.2+dfsg-12 [249 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 1322 kB in 0s (20.6 MB/s)
Selecting previously unselected package qt5-qmake-bin.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13528 files and directories currently installed.)
Preparing to unpack .../qt5-qmake-bin_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake-bin (5.15.2+dfsg-12) ...
Selecting previously unselected package qtchooser.
Preparing to unpack .../qtchooser_66-2_amd64.deb ...
Unpacking qtchooser (66-2) ...
Selecting previously unselected package qt5-qmake:amd64.
Preparing to unpack .../qt5-qmake_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake:amd64 (5.15.2+dfsg-12) ...
Setting up qt5-qmake-bin (5.15.2+dfsg-12) ...
Setting up qtchooser (66-2) ...
Setting up qt5-qmake:amd64 (5.15.2+dfsg-12) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ cp /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qmake.conf /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qplatformdefs.h /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
+ ls -al /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
total 16
drwxr-xr-x  2 root root 4096 Oct 26 23:21 .
drwxr-xr-x 76 root root 4096 Oct 26 23:21 ..
-rw-r--r--  1 root root  276 Oct 26 23:21 qmake.conf
-rw-r--r--  1 root root 3218 Oct 26 23:21 qplatformdefs.h
+ cat /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf
#
# qmake configuration for linux-clang
#

MAKEFILE_GENERATOR = UNIX
CONFIG += incremental

QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/clang.conf)

QMAKE_LFLAGS += -ccc-gcc-name g++

load(qt_config)
+ export QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ sed -i -e 's|compare_problem(2,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ sed -i -e 's|compare_problem(1,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ grep 'compare_problem(' /usr/bin/dpkg-gensymbols
        compare_problem(4, g_('new libraries appeared in the symbols file: %s'), "@libs");
        compare_problem(3, g_('some libraries disappeared in the symbols file: %s'), "@libs");
        compare_problem(0, g_('some new symbols appeared in the symbols file: %s'),
        compare_problem(0, g_('some symbols or patterns disappeared in the symbols file: %s'),

I: Finished running '/tmp/clang13'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/liblmdb-file-perl-D0SfHQ/resolver-ZuWf9e' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'liblmdb-file-perl' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/perl-team/modules/packages/liblmdb-file-perl.git
Please use:
git clone https://salsa.debian.org/perl-team/modules/packages/liblmdb-file-perl.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 97.0 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main liblmdb-file-perl 0.12-4 (dsc) [2115 B]
Get:2 http://127.0.0.1:12990/debian sid/main liblmdb-file-perl 0.12-4 (tar) [87.0 kB]
Get:3 http://127.0.0.1:12990/debian sid/main liblmdb-file-perl 0.12-4 (diff) [7864 B]
Fetched 97.0 kB in 0s (1231 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/liblmdb-file-perl-D0SfHQ/liblmdb-file-perl-0.12' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/liblmdb-file-perl-D0SfHQ' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper-compat (= 13), liblmdb-dev, libtest-exception-perl, perl, build-essential, fakeroot
Filtered Build-Depends: debhelper-compat (= 13), liblmdb-dev, libtest-exception-perl, perl, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [402 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [475 B]
Fetched 1834 B in 0s (183 kB/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libdebhelper-perl libelf1
  libfile-stripnondeterminism-perl liblmdb-dev liblmdb0 libmagic-mgc libmagic1
  libpipeline1 libsigsegv2 libsub-override-perl libsub-uplevel-perl
  libtest-exception-perl libtool libuchardet0 m4 man-db po-debconf
  sensible-utils
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc dh-make gettext-doc
  libasprintf-dev libgettextpo-dev groff libtool-doc gfortran
  | fortran95-compiler gcj-jdk m4-doc apparmor less www-browser
  libmail-box-perl
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl lmdb-doc libltdl-dev
  libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libdebhelper-perl libelf1
  libfile-stripnondeterminism-perl liblmdb-dev liblmdb0 libmagic-mgc libmagic1
  libpipeline1 libsigsegv2 libsub-override-perl libsub-uplevel-perl
  libtest-exception-perl libtool libuchardet0 m4 man-db po-debconf
  sbuild-build-depends-main-dummy sensible-utils
0 upgraded, 34 newly installed, 0 to remove and 0 not upgraded.
Need to get 9122 kB of archives.
After this operation, 32.2 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [896 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdextrautils amd64 2.37.2-4 [143 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.7-1 [67.8 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-7 [935 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.3-1 [34.3 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.4-2 [1354 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.17 [21.5 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.39-3 [273 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.39-3 [126 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.39-3 [69.1 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.21-4 [175 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.13-1 [34.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-5 [204 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.71-2 [343 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1+nmu1 [77.1 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.5-1 [823 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.21-4 [510 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 13.5.2 [192 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-15 [513 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 20 [17.1 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.68-1 [104 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.12.0-2 [26.3 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.12.0-2 [15.5 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.185-2 [172 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.14-1 [98.3 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.21-4 [1311 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21+nmu1 [248 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 13.5.2 [1056 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 liblmdb0 amd64 0.9.24-1 [45.0 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 liblmdb-dev amd64 0.9.24-1 [61.0 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 libsub-uplevel-perl all 0.2800-1.1 [16.5 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 libtest-exception-perl all 0.43-1 [18.7 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 9122 kB in 0s (93.4 MB/s)
Selecting previously unselected package bsdextrautils.
(Reading database ... 14273 files and directories currently installed.)
Preparing to unpack .../00-bsdextrautils_2.37.2-4_amd64.deb ...
Unpacking bsdextrautils (2.37.2-4) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.7-1_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.7-1) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-7_amd64.deb ...
Unpacking groff-base (1.22.4-7) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.3-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.3-1) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.4-2_amd64.deb ...
Unpacking man-db (2.9.4-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../05-sensible-utils_0.0.17_all.deb ...
Unpacking sensible-utils (0.0.17) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../06-libmagic-mgc_1%3a5.39-3_amd64.deb ...
Unpacking libmagic-mgc (1:5.39-3) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../07-libmagic1_1%3a5.39-3_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.39-3) ...
Selecting previously unselected package file.
Preparing to unpack .../08-file_1%3a5.39-3_amd64.deb ...
Unpacking file (1:5.39-3) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../09-gettext-base_0.21-4_amd64.deb ...
Unpacking gettext-base (0.21-4) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../10-libsigsegv2_2.13-1_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.13-1) ...
Selecting previously unselected package m4.
Preparing to unpack .../11-m4_1.4.18-5_amd64.deb ...
Unpacking m4 (1.4.18-5) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../12-autoconf_2.71-2_all.deb ...
Unpacking autoconf (2.71-2) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../13-autotools-dev_20180224.1+nmu1_all.deb ...
Unpacking autotools-dev (20180224.1+nmu1) ...
Selecting previously unselected package automake.
Preparing to unpack .../14-automake_1%3a1.16.5-1_all.deb ...
Unpacking automake (1:1.16.5-1) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../15-autopoint_0.21-4_all.deb ...
Unpacking autopoint (0.21-4) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../16-libdebhelper-perl_13.5.2_all.deb ...
Unpacking libdebhelper-perl (13.5.2) ...
Selecting previously unselected package libtool.
Preparing to unpack .../17-libtool_2.4.6-15_all.deb ...
Unpacking libtool (2.4.6-15) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../18-dh-autoreconf_20_all.deb ...
Unpacking dh-autoreconf (20) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../19-libarchive-zip-perl_1.68-1_all.deb ...
Unpacking libarchive-zip-perl (1.68-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../20-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../21-libfile-stripnondeterminism-perl_1.12.0-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.12.0-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../22-dh-strip-nondeterminism_1.12.0-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.12.0-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../23-libelf1_0.185-2_amd64.deb ...
Unpacking libelf1:amd64 (0.185-2) ...
Selecting previously unselected package dwz.
Preparing to unpack .../24-dwz_0.14-1_amd64.deb ...
Unpacking dwz (0.14-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../25-gettext_0.21-4_amd64.deb ...
Unpacking gettext (0.21-4) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../26-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../27-po-debconf_1.0.21+nmu1_all.deb ...
Unpacking po-debconf (1.0.21+nmu1) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../28-debhelper_13.5.2_all.deb ...
Unpacking debhelper (13.5.2) ...
Selecting previously unselected package liblmdb0:amd64.
Preparing to unpack .../29-liblmdb0_0.9.24-1_amd64.deb ...
Unpacking liblmdb0:amd64 (0.9.24-1) ...
Selecting previously unselected package liblmdb-dev:amd64.
Preparing to unpack .../30-liblmdb-dev_0.9.24-1_amd64.deb ...
Unpacking liblmdb-dev:amd64 (0.9.24-1) ...
Selecting previously unselected package libsub-uplevel-perl.
Preparing to unpack .../31-libsub-uplevel-perl_0.2800-1.1_all.deb ...
Unpacking libsub-uplevel-perl (0.2800-1.1) ...
Selecting previously unselected package libtest-exception-perl.
Preparing to unpack .../32-libtest-exception-perl_0.43-1_all.deb ...
Unpacking libtest-exception-perl (0.43-1) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../33-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.3-1) ...
Setting up liblmdb0:amd64 (0.9.24-1) ...
Setting up bsdextrautils (2.37.2-4) ...
update-alternatives: using /usr/bin/write.ul to provide /usr/bin/write (write) in auto mode
Setting up libmagic-mgc (1:5.39-3) ...
Setting up libarchive-zip-perl (1.68-1) ...
Setting up libdebhelper-perl (13.5.2) ...
Setting up libmagic1:amd64 (1:5.39-3) ...
Setting up gettext-base (0.21-4) ...
Setting up file (1:5.39-3) ...
Setting up autotools-dev (20180224.1+nmu1) ...
Setting up libsigsegv2:amd64 (2.13-1) ...
Setting up autopoint (0.21-4) ...
Setting up liblmdb-dev:amd64 (0.9.24-1) ...
Setting up sensible-utils (0.0.17) ...
Setting up libuchardet0:amd64 (0.0.7-1) ...
Setting up libsub-uplevel-perl (0.2800-1.1) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libelf1:amd64 (0.185-2) ...
Setting up libfile-stripnondeterminism-perl (1.12.0-2) ...
Setting up gettext (0.21-4) ...
Setting up libtool (2.4.6-15) ...
Setting up m4 (1.4.18-5) ...
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up libtest-exception-perl (0.43-1) ...
Setting up autoconf (2.71-2) ...
Setting up dh-strip-nondeterminism (1.12.0-2) ...
Setting up dwz (0.14-1) ...
Setting up groff-base (1.22.4-7) ...
Setting up automake (1:1.16.5-1) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up po-debconf (1.0.21+nmu1) ...
Setting up man-db (2.9.4-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up dh-autoreconf (20) ...
Setting up debhelper (13.5.2) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.32-4) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.37-7 dpkg-dev_1.20.9 g++-11_11.2.0-10 gcc-11_11.2.0-10 libc6-dev_2.32-4 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 linux-libc-dev_5.14.12-1
Package versions: adduser_3.118 apt_2.3.11 autoconf_2.71-2 automake_1:1.16.5-1 autopoint_0.21-4 autotools-dev_20180224.1+nmu1 base-files_12 base-passwd_3.5.52 bash_5.1-3+b2 binutils_2.37-7 binutils-common_2.37-7 binutils-x86-64-linux-gnu_2.37-7 bsdextrautils_2.37.2-4 bsdutils_1:2.37.2-4 build-essential_12.9 bzip2_1.0.8-4 clang-13_1:13.0.0-8 coreutils_8.32-4+b1 cpp_4:11.2.0-2 cpp-11_11.2.0-10 dash_0.5.11+git20210120+802ebd4-2 debconf_1.5.78 debhelper_13.5.2 debian-archive-keyring_2021.1.1 debianutils_5.5-1 dh-autoreconf_20 dh-strip-nondeterminism_1.12.0-2 diffutils_1:3.7-5 dpkg_1.20.9 dpkg-dev_1.20.9 dwz_0.14-1 e2fsprogs_1.46.4-1 fakeroot_1.26-1 file_1:5.39-3 findutils_4.8.0-1 g++_4:11.2.0-2 g++-11_11.2.0-10 gcc_4:11.2.0-2 gcc-10-base_10.3.0-11 gcc-11_11.2.0-10 gcc-11-base_11.2.0-10 gcc-9-base_9.4.0-3 gettext_0.21-4 gettext-base_0.21-4 gpgv_2.2.27-2 grep_3.7-1 groff-base_1.22.4-7 gzip_1.10-4 hostname_3.23 init-system-helpers_1.60 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_11.2.0-10 lib32stdc++6_11.2.0-10 libacl1_2.3.1-1 libapt-pkg6.0_2.3.11 libarchive-zip-perl_1.68-1 libasan5_9.4.0-3 libasan6_11.2.0-10 libatomic1_11.2.0-10 libattr1_1:2.5.1-1 libaudit-common_1:3.0.6-1 libaudit1_1:3.0.6-1 libbinutils_2.37-7 libblkid1_2.37.2-4 libbsd0_0.11.3-1 libbz2-1.0_1.0.8-4 libc-bin_2.32-4 libc-dev-bin_2.32-4 libc6_2.32-4 libc6-dev_2.32-4 libc6-i386_2.32-4 libcap-ng0_0.7.9-2.2+b1 libcap2_1:2.44-1 libcc1-0_11.2.0-10 libclang-common-13-dev_1:13.0.0-8 libclang-cpp13_1:13.0.0-8 libclang1-13_1:13.0.0-8 libcom-err2_1.46.4-1 libcrypt-dev_1:4.4.25-2 libcrypt1_1:4.4.25-2 libctf-nobfd0_2.37-7 libctf0_2.37-7 libdb5.3_5.3.28+dfsg1-0.8 libdebconfclient0_0.260 libdebhelper-perl_13.5.2 libdpkg-perl_1.20.9 libedit2_3.1-20210910-1 libelf1_0.185-2 libext2fs2_1.46.4-1 libfakeroot_1.26-1 libffi8_3.4.2-3 libfile-stripnondeterminism-perl_1.12.0-2 libgc1_1:8.0.4-3 libgcc-11-dev_11.2.0-10 libgcc-9-dev_9.4.0-3 libgcc-s1_11.2.0-10 libgcrypt20_1.9.4-3+b1 libgdbm-compat4_1.22-1 libgdbm6_1.22-1 libgmp10_2:6.2.1+dfsg-2 libgnutls30_3.7.2-2 libgomp1_11.2.0-10 libgpg-error0_1.42-3 libgssapi-krb5-2_1.18.3-7 libhogweed6_3.7.3-1 libicu67_67.1-7 libidn2-0_2.3.2-2 libisl23_0.24-2 libitm1_11.2.0-10 libk5crypto3_1.18.3-7 libkeyutils1_1.6.1-2 libkrb5-3_1.18.3-7 libkrb5support0_1.18.3-7 libllvm13_1:13.0.0-8 liblmdb-dev_0.9.24-1 liblmdb0_0.9.24-1 liblsan0_11.2.0-10 liblz4-1_1.9.3-2 liblzma5_5.2.5-2 libmagic-mgc_1:5.39-3 libmagic1_1:5.39-3 libmd0_1.0.4-1 libmount1_2.37.2-4 libmpc3_1.2.1-1 libmpfr6_4.1.0-3 libnettle8_3.7.3-1 libnsl-dev_1.3.0-2 libnsl2_1.3.0-2 libobjc-11-dev_11.2.0-10 libobjc-9-dev_9.4.0-3 libobjc4_11.2.0-10 libomp-13-dev_1:13.0.0-8 libomp5-13_1:13.0.0-8 libp11-kit0_0.24.0-5 libpam-modules_1.4.0-10 libpam-modules-bin_1.4.0-10 libpam-runtime_1.4.0-10 libpam0g_1.4.0-10 libpcre2-8-0_10.36-2 libpcre3_2:8.39-13 libperl5.32_5.32.1-6 libpipeline1_1.5.3-1 libquadmath0_11.2.0-10 libseccomp2_2.5.2-2 libselinux1_3.1-3 libsemanage-common_3.1-1 libsemanage1_3.1-1+b2 libsepol1_3.1-1 libsigsegv2_2.13-1 libsmartcols1_2.37.2-4 libss2_1.46.4-1 libssl1.1_1.1.1l-1 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 libsub-override-perl_0.09-2 libsub-uplevel-perl_0.2800-1.1 libsystemd0_249.5-1 libtasn1-6_4.17.0-2 libtest-exception-perl_0.43-1 libtinfo6_6.2+20210905-1 libtirpc-common_1.3.2-2 libtirpc-dev_1.3.2-2 libtirpc3_1.3.2-2 libtool_2.4.6-15 libtsan0_11.2.0-10 libubsan1_11.2.0-10 libuchardet0_0.0.7-1 libudev1_249.5-1 libunistring2_0.9.10-6 libuuid1_2.37.2-4 libxml2_2.9.12+dfsg-5 libxxhash0_0.8.0-2 libz3-4_4.8.12-1+b1 libzstd1_1.4.8+dfsg-3 linux-libc-dev_5.14.12-1 login_1:4.8.1-1 logsave_1.46.4-1 lsb-base_11.1.0 m4_1.4.18-5 make_4.3-4.1 man-db_2.9.4-2 mawk_1.3.4.20200120-2 mount_2.37.2-4 ncurses-base_6.2+20210905-1 ncurses-bin_6.2+20210905-1 passwd_1:4.8.1-1 patch_2.7.6-7 perl_5.32.1-6 perl-base_5.32.1-6 perl-modules-5.32_5.32.1-6 po-debconf_1.0.21+nmu1 qt5-qmake_5.15.2+dfsg-12 qt5-qmake-bin_5.15.2+dfsg-12 qtchooser_66-2 rpcsvc-proto_1.4.2-4 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.8-1 sensible-utils_0.0.17 sysvinit-utils_3.00-1 tar_1.34+dfsg-1 tzdata_2021e-1 util-linux_2.37.2-4 xz-utils_5.2.5-2 zlib1g_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 3.0 (quilt)
Source: liblmdb-file-perl
Binary: liblmdb-file-perl
Architecture: any
Version: 0.12-4
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders:  Jonas Smedegaard <dr@jones.dk>,
Homepage: https://metacpan.org/release/LMDB_File
Standards-Version: 4.5.1
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/liblmdb-file-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/liblmdb-file-perl.git
Testsuite: autopkgtest-pkg-perl
Build-Depends: debhelper-compat (= 13), liblmdb-dev, libtest-exception-perl <!nocheck>, perl
Package-List:
 liblmdb-file-perl deb perl optional arch=any
Checksums-Sha1:
 5294e84d463a8b10758678f12435f032cf4447c0 87021 liblmdb-file-perl_0.12.orig.tar.gz
 7a4c01ea7dde5a6460eba7d7a377df3116c23315 7864 liblmdb-file-perl_0.12-4.debian.tar.xz
Checksums-Sha256:
 12bebaa48d22c1d825d8808fbf9923b518bcc9aa3dfb3f045f8fa9e7f2c08642 87021 liblmdb-file-perl_0.12.orig.tar.gz
 6d3a358c29732367772b2eb10f61346996edec683038c3015359258fa1a7057d 7864 liblmdb-file-perl_0.12-4.debian.tar.xz
Files:
 6fbfad51446c93e9ffa14a0579a5bbc3 87021 liblmdb-file-perl_0.12.orig.tar.gz
 c824ef020fcc0173223d4ccab9d0dbc0 7864 liblmdb-file-perl_0.12-4.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCgAdFiEEn+Ppw2aRpp/1PMaELHwxRsGgASEFAl/xJ7IACgkQLHwxRsGg
ASEqvw//SLQuCRvtZkT3rQu+g1pvj56sTwZwd+rCzGBHXM5TnIN+GKQsGXJjK7ik
zI07ZtHwx8ZsGOL2akmqCFpKuVn715/pKeCfPV+Vi0QVcyDLf1MqG6MxiC6jCjy8
vbarMWrNMHV6lQAH5EYuDYIlEuSiCu9JRD+MyF31XqUfnb3tZFH43UelI9z1xkpZ
jwAyzVSD2htE+rjAYHcOb+6+slUXcc+Xrhs/TcELgMgdWzso9KteGHG+3s7nzlAK
cgUTZWtDubwzeTlB8/rWHQuxB3x/5jGGxTGIyg/6gC/3VXk88B3nfP6wUctdKA4N
smsPtxWdosX+xODnf5aMjq/e6o0rwJSW697NEdFSMrbpW59KP+o9hlTmZ1Ra7l4b
HccVUdnXWH0IWABNhVqmNmw5vTi8bWDi0gi4T1kp3JvnGCVm6z7b1wR/bRLzpaEh
Lnajlwl6balCqLzSsYKGW9ETPqRbVzwiGHR0bPg3tKNgaC6sgozTFzrdRGPD9P9q
ajiQ02lwU5kag1tZ4QoSC3khR0maAypDZPLZ5HZsJRZRZqVa7ZoSAm/Ke0vb8w13
0+VHAdNRImk9Xb24eaVowhof06qeybhDLNEFNht/BQzRAgRjO72F8COehUT7OksN
HexN4lIc8gH5SWTPUxAldman76djghVcrWotpkXGXxGKxYZdMsY=
=iu9R
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/tmp/dpkg-verify-sig.IjY5YuQO/trustedkeys.kbx': General error
gpgv: Signature made Sun Jan  3 02:10:58 2021 UTC
gpgv:                using RSA key 9FE3E9C36691A69FF53CC6842C7C3146C1A00121
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./liblmdb-file-perl_0.12-4.dsc
dpkg-source: info: extracting liblmdb-file-perl in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking liblmdb-file-perl_0.12.orig.tar.gz
dpkg-source: info: unpacking liblmdb-file-perl_0.12-4.debian.tar.xz
dpkg-source: info: using patch list from debian/patches/series
dpkg-source: info: applying 020171213~1e10849.patch
dpkg-source: info: applying 020200706~ad771c9.patch
dpkg-source: info: applying 1001_supported_archs.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-22b3bbde-3445-4882-9d0d-8d63c28f1b9b
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package liblmdb-file-perl
dpkg-buildpackage: info: source version 0.12-4
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Jonas Smedegaard <dr@jones.dk>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 debian/rules clean
dh clean
   dh_clean
 debian/rules binary
dh binary
   dh_update_autotools_config
   dh_autoreconf
   dh_auto_configure
	/usr/bin/perl Makefile.PL INSTALLDIRS=vendor "OPTIMIZE=-g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2" "LD=x86_64-linux-gnu-gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro"
Will use SYSTEM lmdb in 
If that path isn't a standard one, you may need to set LD_LIBRARY_PATH!
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for LMDB_File
Writing MYMETA.yml and MYMETA.json
   dh_auto_build
	make -j4
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" "/usr/share/perl/5.32/ExtUtils/xsubpp" -noprototypes -typemap '/usr/share/perl/5.32/ExtUtils/typemap' -typemap '/<<PKGBUILDDIR>>/typemap'  LMDB.xs > LMDB.xsc
Running Mkbootstrap for LMDB_File ()
chmod 644 "LMDB_File.bs"
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- LMDB_File.bs blib/arch/auto/LMDB_File/LMDB_File.bs 644
cp lib/LMDB_File.pm blib/lib/LMDB_File.pm
AutoSplitting blib/lib/LMDB_File.pm (blib/lib/auto/LMDB_File)
mv LMDB.xsc LMDB.c
x86_64-linux-gnu-gcc -c   -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.12\" -DXS_VERSION=\"0.12\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"   LMDB.c
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from LMDB.xs:3:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
LMDB.xs:249:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1368:5: note: expanded from macro 'SvPV_free'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:249:2: note: '{' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1368:16: note: expanded from macro 'SvPV_free'
    STMT_START {                                                        \
               ^
LMDB.xs:249:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2331:36: note: expanded from macro 'SvOOK_offset'
#  define SvOOK_offset(sv, offset) STMT_START {                         \
                                   ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:249:2: note: '{' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2331:47: note: expanded from macro 'SvOOK_offset'
#  define SvOOK_offset(sv, offset) STMT_START {                         \
                                              ^
LMDB.xs:249:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2342:5: note: expanded from macro 'SvOOK_offset'
    } STMT_END
    ^
LMDB.xs:249:2: note: ')' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2342:7: note: expanded from macro 'SvOOK_offset'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:249:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1313:2: note: expanded from macro 'SvPV_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:249:2: note: '{' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1313:13: note: expanded from macro 'SvPV_set'
        STMT_START { \
                   ^
LMDB.xs:249:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1318:32: note: expanded from macro 'SvPV_set'
                ((sv)->sv_u.svu_pv = (val)); } STMT_END
                                             ^
LMDB.xs:249:2: note: ')' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1318:34: note: expanded from macro 'SvPV_set'
                ((sv)->sv_u.svu_pv = (val)); } STMT_END
                                               ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:249:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1380:4: note: expanded from macro 'SvPV_free'
                 } STMT_END
                 ^
LMDB.xs:249:2: note: ')' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1380:6: note: expanded from macro 'SvPV_free'
                 } STMT_END
                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:280:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MUTEX_LOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:280:2: note: '{' token is here
        MUTEX_LOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
LMDB.xs:280:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MUTEX_LOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
LMDB.xs:280:2: note: ')' token is here
        MUTEX_LOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:282:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                COND_DESTROY(&info->cond);
                ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:272:5: note: expanded from macro 'COND_DESTROY'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:282:3: note: '{' token is here
                COND_DESTROY(&info->cond);
                ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:272:16: note: expanded from macro 'COND_DESTROY'
    STMT_START {                                                \
               ^
LMDB.xs:282:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                COND_DESTROY(&info->cond);
                ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:277:5: note: expanded from macro 'COND_DESTROY'
    } STMT_END
    ^
LMDB.xs:282:3: note: ')' token is here
                COND_DESTROY(&info->cond);
                ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:277:7: note: expanded from macro 'COND_DESTROY'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:283:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                MUTEX_DESTROY(&info->data_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:230:5: note: expanded from macro 'MUTEX_DESTROY'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:283:3: note: '{' token is here
                MUTEX_DESTROY(&info->data_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:230:16: note: expanded from macro 'MUTEX_DESTROY'
    STMT_START {                                                \
               ^
LMDB.xs:283:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                MUTEX_DESTROY(&info->data_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:235:5: note: expanded from macro 'MUTEX_DESTROY'
    } STMT_END
    ^
LMDB.xs:283:3: note: ')' token is here
                MUTEX_DESTROY(&info->data_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:235:7: note: expanded from macro 'MUTEX_DESTROY'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:284:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                MUTEX_UNLOCK(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:284:3: note: '{' token is here
                MUTEX_UNLOCK(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
LMDB.xs:284:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                MUTEX_UNLOCK(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
LMDB.xs:284:3: note: ')' token is here
                MUTEX_UNLOCK(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:285:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                MUTEX_DESTROY(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:230:5: note: expanded from macro 'MUTEX_DESTROY'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:285:3: note: '{' token is here
                MUTEX_DESTROY(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:230:16: note: expanded from macro 'MUTEX_DESTROY'
    STMT_START {                                                \
               ^
LMDB.xs:285:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                MUTEX_DESTROY(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:235:5: note: expanded from macro 'MUTEX_DESTROY'
    } STMT_END
    ^
LMDB.xs:285:3: note: ')' token is here
                MUTEX_DESTROY(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:235:7: note: expanded from macro 'MUTEX_DESTROY'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:289:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                MUTEX_UNLOCK(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:289:3: note: '{' token is here
                MUTEX_UNLOCK(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
LMDB.xs:289:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                MUTEX_UNLOCK(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
LMDB.xs:289:3: note: ')' token is here
                MUTEX_UNLOCK(&info->count_mutex);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:295:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1368:5: note: expanded from macro 'SvPV_free'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:295:2: note: '{' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1368:16: note: expanded from macro 'SvPV_free'
    STMT_START {                                                        \
               ^
LMDB.xs:295:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2331:36: note: expanded from macro 'SvOOK_offset'
#  define SvOOK_offset(sv, offset) STMT_START {                         \
                                   ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:295:2: note: '{' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2331:47: note: expanded from macro 'SvOOK_offset'
#  define SvOOK_offset(sv, offset) STMT_START {                         \
                                              ^
LMDB.xs:295:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2342:5: note: expanded from macro 'SvOOK_offset'
    } STMT_END
    ^
LMDB.xs:295:2: note: ')' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2342:7: note: expanded from macro 'SvOOK_offset'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:295:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1313:2: note: expanded from macro 'SvPV_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:295:2: note: '{' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1313:13: note: expanded from macro 'SvPV_set'
        STMT_START { \
                   ^
LMDB.xs:295:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1318:32: note: expanded from macro 'SvPV_set'
                ((sv)->sv_u.svu_pv = (val)); } STMT_END
                                             ^
LMDB.xs:295:2: note: ')' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1318:34: note: expanded from macro 'SvPV_set'
                ((sv)->sv_u.svu_pv = (val)); } STMT_END
                                               ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:295:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1380:4: note: expanded from macro 'SvPV_free'
                 } STMT_END
                 ^
LMDB.xs:295:2: note: ')' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1380:6: note: expanded from macro 'SvPV_free'
                 } STMT_END
                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:306:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MUTEX_LOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:306:2: note: '{' token is here
        MUTEX_LOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
LMDB.xs:306:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MUTEX_LOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
LMDB.xs:306:2: note: ')' token is here
        MUTEX_LOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:309:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MUTEX_UNLOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:309:2: note: '{' token is here
        MUTEX_UNLOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
LMDB.xs:309:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MUTEX_UNLOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
LMDB.xs:309:2: note: ')' token is here
        MUTEX_UNLOCK(&info->count_mutex);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:348:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1368:5: note: expanded from macro 'SvPV_free'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:348:2: note: '{' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1368:16: note: expanded from macro 'SvPV_free'
    STMT_START {                                                        \
               ^
LMDB.xs:348:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2331:36: note: expanded from macro 'SvOOK_offset'
#  define SvOOK_offset(sv, offset) STMT_START {                         \
                                   ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:348:2: note: '{' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2331:47: note: expanded from macro 'SvOOK_offset'
#  define SvOOK_offset(sv, offset) STMT_START {                         \
                                              ^
LMDB.xs:348:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2342:5: note: expanded from macro 'SvOOK_offset'
    } STMT_END
    ^
LMDB.xs:348:2: note: ')' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1374:9: note: expanded from macro 'SvPV_free'
                             SvOOK_offset(sv, zok);                     \
                             ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2342:7: note: expanded from macro 'SvOOK_offset'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:348:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1313:2: note: expanded from macro 'SvPV_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:348:2: note: '{' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1313:13: note: expanded from macro 'SvPV_set'
        STMT_START { \
                   ^
LMDB.xs:348:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1318:32: note: expanded from macro 'SvPV_set'
                ((sv)->sv_u.svu_pv = (val)); } STMT_END
                                             ^
LMDB.xs:348:2: note: ')' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1375:9: note: expanded from macro 'SvPV_free'
                             SvPV_set(sv, SvPVX_mutable(sv) - zok);     \
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1318:34: note: expanded from macro 'SvPV_set'
                ((sv)->sv_u.svu_pv = (val)); } STMT_END
                                               ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:348:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1380:4: note: expanded from macro 'SvPV_free'
                 } STMT_END
                 ^
LMDB.xs:348:2: note: ')' token is here
        SvPV_free(var);
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1380:6: note: expanded from macro 'SvPV_free'
                 } STMT_END
                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:366:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    MUTEX_INIT(&info->count_mutex);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:197:5: note: expanded from macro 'MUTEX_INIT'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:366:5: note: '{' token is here
    MUTEX_INIT(&info->count_mutex);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:197:16: note: expanded from macro 'MUTEX_INIT'
    STMT_START {                                                \
               ^
LMDB.xs:366:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    MUTEX_INIT(&info->count_mutex);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:202:5: note: expanded from macro 'MUTEX_INIT'
    } STMT_END
    ^
LMDB.xs:366:5: note: ')' token is here
    MUTEX_INIT(&info->count_mutex);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:202:7: note: expanded from macro 'MUTEX_INIT'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:367:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    MUTEX_INIT(&info->data_mutex);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:197:5: note: expanded from macro 'MUTEX_INIT'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:367:5: note: '{' token is here
    MUTEX_INIT(&info->data_mutex);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:197:16: note: expanded from macro 'MUTEX_INIT'
    STMT_START {                                                \
               ^
LMDB.xs:367:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    MUTEX_INIT(&info->data_mutex);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:202:5: note: expanded from macro 'MUTEX_INIT'
    } STMT_END
    ^
LMDB.xs:367:5: note: ')' token is here
    MUTEX_INIT(&info->data_mutex);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:202:7: note: expanded from macro 'MUTEX_INIT'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:368:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    COND_INIT(&info->cond);
    ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:240:5: note: expanded from macro 'COND_INIT'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:368:5: note: '{' token is here
    COND_INIT(&info->cond);
    ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:240:16: note: expanded from macro 'COND_INIT'
    STMT_START {                                                \
               ^
LMDB.xs:368:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    COND_INIT(&info->cond);
    ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:245:5: note: expanded from macro 'COND_INIT'
    } STMT_END
    ^
LMDB.xs:368:5: note: ')' token is here
    COND_INIT(&info->cond);
    ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:245:7: note: expanded from macro 'COND_INIT'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:395:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SvTAINTED_on(var);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1494:27: note: expanded from macro 'SvTAINTED_on'
#define SvTAINTED_on(sv)  STMT_START{ if(UNLIKELY(TAINTING_get)){sv_taint(sv);}   }STMT_END
                          ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:395:5: note: '{' token is here
    SvTAINTED_on(var);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1494:37: note: expanded from macro 'SvTAINTED_on'
#define SvTAINTED_on(sv)  STMT_START{ if(UNLIKELY(TAINTING_get)){sv_taint(sv);}   }STMT_END
                                    ^
LMDB.xs:395:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SvTAINTED_on(var);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1494:83: note: expanded from macro 'SvTAINTED_on'
#define SvTAINTED_on(sv)  STMT_START{ if(UNLIKELY(TAINTING_get)){sv_taint(sv);}   }STMT_END
                                                                                  ^
LMDB.xs:395:5: note: ')' token is here
    SvTAINTED_on(var);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1494:84: note: expanded from macro 'SvTAINTED_on'
#define SvTAINTED_on(sv)  STMT_START{ if(UNLIKELY(TAINTING_get)){sv_taint(sv);}   }STMT_END
                                                                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:441:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    PUSHMARK(SP);
    ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:5: note: expanded from macro 'PUSHMARK'
    STMT_START {                                                      \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:441:5: note: '{' token is here
    PUSHMARK(SP);
    ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:16: note: expanded from macro 'PUSHMARK'
    STMT_START {                                                      \
               ^
LMDB.xs:441:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    PUSHMARK(SP);
    ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:5: note: expanded from macro 'PUSHMARK'
    } STMT_END
    ^
LMDB.xs:441:5: note: ')' token is here
    PUSHMARK(SP);
    ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:7: note: expanded from macro 'PUSHMARK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:579:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:579:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:579:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:579:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:579:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:579:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:579:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:579:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:744:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(0));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:744:2: note: '{' token is here
        SvSETMAGIC(ST(0));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:744:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(0));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:744:2: note: ')' token is here
        SvSETMAGIC(ST(0));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:745:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:745:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:745:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:745:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:745:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:745:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:745:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:745:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:747:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:747:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:747:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:747:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:594:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:594:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:594:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:594:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:594:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:594:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:594:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:594:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:794:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:794:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:794:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:794:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:794:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:794:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:794:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:794:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:796:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:796:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:796:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:796:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:615:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:615:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:615:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:615:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:615:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:615:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:615:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:615:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:839:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:839:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:839:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:839:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:839:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:839:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:839:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:839:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:841:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:841:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:841:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:841:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:631:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:631:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:631:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:631:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:631:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:631:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:631:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:631:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:884:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:884:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:884:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:884:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:884:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:884:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:884:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:884:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:886:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:886:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:886:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:886:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:922:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:922:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:922:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:922:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:653:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(res);
        ^~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:653:2: note: '{' token is here
        ProcError(res);
        ^~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:653:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(res);
        ^~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:653:2: note: '{' token is here
        ProcError(res);
        ^~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:653:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(res);
        ^~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:653:2: note: ')' token is here
        ProcError(res);
        ^~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:653:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(res);
        ^~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:653:2: note: ')' token is here
        ProcError(res);
        ^~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:967:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:967:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:967:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:967:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1001:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1001:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1001:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1001:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1001:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1001:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1001:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1001:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1003:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1003:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1003:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1003:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1038:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1038:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
LMDB.c:1038:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1038:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1038:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1038:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1038:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
LMDB.c:1038:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1068:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1068:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1068:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1068:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1068:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1068:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1068:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1068:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1070:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1070:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1070:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1070:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1104:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1104:2: note: '{' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:1104:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:1104:2: note: ')' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1105:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1105:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1105:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1105:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1105:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1105:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1105:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1105:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1107:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1107:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1135:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1135:2: note: '{' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:1135:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:1135:2: note: ')' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1136:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1136:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1136:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1136:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1136:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1136:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1136:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1136:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1138:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1138:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1138:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1138:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:712:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:712:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:712:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:712:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:712:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:712:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:712:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:712:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1169:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1169:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1169:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1169:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1169:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1169:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1169:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1169:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1171:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1171:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:719:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:719:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:719:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:719:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:719:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:719:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:719:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:719:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1202:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1202:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1202:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1202:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1202:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1202:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1202:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1202:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1204:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1204:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1204:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1204:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1232:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1232:2: note: '{' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:1232:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:1232:2: note: ')' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:728:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:728:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:728:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:728:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:728:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:728:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:728:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:728:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1236:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1236:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1236:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1236:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1236:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1236:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1236:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1236:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1238:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1238:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1238:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1238:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:735:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:735:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:735:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:735:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:735:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:735:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:735:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:735:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1269:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1269:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1269:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1269:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1269:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1269:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1269:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1269:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1271:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1271:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1271:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1271:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1297:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1297:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1297:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1297:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1297:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1297:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1297:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1297:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1299:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1299:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1299:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1299:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1326:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1326:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1326:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1326:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
LMDB.c:1326:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
LMDB.c:1326:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1326:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1326:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1328:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1328:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1328:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1328:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1347:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1347:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
LMDB.c:1347:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1347:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1347:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1347:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1347:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
LMDB.c:1347:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:773:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:773:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:773:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:773:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:773:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:773:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:773:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:773:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1393:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1393:2: note: '{' token is here
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:1393:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:1393:2: note: ')' token is here
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1394:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1394:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1394:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1394:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1394:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1394:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1394:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1394:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1396:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1396:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1396:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1396:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1423:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1423:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1423:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1423:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
LMDB.c:1423:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
LMDB.c:1423:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1423:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1423:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1425:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1425:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1425:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1425:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:789:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:789:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:789:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:789:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:789:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:789:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:789:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:789:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1454:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1454:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1454:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1454:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1454:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1454:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1454:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1454:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1456:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1456:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1481:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1481:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
LMDB.c:1481:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1481:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1481:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1481:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1481:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
LMDB.c:1481:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1506:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1506:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
LMDB.c:1506:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1506:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1506:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1506:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1506:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
LMDB.c:1506:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:803:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:803:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:803:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:803:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:803:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:803:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:803:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:803:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1535:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1535:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1535:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1535:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1535:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1535:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1535:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1535:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1537:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1537:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1537:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1537:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1564:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1564:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1564:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1564:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
LMDB.c:1564:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
LMDB.c:1564:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1564:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1564:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1566:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1566:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1566:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1566:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1595:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1595:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1595:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1595:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
LMDB.c:1595:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
LMDB.c:1595:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1595:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1595:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1597:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1597:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1597:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1597:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:833:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:833:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:833:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:833:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:833:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:833:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:833:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:833:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1638:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1638:2: note: '{' token is here
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:1638:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:1638:2: note: ')' token is here
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1639:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1639:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1639:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1639:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1639:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1639:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1639:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1639:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1641:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1641:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1641:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1641:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1671:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1671:2: note: '{' token is here
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:1671:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:1671:2: note: ')' token is here
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1672:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1672:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1672:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1672:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1672:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1672:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1672:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1672:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1674:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1674:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1674:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1674:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1699:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1699:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
LMDB.c:1699:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1699:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1699:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1699:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1699:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
LMDB.c:1699:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1727:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1727:2: note: '{' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:1727:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:1727:2: note: ')' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1728:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1728:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1728:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1728:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1728:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1728:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1728:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1728:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1730:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1730:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1730:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1730:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1756:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1756:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1756:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1756:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1756:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1756:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1756:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1756:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1758:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1758:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1758:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1758:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1795:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1795:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1795:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1795:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1795:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1795:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1795:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1795:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1797:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1797:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1797:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1797:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1824:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:18: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1824:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:29: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1824:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:5: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1824:13: note: '{' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:414:16: note: expanded from macro 'TARGu'
    STMT_START {                                                        \
               ^
LMDB.c:1824:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:5: note: expanded from macro 'TARGu'
    } STMT_END
    ^
LMDB.c:1824:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:31: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:432:7: note: expanded from macro 'TARGu'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1824:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:56: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1824:13: note: ')' token is here
        XSprePUSH; PUSHu((UV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:460:58: note: expanded from macro 'PUSHu'
#define PUSHu(u)        STMT_START { TARGu(u,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1826:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1826:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1826:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1826:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1862:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                SvIV_please(ST(1));
                ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1862:3: note: '{' token is here
                SvIV_please(ST(1));
                ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:1862:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                SvIV_please(ST(1));
                ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:1862:3: note: ')' token is here
                SvIV_please(ST(1));
                ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1870:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(2), data)
        ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1870:2: note: '{' token is here
        Sv2DBD(ST(2), data)
        ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:1870:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(2), data)
        ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:1870:2: note: ')' token is here
        Sv2DBD(ST(2), data)
        ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:891:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:891:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:16: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
               ^
LMDB.xs:891:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:891:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:891:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:891:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:891:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:5: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:891:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:16: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
               ^
LMDB.xs:891:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:891:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:891:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:891:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:891:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:5: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
    ^
LMDB.xs:891:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:7: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:891:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
    ^
LMDB.xs:891:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:7: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:893:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:5: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:893:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:16: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
               ^
LMDB.xs:893:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:26: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                         ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:893:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:37: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                                    ^
LMDB.xs:893:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:5: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
    ^
LMDB.xs:893:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:7: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:893:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:5: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:893:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:16: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:893:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:893:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:893:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:893:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:893:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:5: note: expanded from macro 'POPSTACK'
    } STMT_END
    ^
LMDB.xs:893:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:7: note: expanded from macro 'POPSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:893:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:893:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:893:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:893:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:893:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:5: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
    ^
LMDB.xs:893:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:7: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:894:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:894:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:894:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:894:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:894:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:894:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:894:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:894:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1896:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1896:2: note: '{' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:1896:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:1896:2: note: ')' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1898:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1898:2: note: '{' token is here
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:1898:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:1898:2: note: ')' token is here
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1899:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1899:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1899:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1899:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1899:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1899:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1899:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1899:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1901:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1901:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1901:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1901:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1937:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                SvIV_please(ST(1));
                ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1937:3: note: '{' token is here
                SvIV_please(ST(1));
                ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:1937:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                SvIV_please(ST(1));
                ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:1937:3: note: ')' token is here
                SvIV_please(ST(1));
                ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:917:28: warning: format specifies type 'int' but the argument has type 'size_t' (aka 'unsigned long') [-Wformat]
                      "LMDB_File::_put", max_size);
                                         ^~~~~~~~
LMDB.xs:924:28: warning: format specifies type 'int' but the argument has type 'unsigned long' [-Wformat]
                      "LMDB_File::_put", sizeof(MyInt));
                                         ^~~~~~~~~~~~~
LMDB.xs:926:51: warning: format specifies type 'char *' but the argument has type 'size_t' (aka 'unsigned long') [-Wformat]
                croak("%s: MDB_RESERVE length should be <= %d", max_size);
                       ~~                                       ^~~~~~~~
                       %zu
LMDB.xs:926:47: warning: more '%' conversions than data arguments [-Wformat-insufficient-args]
                croak("%s: MDB_RESERVE length should be <= %d", max_size);
                                                           ~^
LMDB.xs:931:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            Sv2DBD(ST(2), data);
            ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:931:6: note: '{' token is here
            Sv2DBD(ST(2), data);
            ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.xs:931:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            Sv2DBD(ST(2), data);
            ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.xs:931:6: note: ')' token is here
            Sv2DBD(ST(2), data);
            ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:933:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:933:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:16: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
               ^
LMDB.xs:933:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:933:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:933:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:933:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:933:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:5: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:933:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:16: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
               ^
LMDB.xs:933:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:933:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:933:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:933:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:933:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:5: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
    ^
LMDB.xs:933:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:7: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:933:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
    ^
LMDB.xs:933:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:7: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:935:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:5: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:935:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:16: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
               ^
LMDB.xs:935:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:26: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                         ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:935:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:37: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                                    ^
LMDB.xs:935:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:5: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
    ^
LMDB.xs:935:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:7: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:935:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:5: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:935:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:16: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:935:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:935:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:935:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:935:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:935:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:5: note: expanded from macro 'POPSTACK'
    } STMT_END
    ^
LMDB.xs:935:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:7: note: expanded from macro 'POPSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:935:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:935:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:935:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:935:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:935:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:5: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
    ^
LMDB.xs:935:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:7: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:938:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvSETMAGIC(ST(2));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:938:6: note: '{' token is here
            SvSETMAGIC(ST(2));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.xs:938:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvSETMAGIC(ST(2));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.xs:938:6: note: ')' token is here
            SvSETMAGIC(ST(2));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:940:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:940:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:940:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:940:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:940:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:940:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:940:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:940:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:943:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvSETMAGIC(ST(2));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:943:6: note: '{' token is here
            SvSETMAGIC(ST(2));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.xs:943:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvSETMAGIC(ST(2));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.xs:943:6: note: ')' token is here
            SvSETMAGIC(ST(2));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1991:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1991:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:1991:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1991:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:1991:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:1991:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1991:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:1991:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:1993:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:1993:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:1993:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:1993:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:955:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:955:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:16: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
               ^
LMDB.xs:955:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:955:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:955:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:955:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:955:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:5: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:955:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:16: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
               ^
LMDB.xs:955:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:955:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:955:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:955:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:955:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:5: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
    ^
LMDB.xs:955:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:7: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:955:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
    ^
LMDB.xs:955:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:7: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:957:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:5: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:957:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:16: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
               ^
LMDB.xs:957:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:26: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                         ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:957:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:37: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                                    ^
LMDB.xs:957:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:5: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
    ^
LMDB.xs:957:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:7: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:957:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:5: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:957:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:16: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:957:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:957:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:957:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:957:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:957:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:5: note: expanded from macro 'POPSTACK'
    } STMT_END
    ^
LMDB.xs:957:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:7: note: expanded from macro 'POPSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:957:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:957:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:957:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:957:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:957:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:5: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
    ^
LMDB.xs:957:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:7: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:958:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:958:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:958:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:958:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:958:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:958:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:958:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:958:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2040:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2040:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2040:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2040:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:2040:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:2040:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2040:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:2040:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2042:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2042:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2042:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2042:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2046:32: warning: unknown warning group '-Wmaybe-uninitialized', ignored [-Wunknown-warning-option]
#pragma GCC diagnostic ignored "-Wmaybe-uninitialized"
                               ^
./const-xs.inc:36:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(SP, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./const-xs.inc:36:11: note: '{' token is here
          EXTEND(SP, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./const-xs.inc:36:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(SP, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./const-xs.inc:36:11: note: ')' token is here
          EXTEND(SP, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./const-xs.inc:38:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHi(iv);
          ^~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./const-xs.inc:38:11: note: '{' token is here
          PUSHi(iv);
          ^~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
./const-xs.inc:38:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHi(iv);
          ^~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./const-xs.inc:38:11: note: '{' token is here
          PUSHi(iv);
          ^~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
./const-xs.inc:38:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHi(iv);
          ^~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
./const-xs.inc:38:11: note: ')' token is here
          PUSHi(iv);
          ^~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./const-xs.inc:38:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHi(iv);
          ^~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
./const-xs.inc:38:11: note: ')' token is here
          PUSHi(iv);
          ^~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./const-xs.inc:53:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(SP, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./const-xs.inc:53:11: note: '{' token is here
          EXTEND(SP, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./const-xs.inc:53:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          EXTEND(SP, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./const-xs.inc:53:11: note: ')' token is here
          EXTEND(SP, 2);
          ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./const-xs.inc:55:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:20: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./const-xs.inc:55:11: note: '{' token is here
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:31: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                   ^
./const-xs.inc:55:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:60: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./const-xs.inc:55:11: note: '{' token is here
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:60: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
./const-xs.inc:55:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:60: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./const-xs.inc:55:11: note: '{' token is here
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:60: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
./const-xs.inc:55:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:60: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
./const-xs.inc:55:11: note: ')' token is here
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:60: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./const-xs.inc:55:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:60: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
./const-xs.inc:55:11: note: ')' token is here
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:60: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./const-xs.inc:55:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:70: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                          ^
./const-xs.inc:55:11: note: ')' token is here
          PUSHp(pv, strlen(pv));
          ^~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:457:72: note: expanded from macro 'PUSHp'
#define PUSHp(p,l)      STMT_START { sv_setpvn(TARG, (p), (l)); PUSHTARG; } STMT_END
                                                                            ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2159:32: warning: unknown warning group '-Wmaybe-uninitialized', ignored [-Wunknown-warning-option]
#pragma GCC diagnostic warning "-Wmaybe-uninitialized"
                               ^
LMDB.c:2196:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2196:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2196:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2196:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:989:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:989:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:989:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:989:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:989:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:989:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:989:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:989:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2229:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2229:2: note: '{' token is here
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:2229:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:2229:2: note: ')' token is here
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2230:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2230:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2230:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2230:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:2230:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:2230:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2230:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:2230:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2232:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2232:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2232:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2232:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2259:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2259:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
LMDB.c:2259:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2259:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2259:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2259:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2259:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
LMDB.c:2259:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1005:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1005:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:1005:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1005:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:1005:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:1005:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1005:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:1005:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2292:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2292:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2292:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2292:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:2292:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:2292:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2292:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:2292:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2294:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2294:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2294:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2294:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2329:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2329:6: note: '{' token is here
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:2329:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:2329:6: note: ')' token is here
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1043:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1043:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:16: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
               ^
LMDB.xs:1043:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1043:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1043:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1043:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1043:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:5: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1043:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:16: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
               ^
LMDB.xs:1043:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1043:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1043:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1043:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1043:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:5: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
    ^
LMDB.xs:1043:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:7: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1043:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
    ^
LMDB.xs:1043:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:7: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1045:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:5: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1045:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:16: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
               ^
LMDB.xs:1045:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:26: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                         ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1045:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:37: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                                    ^
LMDB.xs:1045:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:5: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
    ^
LMDB.xs:1045:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:7: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1045:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:5: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1045:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:16: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1045:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1045:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1045:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1045:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1045:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:5: note: expanded from macro 'POPSTACK'
    } STMT_END
    ^
LMDB.xs:1045:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:7: note: expanded from macro 'POPSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1045:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1045:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1045:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1045:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1045:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:5: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
    ^
LMDB.xs:1045:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:7: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1046:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1046:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:1046:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1046:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:1046:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:1046:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1046:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:1046:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2345:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2345:2: note: '{' token is here
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:2345:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:2345:2: note: ')' token is here
        SvSETMAGIC(ST(3));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2346:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2346:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2346:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2346:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:2346:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:2346:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2346:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:2346:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2348:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2348:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2348:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2348:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2384:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2384:6: note: '{' token is here
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:2384:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:2384:6: note: ')' token is here
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1068:28: warning: format specifies type 'int' but the argument has type 'size_t' (aka 'unsigned long') [-Wformat]
                      "LMDB_File::_put", max_size);
                                         ^~~~~~~~
LMDB.xs:1075:28: warning: format specifies type 'int' but the argument has type 'unsigned long' [-Wformat]
                      "LMDB_File::_put", sizeof(MyInt));
                                         ^~~~~~~~~~~~~
LMDB.xs:1077:51: warning: format specifies type 'char *' but the argument has type 'size_t' (aka 'unsigned long') [-Wformat]
                croak("%s: MDB_RESERVE length should be <= %d", max_size);
                       ~~                                       ^~~~~~~~
                       %zu
LMDB.xs:1077:47: warning: more '%' conversions than data arguments [-Wformat-insufficient-args]
                croak("%s: MDB_RESERVE length should be <= %d", max_size);
                                                           ~^
LMDB.xs:1082:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            Sv2DBD(ST(3), data);
            ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1082:6: note: '{' token is here
            Sv2DBD(ST(3), data);
            ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.xs:1082:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            Sv2DBD(ST(3), data);
            ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.xs:1082:6: note: ')' token is here
            Sv2DBD(ST(3), data);
            ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1084:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1084:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:16: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
               ^
LMDB.xs:1084:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1084:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1084:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1084:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1084:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:5: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1084:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:16: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
               ^
LMDB.xs:1084:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1084:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1084:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1084:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1084:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:5: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
    ^
LMDB.xs:1084:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:7: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1084:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
    ^
LMDB.xs:1084:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:7: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1086:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:5: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1086:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:16: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
               ^
LMDB.xs:1086:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:26: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                         ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1086:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:37: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                                    ^
LMDB.xs:1086:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:5: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
    ^
LMDB.xs:1086:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:7: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1086:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:5: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1086:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:16: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1086:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1086:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1086:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1086:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1086:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:5: note: expanded from macro 'POPSTACK'
    } STMT_END
    ^
LMDB.xs:1086:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:7: note: expanded from macro 'POPSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1086:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1086:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1086:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1086:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1086:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:5: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
    ^
LMDB.xs:1086:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:7: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1089:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvSETMAGIC(ST(3));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1089:6: note: '{' token is here
            SvSETMAGIC(ST(3));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.xs:1089:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvSETMAGIC(ST(3));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.xs:1089:6: note: ')' token is here
            SvSETMAGIC(ST(3));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1091:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1091:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:1091:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1091:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:1091:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:1091:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1091:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:1091:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1094:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvSETMAGIC(ST(3));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1094:6: note: '{' token is here
            SvSETMAGIC(ST(3));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.xs:1094:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvSETMAGIC(ST(3));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.xs:1094:6: note: ')' token is here
            SvSETMAGIC(ST(3));
            ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2437:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2437:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2437:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2437:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:2437:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:2437:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2437:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:2437:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2439:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2439:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2439:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2439:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2474:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2474:6: note: '{' token is here
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:2474:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:2474:6: note: ')' token is here
            SvIV_please(ST(2));
            ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2481:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(3), data)
        ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2481:2: note: '{' token is here
        Sv2DBD(ST(3), data)
        ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:2481:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(3), data)
        ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:2481:2: note: ')' token is here
        Sv2DBD(ST(3), data)
        ^~~~~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1107:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1107:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:16: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
               ^
LMDB.xs:1107:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1107:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1107:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1107:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1107:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:5: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1107:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:16: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
               ^
LMDB.xs:1107:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1107:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1107:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1107:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1107:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:5: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
    ^
LMDB.xs:1107:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:7: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1107:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
    ^
LMDB.xs:1107:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:7: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1110:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:5: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1110:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:16: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
               ^
LMDB.xs:1110:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:26: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                         ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1110:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:37: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                                    ^
LMDB.xs:1110:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:5: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
    ^
LMDB.xs:1110:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:7: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1110:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:5: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1110:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:16: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1110:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1110:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1110:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1110:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1110:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:5: note: expanded from macro 'POPSTACK'
    } STMT_END
    ^
LMDB.xs:1110:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:7: note: expanded from macro 'POPSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1110:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1110:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1110:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1110:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1110:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:5: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
    ^
LMDB.xs:1110:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:7: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1111:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1111:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
LMDB.xs:1111:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1111:2: note: '{' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.xs:1111:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.xs:1111:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1111:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
LMDB.xs:1111:2: note: ')' token is here
        ProcError(RETVAL);
        ^~~~~~~~~~~~~~~~~
LMDB.xs:570:2: note: expanded from macro 'ProcError'
        XSRETURN_IV(res);                       \
        ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2491:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2491:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2491:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2491:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:2491:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:2491:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2491:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:2491:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2493:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2493:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2493:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2493:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2527:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(2), a)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2527:2: note: '{' token is here
        Sv2DBD(ST(2), a)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:2527:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(2), a)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:2527:2: note: ')' token is here
        Sv2DBD(ST(2), a)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2530:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(3), b)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2530:2: note: '{' token is here
        Sv2DBD(ST(3), b)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:2530:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(3), b)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:2530:2: note: ')' token is here
        Sv2DBD(ST(3), b)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1125:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1125:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:16: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
               ^
LMDB.xs:1125:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1125:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1125:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1125:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1125:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:5: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1125:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:16: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
               ^
LMDB.xs:1125:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1125:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1125:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1125:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1125:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:5: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
    ^
LMDB.xs:1125:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:7: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1125:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
    ^
LMDB.xs:1125:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:7: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1127:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:5: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1127:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:16: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
               ^
LMDB.xs:1127:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:26: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                         ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1127:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:37: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                                    ^
LMDB.xs:1127:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:5: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
    ^
LMDB.xs:1127:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:7: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1127:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:5: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1127:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:16: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1127:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1127:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1127:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1127:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1127:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:5: note: expanded from macro 'POPSTACK'
    } STMT_END
    ^
LMDB.xs:1127:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:7: note: expanded from macro 'POPSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1127:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1127:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1127:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1127:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1127:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:5: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
    ^
LMDB.xs:1127:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:7: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2540:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2540:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2540:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2540:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:2540:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:2540:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2540:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:2540:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2542:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2542:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2542:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2542:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2576:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(2), a)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2576:2: note: '{' token is here
        Sv2DBD(ST(2), a)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:2576:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(2), a)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:2576:2: note: ')' token is here
        Sv2DBD(ST(2), a)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2579:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(3), b)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:2: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2579:2: note: '{' token is here
        Sv2DBD(ST(3), b)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1296:13: note: expanded from macro 'SvIV_please'
        STMT_START {if (!SvIOKp(sv) && (SvFLAGS(sv) & (SVf_NOK|SVf_POK))) \
                   ^
LMDB.c:2579:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        Sv2DBD(ST(3), b)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:20: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                 ^
LMDB.c:2579:2: note: ')' token is here
        Sv2DBD(ST(3), b)
        ^~~~~~~~~~~~~~~~
LMDB.xs:189:2: note: expanded from macro 'Sv2DBD'
        SvIV_please(sv);                                        \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1297:22: note: expanded from macro 'SvIV_please'
                (void) SvIV(sv); } STMT_END
                                   ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1139:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1139:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1165:16: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    STMT_START {                                                        \
               ^
LMDB.xs:1139:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1139:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1139:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1139:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1171:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        CATCH_SET(TRUE);                                                \
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1139:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:5: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1139:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1077:16: note: expanded from macro 'PUSHSTACKi'
    STMT_START {                                                        \
               ^
LMDB.xs:1139:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1139:2: note: '{' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1139:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1139:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1094:2: note: expanded from macro 'PUSHSTACKi'
        SWITCHSTACK(PL_curstack,next->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1139:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:5: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
    ^
LMDB.xs:1139:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1172:2: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
        PUSHSTACKi(PERLSI_MULTICALL);                                   \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1097:7: note: expanded from macro 'PUSHSTACKi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1139:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:5: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
    ^
LMDB.xs:1139:2: note: ')' token is here
        MY_PUSH_MULTICALL;
        ^~~~~~~~~~~~~~~~~
LMDB.xs:518:2: note: expanded from macro 'MY_PUSH_MULTICALL'
        PUSH_MULTICALL((CV *)SvRV(my_dcmpsv));  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1159:5: note: expanded from macro 'PUSH_MULTICALL'
    PUSH_MULTICALL_FLAGS(the_cv, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1183:7: note: expanded from macro 'PUSH_MULTICALL_FLAGS'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1141:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:5: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1141:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1192:16: note: expanded from macro 'POP_MULTICALL'
    STMT_START {                                                        \
               ^
LMDB.xs:1141:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:26: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                         ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1141:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:221:37: note: expanded from macro 'LEAVE_SCOPE'
#define LEAVE_SCOPE(old) STMT_START { \
                                    ^
LMDB.xs:1141:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:5: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
    ^
LMDB.xs:1141:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1195:2: note: expanded from macro 'POP_MULTICALL'
        CX_LEAVE_SCOPE(cx);                                             \
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:625:28: note: expanded from macro 'CX_LEAVE_SCOPE'
#define CX_LEAVE_SCOPE(cx) LEAVE_SCOPE(cx->blk_oldsaveix)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/scope.h:223:7: note: expanded from macro 'LEAVE_SCOPE'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1141:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:5: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1141:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1104:16: note: expanded from macro 'POPSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1141:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:5: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1141:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:539:16: note: expanded from macro 'SWITCHSTACK'
    STMT_START {                                                        \
               ^
LMDB.xs:1141:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:5: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
    ^
LMDB.xs:1141:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1115:2: note: expanded from macro 'POPSTACK'
        SWITCHSTACK(PL_curstack,prev->si_stack);                        \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:545:7: note: expanded from macro 'SWITCHSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1141:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:5: note: expanded from macro 'POPSTACK'
    } STMT_END
    ^
LMDB.xs:1141:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1201:2: note: expanded from macro 'POP_MULTICALL'
        POPSTACK;                                                       \
        ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1118:7: note: expanded from macro 'POPSTACK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1141:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:5: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.xs:1141:2: note: '{' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:159:16: note: expanded from macro 'CATCH_SET'
    STMT_START {                                                        \
               ^
LMDB.xs:1141:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:5: note: expanded from macro 'CATCH_SET'
    } STMT_END
    ^
LMDB.xs:1141:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1202:2: note: expanded from macro 'POP_MULTICALL'
        CATCH_SET(multicall_oldcatch);                                  \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:166:7: note: expanded from macro 'CATCH_SET'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.xs:1141:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:5: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
    ^
LMDB.xs:1141:2: note: ')' token is here
        MY_POP_MULTICALL;
        ^~~~~~~~~~~~~~~~
LMDB.xs:489:49: note: expanded from macro 'MY_POP_MULTICALL'
#define MY_POP_MULTICALL    if(multicall_cop) { POP_MULTICALL; }
                                                ^~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:1204:7: note: expanded from macro 'POP_MULTICALL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2589:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2589:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2589:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2589:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:2589:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:2589:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2589:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:2589:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2591:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2591:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2591:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2591:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2607:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2607:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
LMDB.c:2607:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2607:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2607:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2607:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2607:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
LMDB.c:2607:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2636:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2636:2: note: '{' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:2636:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:2636:2: note: ')' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2637:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:18: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2637:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:29: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2637:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:5: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2637:13: note: '{' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:392:16: note: expanded from macro 'TARGi'
    STMT_START {                                                        \
               ^
LMDB.c:2637:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:5: note: expanded from macro 'TARGi'
    } STMT_END
    ^
LMDB.c:2637:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:31: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:409:7: note: expanded from macro 'TARGi'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2637:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:56: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                              ^
LMDB.c:2637:13: note: ')' token is here
        XSprePUSH; PUSHi((IV)RETVAL);
                   ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:459:58: note: expanded from macro 'PUSHi'
#define PUSHi(i)        STMT_START { TARGi(i,1); PUSHs(TARG); } STMT_END
                                                                ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2639:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2639:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2639:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2639:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2656:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2656:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2656:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2656:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:2656:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:2656:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2656:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
LMDB.c:2656:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2658:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2658:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2658:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2658:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2677:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(0));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2677:2: note: '{' token is here
        SvSETMAGIC(ST(0));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:2677:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(0));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:2677:2: note: ')' token is here
        SvSETMAGIC(ST(0));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2679:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2679:2: note: '{' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:2679:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:2679:2: note: ')' token is here
        SvSETMAGIC(ST(1));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2681:2: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2681:2: note: '{' token is here
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:2681:2: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:2681:2: note: ')' token is here
        SvSETMAGIC(ST(2));
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2682:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2682:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
LMDB.c:2682:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2682:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
LMDB.c:2682:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
LMDB.c:2682:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2682:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
LMDB.c:2682:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
LMDB.c:2684:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
LMDB.c:2684:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
LMDB.c:2684:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
LMDB.c:2684:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
728 warnings generated.
rm -f blib/arch/auto/LMDB_File/LMDB_File.so
x86_64-linux-gnu-gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro  -shared -L/usr/local/lib -fstack-protector-strong  LMDB.o  -o blib/arch/auto/LMDB_File/LMDB_File.so  \
   -llmdb   \
  
chmod 755 blib/arch/auto/LMDB_File/LMDB_File.so
Manifying 1 pod document
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_test
	make -j4 test TEST_VERBOSE=1
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- LMDB_File.bs blib/arch/auto/LMDB_File/LMDB_File.bs 644
PERL_DL_NONLAZY=1 "/usr/bin/perl" "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness(1, 'blib/lib', 'blib/arch')" t/*.t

#   Failed test 'use LMDB_File;'
#   at t/00-basic.t line 7.
#     Tried to use 'LMDB_File'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so' for module LMDB_File: /<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at /<<PKGBUILDDIR>>/blib/lib/LMDB_File.pm line 64.
# Compilation failed in require at t/00-basic.t line 7.
# BEGIN failed--compilation aborted at t/00-basic.t line 7.

#   Failed test 'Constants'
#   at t/00-basic.t line 36.
&LMDB_File::constant not defined at t/00-basic.t line 42.
# Looks like your test exited with 255 just after 2.
t/00-basic.t ........ 
1..3
not ok 1 - use LMDB_File;
# fail: &LMDB_File::constant not defined at (eval 9) line 1.
# fail: &LMDB_File::constant not defined at (eval 10) line 1.
# fail: &LMDB_File::constant not defined at (eval 11) line 1.
# fail: &LMDB_File::constant not defined at (eval 12) line 1.
# fail: &LMDB_File::constant not defined at (eval 13) line 1.
# fail: &LMDB_File::constant not defined at (eval 14) line 1.
# fail: &LMDB_File::constant not defined at (eval 15) line 1.
# fail: &LMDB_File::constant not defined at (eval 16) line 1.
# fail: &LMDB_File::constant not defined at (eval 17) line 1.
# fail: &LMDB_File::constant not defined at (eval 18) line 1.
# fail: &LMDB_File::constant not defined at (eval 19) line 1.
# fail: &LMDB_File::constant not defined at (eval 20) line 1.
# fail: &LMDB_File::constant not defined at (eval 21) line 1.
# fail: &LMDB_File::constant not defined at (eval 22) line 1.
# fail: &LMDB_File::constant not defined at (eval 23) line 1.
# fail: &LMDB_File::constant not defined at (eval 24) line 1.
# fail: &LMDB_File::constant not defined at (eval 25) line 1.
# fail: &LMDB_File::constant not defined at (eval 26) line 1.
# fail: &LMDB_File::constant not defined at (eval 27) line 1.
# fail: &LMDB_File::constant not defined at (eval 28) line 1.
# fail: &LMDB_File::constant not defined at (eval 29) line 1.
# fail: &LMDB_File::constant not defined at (eval 30) line 1.
# fail: &LMDB_File::constant not defined at (eval 31) line 1.
# fail: &LMDB_File::constant not defined at (eval 32) line 1.
# fail: &LMDB_File::constant not defined at (eval 33) line 1.
# fail: &LMDB_File::constant not defined at (eval 34) line 1.
# fail: &LMDB_File::constant not defined at (eval 35) line 1.
# fail: &LMDB_File::constant not defined at (eval 36) line 1.
# fail: &LMDB_File::constant not defined at (eval 37) line 1.
# fail: &LMDB_File::constant not defined at (eval 38) line 1.
# fail: &LMDB_File::constant not defined at (eval 39) line 1.
# fail: &LMDB_File::constant not defined at (eval 40) line 1.
# fail: &LMDB_File::constant not defined at (eval 41) line 1.
# fail: &LMDB_File::constant not defined at (eval 42) line 1.
# fail: &LMDB_File::constant not defined at (eval 43) line 1.
# fail: &LMDB_File::constant not defined at (eval 44) line 1.
# fail: &LMDB_File::constant not defined at (eval 45) line 1.
# fail: &LMDB_File::constant not defined at (eval 46) line 1.
# fail: &LMDB_File::constant not defined at (eval 47) line 1.
# fail: &LMDB_File::constant not defined at (eval 48) line 1.
# fail: &LMDB_File::constant not defined at (eval 49) line 1.
# fail: &LMDB_File::constant not defined at (eval 50) line 1.
# fail: &LMDB_File::constant not defined at (eval 51) line 1.
# fail: &LMDB_File::constant not defined at (eval 52) line 1.
# fail: &LMDB_File::constant not defined at (eval 53) line 1.
# fail: &LMDB_File::constant not defined at (eval 54) line 1.
# fail: &LMDB_File::constant not defined at (eval 55) line 1.
# fail: &LMDB_File::constant not defined at (eval 56) line 1.
# fail: &LMDB_File::constant not defined at (eval 57) line 1.
# fail: &LMDB_File::constant not defined at (eval 58) line 1.
# fail: &LMDB_File::constant not defined at (eval 59) line 1.
# fail: &LMDB_File::constant not defined at (eval 60) line 1.
# fail: &LMDB_File::constant not defined at (eval 61) line 1.
# fail: &LMDB_File::constant not defined at (eval 62) line 1.
# fail: &LMDB_File::constant not defined at (eval 63) line 1.
# fail: &LMDB_File::constant not defined at (eval 64) line 1.
# fail: &LMDB_File::constant not defined at (eval 65) line 1.
# fail: &LMDB_File::constant not defined at (eval 66) line 1.
# fail: &LMDB_File::constant not defined at (eval 67) line 1.
# fail: &LMDB_File::constant not defined at (eval 68) line 1.
# fail: &LMDB_File::constant not defined at (eval 69) line 1.
# fail: &LMDB_File::constant not defined at (eval 70) line 1.
# fail: &LMDB_File::constant not defined at (eval 71) line 1.
# fail: &LMDB_File::constant not defined at (eval 72) line 1.
# fail: &LMDB_File::constant not defined at (eval 73) line 1.
not ok 2 - Constants
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 3/3 subtests 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so' for module LMDB_File: /<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/LMDB_File.pm line 64.
Compilation failed in require at t/01-environment.t line 9.
BEGIN failed--compilation aborted at t/01-environment.t line 9.
# Looks like your test exited with 2 before it could output anything.
t/01-environment.t .. 
1..174
Dubious, test returned 2 (wstat 512, 0x200)
Failed 174/174 subtests 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so' for module LMDB_File: /<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/LMDB_File.pm line 64.
Compilation failed in require at t/02-named.t line 10.
BEGIN failed--compilation aborted at t/02-named.t line 10.
# Looks like your test exited with 2 before it could output anything.
t/02-named.t ........ 
1..50
Dubious, test returned 2 (wstat 512, 0x200)
Failed 50/50 subtests 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so' for module LMDB_File: /<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/LMDB_File.pm line 64.
Compilation failed in require at t/03-fastmode.t line 15.
BEGIN failed--compilation aborted at t/03-fastmode.t line 15.
# Looks like your test exited with 2 before it could output anything.
t/03-fastmode.t ..... 
1..53
Dubious, test returned 2 (wstat 512, 0x200)
Failed 53/53 subtests 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so' for module LMDB_File: /<<PKGBUILDDIR>>/blib/arch/auto/LMDB_File/LMDB_File.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/LMDB_File.pm line 64.
Compilation failed in require at t/04-bigone.t line 8.
BEGIN failed--compilation aborted at t/04-bigone.t line 8.
# Looks like your test exited with 2 before it could output anything.
t/04-bigone.t ....... 
1..14
Dubious, test returned 2 (wstat 512, 0x200)
Failed 14/14 subtests 

Test Summary Report
-------------------
t/00-basic.t      (Wstat: 65280 Tests: 2 Failed: 2)
  Failed tests:  1-2
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 3 tests but ran 2.
t/01-environment.t (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: Bad plan.  You planned 174 tests but ran 0.
t/02-named.t      (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: Bad plan.  You planned 50 tests but ran 0.
t/03-fastmode.t   (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: Bad plan.  You planned 53 tests but ran 0.
t/04-bigone.t     (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: Bad plan.  You planned 14 tests but ran 0.
Files=5, Tests=2,  0 wallclock secs ( 0.03 usr  0.00 sys +  0.29 cusr  0.04 csys =  0.36 CPU)
Result: FAIL
Failed 5/5 test programs. 2/2 subtests failed.
make[1]: *** [Makefile:1033: test_dynamic] Error 2
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
dh_auto_test: error: make -j4 test TEST_VERBOSE=1 returned exit code 2
make: *** [debian/rules:4: binary] Error 25
dpkg-buildpackage: error: debian/rules binary subprocess returned exit status 2
--------------------------------------------------------------------------------
Build finished at 2021-10-26T23:21:43Z

Finished
--------


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use
E: Build failure (dpkg-buildpackage died)

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 1536
Build-Time: 3
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 4
Job: liblmdb-file-perl_0.12-4
Machine Architecture: amd64
Package: liblmdb-file-perl
Package-Time: 28
Source-Version: 0.12-4
Space: 1536
Status: attempted
Version: 0.12-4
--------------------------------------------------------------------------------
Finished at 2021-10-26T23:21:43Z
Build needed 00:00:28, 1536k disk space
E: Build failure (dpkg-buildpackage died)
DC-Status: Failed 28.400696779s
