DC-Build-Header: libclass-xsaccessor-perl 1.19-3 / 2021-10-26 23:27:02 +0000
DC-Task: type:rebuild-binarch-only source:libclass-xsaccessor-perl version:1.19-3 chroot:unstable esttime:34 logfile:/tmp/libclass-xsaccessor-perl_1.19-3_unstable_clang13.log modes:clang13:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang13 libclass-xsaccessor-perl_1.19-3'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-12-73.eu-central-1.compute.internal

+==============================================================================+
| libclass-xsaccessor-perl 1.19-3 (amd64)      Tue, 26 Oct 2021 23:27:02 +0000 |
+==============================================================================+

Package: libclass-xsaccessor-perl
Version: 1.19-3
Source Version: 1.19-3
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-b7f27c0c-e1ba-4a5e-afe0-30c7803d9234' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang13
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=13
+ echo 'Install of clang-13'
Install of clang-13
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [165 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [63.6 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [63.6 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Translation-en [6586 kB]
Fetched 6981 kB in 3s (2759 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-13 libomp-13-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386 libclang-common-13-dev
  libclang-cpp13 libclang1-13 libedit2 libgc1 libgcc-9-dev libicu67 libllvm13
  libmd0 libobjc-11-dev libobjc4 libomp5-13 libxml2 libz3-4
Suggested packages:
  clang-13-doc libomp-13-doc
Recommended packages:
  llvm-13-dev python3
The following NEW packages will be installed:
  clang-13 lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386
  libclang-common-13-dev libclang-cpp13 libclang1-13 libedit2 libgc1
  libgcc-9-dev libicu67 libllvm13 libmd0 libobjc-11-dev libobjc-9-dev libobjc4
  libomp-13-dev libomp5-13 libxml2 libz3-4
0 upgraded, 22 newly installed, 0 to remove and 0 not upgraded.
Need to get 68.5 MB of archives.
After this operation, 379 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libmd0 amd64 1.0.4-1 [29.6 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.11.3-1 [108 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20210910-1 [97.5 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libicu67 amd64 67.1-7 [8622 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.12+dfsg-5 [696 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.12-1+b1 [6997 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libllvm13 amd64 1:13.0.0-8 [19.7 MB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp13 amd64 1:13.0.0-8 [10.5 MB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libgc1 amd64 1:8.0.4-3 [239 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 11.2.0-10 [43.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc-11-dev amd64 11.2.0-10 [170 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.32-4 [2624 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 11.2.0-10 [49.9 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 11.2.0-10 [601 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-13-dev amd64 1:13.0.0-8 [5730 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libclang1-13 amd64 1:13.0.0-8 [6093 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 clang-13 amd64 1:13.0.0-8 [119 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libasan5 amd64 9.4.0-3 [2734 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libgcc-9-dev amd64 9.4.0-3 [2343 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.4.0-3 [219 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libomp5-13 amd64 1:13.0.0-8 [377 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libomp-13-dev amd64 1:13.0.0-8 [482 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 68.5 MB in 0s (155 MB/s)
Selecting previously unselected package libmd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12431 files and directories currently installed.)
Preparing to unpack .../00-libmd0_1.0.4-1_amd64.deb ...
Unpacking libmd0:amd64 (1.0.4-1) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../01-libbsd0_0.11.3-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.11.3-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../02-libedit2_3.1-20210910-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20210910-1) ...
Selecting previously unselected package libicu67:amd64.
Preparing to unpack .../03-libicu67_67.1-7_amd64.deb ...
Unpacking libicu67:amd64 (67.1-7) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../04-libxml2_2.9.12+dfsg-5_amd64.deb ...
Unpacking libxml2:amd64 (2.9.12+dfsg-5) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../05-libz3-4_4.8.12-1+b1_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.12-1+b1) ...
Selecting previously unselected package libllvm13:amd64.
Preparing to unpack .../06-libllvm13_1%3a13.0.0-8_amd64.deb ...
Unpacking libllvm13:amd64 (1:13.0.0-8) ...
Selecting previously unselected package libclang-cpp13.
Preparing to unpack .../07-libclang-cpp13_1%3a13.0.0-8_amd64.deb ...
Unpacking libclang-cpp13 (1:13.0.0-8) ...
Selecting previously unselected package libgc1:amd64.
Preparing to unpack .../08-libgc1_1%3a8.0.4-3_amd64.deb ...
Unpacking libgc1:amd64 (1:8.0.4-3) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../09-libobjc4_11.2.0-10_amd64.deb ...
Unpacking libobjc4:amd64 (11.2.0-10) ...
Selecting previously unselected package libobjc-11-dev:amd64.
Preparing to unpack .../10-libobjc-11-dev_11.2.0-10_amd64.deb ...
Unpacking libobjc-11-dev:amd64 (11.2.0-10) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../11-libc6-i386_2.32-4_amd64.deb ...
Unpacking libc6-i386 (2.32-4) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../12-lib32gcc-s1_11.2.0-10_amd64.deb ...
Unpacking lib32gcc-s1 (11.2.0-10) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../13-lib32stdc++6_11.2.0-10_amd64.deb ...
Unpacking lib32stdc++6 (11.2.0-10) ...
Selecting previously unselected package libclang-common-13-dev.
Preparing to unpack .../14-libclang-common-13-dev_1%3a13.0.0-8_amd64.deb ...
Unpacking libclang-common-13-dev (1:13.0.0-8) ...
Selecting previously unselected package libclang1-13.
Preparing to unpack .../15-libclang1-13_1%3a13.0.0-8_amd64.deb ...
Unpacking libclang1-13 (1:13.0.0-8) ...
Selecting previously unselected package clang-13.
Preparing to unpack .../16-clang-13_1%3a13.0.0-8_amd64.deb ...
Unpacking clang-13 (1:13.0.0-8) ...
Selecting previously unselected package libasan5:amd64.
Preparing to unpack .../17-libasan5_9.4.0-3_amd64.deb ...
Unpacking libasan5:amd64 (9.4.0-3) ...
Selecting previously unselected package libgcc-9-dev:amd64.
Preparing to unpack .../18-libgcc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libgcc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../19-libobjc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libomp5-13:amd64.
Preparing to unpack .../20-libomp5-13_1%3a13.0.0-8_amd64.deb ...
Unpacking libomp5-13:amd64 (1:13.0.0-8) ...
Selecting previously unselected package libomp-13-dev.
Preparing to unpack .../21-libomp-13-dev_1%3a13.0.0-8_amd64.deb ...
Unpacking libomp-13-dev (1:13.0.0-8) ...
Setting up libicu67:amd64 (67.1-7) ...
Setting up libasan5:amd64 (9.4.0-3) ...
Setting up libz3-4:amd64 (4.8.12-1+b1) ...
Setting up libgc1:amd64 (1:8.0.4-3) ...
Setting up libmd0:amd64 (1.0.4-1) ...
Setting up libc6-i386 (2.32-4) ...
Setting up libomp5-13:amd64 (1:13.0.0-8) ...
Setting up libbsd0:amd64 (0.11.3-1) ...
Setting up libxml2:amd64 (2.9.12+dfsg-5) ...
Setting up libedit2:amd64 (3.1-20210910-1) ...
Setting up libobjc4:amd64 (11.2.0-10) ...
Setting up libgcc-9-dev:amd64 (9.4.0-3) ...
Setting up lib32gcc-s1 (11.2.0-10) ...
Setting up lib32stdc++6 (11.2.0-10) ...
Setting up libllvm13:amd64 (1:13.0.0-8) ...
Setting up libobjc-9-dev:amd64 (9.4.0-3) ...
Setting up libclang-common-13-dev (1:13.0.0-8) ...
Setting up libomp-13-dev (1:13.0.0-8) ...
Setting up libobjc-11-dev:amd64 (11.2.0-10) ...
Setting up libclang1-13 (1:13.0.0-8) ...
Setting up libclang-cpp13 (1:13.0.0-8) ...
Setting up clang-13 (1:13.0.0-8) ...
Processing triggers for libc-bin (2.32-4) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10 11'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-13 g++-4.6
+ ln -s clang-13 gcc-4.6
+ ln -s clang-13 cpp-4.6
+ ln -s clang-13 gcc
+ dpkg --set-selections
+ echo 'gcc-4.6 hold'
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-13 g++-4.7
+ ln -s clang-13 gcc-4.7
+ ln -s clang-13 cpp-4.7
+ ln -s clang-13 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-13 g++-4.8
+ ln -s clang-13 gcc-4.8
+ ln -s clang-13 cpp-4.8
+ ln -s clang-13 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-13 g++-4.9
+ ln -s clang-13 gcc-4.9
+ ln -s clang-13 cpp-4.9
+ ln -s clang-13 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-13 g++-5
+ ln -s clang-13 gcc-5
+ ln -s clang-13 cpp-5
+ ln -s clang-13 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-13 g++-6
+ ln -s clang-13 gcc-6
+ ln -s clang-13 cpp-6
+ ln -s clang-13 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-13 g++-7
+ ln -s clang-13 gcc-7
+ ln -s clang-13 cpp-7
+ ln -s clang-13 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-13 g++-8
+ ln -s clang-13 gcc-8
+ ln -s clang-13 cpp-8
+ ln -s clang-13 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-13 g++-9
+ ln -s clang-13 gcc-9
+ ln -s clang-13 cpp-9
+ ln -s clang-13 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-13 g++-10
+ ln -s clang-13 gcc-10
+ ln -s clang-13 cpp-10
+ ln -s clang-13 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-11 gcc-11 cpp-11 gcc
+ ln -s clang++-13 g++-11
+ ln -s clang-13 gcc-11
+ ln -s clang-13 cpp-11
+ ln -s clang-13 gcc
+ echo 'gcc-11 hold'
+ dpkg --set-selections
+ echo 'g++-11 hold'
+ dpkg --set-selections
+ cd -
/build/libclass-xsaccessor-perl-PPbJSX
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang
+ cd /usr/bin/
+ rm -f clang++ clang
+ ln -s clang-13 clang++
+ ln -s clang-13 clang
+ clang++ --version
Debian clang version 13.0.0-8
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ clang --version
Debian clang version 13.0.0-8
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ cd -
/build/libclass-xsaccessor-perl-PPbJSX
+ apt install --yes --no-install-recommends --force-yes qt5-qmake

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  qt5-qmake-bin qtchooser
The following NEW packages will be installed:
  qt5-qmake qt5-qmake-bin qtchooser
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 1322 kB of archives.
After this operation, 4914 kB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake-bin amd64 5.15.2+dfsg-12 [1046 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 qtchooser amd64 66-2 [26.3 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake amd64 5.15.2+dfsg-12 [249 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 1322 kB in 0s (58.3 MB/s)
Selecting previously unselected package qt5-qmake-bin.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13528 files and directories currently installed.)
Preparing to unpack .../qt5-qmake-bin_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake-bin (5.15.2+dfsg-12) ...
Selecting previously unselected package qtchooser.
Preparing to unpack .../qtchooser_66-2_amd64.deb ...
Unpacking qtchooser (66-2) ...
Selecting previously unselected package qt5-qmake:amd64.
Preparing to unpack .../qt5-qmake_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake:amd64 (5.15.2+dfsg-12) ...
Setting up qt5-qmake-bin (5.15.2+dfsg-12) ...
Setting up qtchooser (66-2) ...
Setting up qt5-qmake:amd64 (5.15.2+dfsg-12) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ cp /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qmake.conf /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qplatformdefs.h /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
+ ls -al /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
total 16
drwxr-xr-x  2 root root 4096 Oct 26 23:27 .
drwxr-xr-x 76 root root 4096 Oct 26 23:27 ..
-rw-r--r--  1 root root  276 Oct 26 23:27 qmake.conf
-rw-r--r--  1 root root 3218 Oct 26 23:27 qplatformdefs.h
+ cat /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf
#
# qmake configuration for linux-clang
#

MAKEFILE_GENERATOR = UNIX
CONFIG += incremental

QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/clang.conf)

QMAKE_LFLAGS += -ccc-gcc-name g++

load(qt_config)
+ export QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ sed -i -e 's|compare_problem(2,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ sed -i -e 's|compare_problem(1,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ grep 'compare_problem(' /usr/bin/dpkg-gensymbols
        compare_problem(4, g_('new libraries appeared in the symbols file: %s'), "@libs");
        compare_problem(3, g_('some libraries disappeared in the symbols file: %s'), "@libs");
        compare_problem(0, g_('some new symbols appeared in the symbols file: %s'),
        compare_problem(0, g_('some symbols or patterns disappeared in the symbols file: %s'),

I: Finished running '/tmp/clang13'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/libclass-xsaccessor-perl-PPbJSX/resolver-jaHsor' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'libclass-xsaccessor-perl' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/perl-team/modules/packages/libclass-xsaccessor-perl.git
Please use:
git clone https://salsa.debian.org/perl-team/modules/packages/libclass-xsaccessor-perl.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 86.9 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main libclass-xsaccessor-perl 1.19-3 (dsc) [2384 B]
Get:2 http://127.0.0.1:12990/debian sid/main libclass-xsaccessor-perl 1.19-3 (tar) [80.8 kB]
Get:3 http://127.0.0.1:12990/debian sid/main libclass-xsaccessor-perl 1.19-3 (diff) [3696 B]
Fetched 86.9 kB in 0s (1112 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/libclass-xsaccessor-perl-PPbJSX/libclass-xsaccessor-perl-1.19' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/libclass-xsaccessor-perl-PPbJSX' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper (>= 10), perl, build-essential, fakeroot
Filtered Build-Depends: debhelper (>= 10), perl, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [369 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [450 B]
Fetched 1776 B in 0s (174 kB/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libdebhelper-perl libelf1
  libfile-stripnondeterminism-perl libmagic-mgc libmagic1 libpipeline1
  libsigsegv2 libsub-override-perl libtool libuchardet0 m4 man-db po-debconf
  sensible-utils
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc dh-make gettext-doc
  libasprintf-dev libgettextpo-dev groff libtool-doc gfortran
  | fortran95-compiler gcj-jdk m4-doc apparmor less www-browser
  libmail-box-perl
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libltdl-dev libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libdebhelper-perl libelf1
  libfile-stripnondeterminism-perl libmagic-mgc libmagic1 libpipeline1
  libsigsegv2 libsub-override-perl libtool libuchardet0 m4 man-db po-debconf
  sbuild-build-depends-main-dummy sensible-utils
0 upgraded, 30 newly installed, 0 to remove and 0 not upgraded.
Need to get 8981 kB of archives.
After this operation, 31.8 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [876 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdextrautils amd64 2.37.2-4 [143 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.7-1 [67.8 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-7 [935 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.3-1 [34.3 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.4-2 [1354 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.17 [21.5 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.39-3 [273 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.39-3 [126 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.39-3 [69.1 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.21-4 [175 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.13-1 [34.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-5 [204 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.71-2 [343 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1+nmu1 [77.1 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.5-1 [823 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.21-4 [510 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 13.5.2 [192 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-15 [513 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 20 [17.1 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.68-1 [104 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.12.0-2 [26.3 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.12.0-2 [15.5 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.185-2 [172 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.14-1 [98.3 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.21-4 [1311 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21+nmu1 [248 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 13.5.2 [1056 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 8981 kB in 0s (128 MB/s)
Selecting previously unselected package bsdextrautils.
(Reading database ... 14273 files and directories currently installed.)
Preparing to unpack .../00-bsdextrautils_2.37.2-4_amd64.deb ...
Unpacking bsdextrautils (2.37.2-4) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.7-1_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.7-1) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-7_amd64.deb ...
Unpacking groff-base (1.22.4-7) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.3-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.3-1) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.4-2_amd64.deb ...
Unpacking man-db (2.9.4-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../05-sensible-utils_0.0.17_all.deb ...
Unpacking sensible-utils (0.0.17) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../06-libmagic-mgc_1%3a5.39-3_amd64.deb ...
Unpacking libmagic-mgc (1:5.39-3) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../07-libmagic1_1%3a5.39-3_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.39-3) ...
Selecting previously unselected package file.
Preparing to unpack .../08-file_1%3a5.39-3_amd64.deb ...
Unpacking file (1:5.39-3) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../09-gettext-base_0.21-4_amd64.deb ...
Unpacking gettext-base (0.21-4) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../10-libsigsegv2_2.13-1_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.13-1) ...
Selecting previously unselected package m4.
Preparing to unpack .../11-m4_1.4.18-5_amd64.deb ...
Unpacking m4 (1.4.18-5) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../12-autoconf_2.71-2_all.deb ...
Unpacking autoconf (2.71-2) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../13-autotools-dev_20180224.1+nmu1_all.deb ...
Unpacking autotools-dev (20180224.1+nmu1) ...
Selecting previously unselected package automake.
Preparing to unpack .../14-automake_1%3a1.16.5-1_all.deb ...
Unpacking automake (1:1.16.5-1) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../15-autopoint_0.21-4_all.deb ...
Unpacking autopoint (0.21-4) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../16-libdebhelper-perl_13.5.2_all.deb ...
Unpacking libdebhelper-perl (13.5.2) ...
Selecting previously unselected package libtool.
Preparing to unpack .../17-libtool_2.4.6-15_all.deb ...
Unpacking libtool (2.4.6-15) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../18-dh-autoreconf_20_all.deb ...
Unpacking dh-autoreconf (20) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../19-libarchive-zip-perl_1.68-1_all.deb ...
Unpacking libarchive-zip-perl (1.68-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../20-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../21-libfile-stripnondeterminism-perl_1.12.0-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.12.0-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../22-dh-strip-nondeterminism_1.12.0-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.12.0-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../23-libelf1_0.185-2_amd64.deb ...
Unpacking libelf1:amd64 (0.185-2) ...
Selecting previously unselected package dwz.
Preparing to unpack .../24-dwz_0.14-1_amd64.deb ...
Unpacking dwz (0.14-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../25-gettext_0.21-4_amd64.deb ...
Unpacking gettext (0.21-4) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../26-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../27-po-debconf_1.0.21+nmu1_all.deb ...
Unpacking po-debconf (1.0.21+nmu1) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../28-debhelper_13.5.2_all.deb ...
Unpacking debhelper (13.5.2) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../29-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.3-1) ...
Setting up bsdextrautils (2.37.2-4) ...
update-alternatives: using /usr/bin/write.ul to provide /usr/bin/write (write) in auto mode
Setting up libmagic-mgc (1:5.39-3) ...
Setting up libarchive-zip-perl (1.68-1) ...
Setting up libdebhelper-perl (13.5.2) ...
Setting up libmagic1:amd64 (1:5.39-3) ...
Setting up gettext-base (0.21-4) ...
Setting up file (1:5.39-3) ...
Setting up autotools-dev (20180224.1+nmu1) ...
Setting up libsigsegv2:amd64 (2.13-1) ...
Setting up autopoint (0.21-4) ...
Setting up sensible-utils (0.0.17) ...
Setting up libuchardet0:amd64 (0.0.7-1) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libelf1:amd64 (0.185-2) ...
Setting up libfile-stripnondeterminism-perl (1.12.0-2) ...
Setting up gettext (0.21-4) ...
Setting up libtool (2.4.6-15) ...
Setting up m4 (1.4.18-5) ...
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up autoconf (2.71-2) ...
Setting up dh-strip-nondeterminism (1.12.0-2) ...
Setting up dwz (0.14-1) ...
Setting up groff-base (1.22.4-7) ...
Setting up automake (1:1.16.5-1) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up po-debconf (1.0.21+nmu1) ...
Setting up man-db (2.9.4-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up dh-autoreconf (20) ...
Setting up debhelper (13.5.2) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.32-4) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.37-7 dpkg-dev_1.20.9 g++-11_11.2.0-10 gcc-11_11.2.0-10 libc6-dev_2.32-4 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 linux-libc-dev_5.14.12-1
Package versions: adduser_3.118 apt_2.3.11 autoconf_2.71-2 automake_1:1.16.5-1 autopoint_0.21-4 autotools-dev_20180224.1+nmu1 base-files_12 base-passwd_3.5.52 bash_5.1-3+b2 binutils_2.37-7 binutils-common_2.37-7 binutils-x86-64-linux-gnu_2.37-7 bsdextrautils_2.37.2-4 bsdutils_1:2.37.2-4 build-essential_12.9 bzip2_1.0.8-4 clang-13_1:13.0.0-8 coreutils_8.32-4+b1 cpp_4:11.2.0-2 cpp-11_11.2.0-10 dash_0.5.11+git20210120+802ebd4-2 debconf_1.5.78 debhelper_13.5.2 debian-archive-keyring_2021.1.1 debianutils_5.5-1 dh-autoreconf_20 dh-strip-nondeterminism_1.12.0-2 diffutils_1:3.7-5 dpkg_1.20.9 dpkg-dev_1.20.9 dwz_0.14-1 e2fsprogs_1.46.4-1 fakeroot_1.26-1 file_1:5.39-3 findutils_4.8.0-1 g++_4:11.2.0-2 g++-11_11.2.0-10 gcc_4:11.2.0-2 gcc-10-base_10.3.0-11 gcc-11_11.2.0-10 gcc-11-base_11.2.0-10 gcc-9-base_9.4.0-3 gettext_0.21-4 gettext-base_0.21-4 gpgv_2.2.27-2 grep_3.7-1 groff-base_1.22.4-7 gzip_1.10-4 hostname_3.23 init-system-helpers_1.60 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_11.2.0-10 lib32stdc++6_11.2.0-10 libacl1_2.3.1-1 libapt-pkg6.0_2.3.11 libarchive-zip-perl_1.68-1 libasan5_9.4.0-3 libasan6_11.2.0-10 libatomic1_11.2.0-10 libattr1_1:2.5.1-1 libaudit-common_1:3.0.6-1 libaudit1_1:3.0.6-1 libbinutils_2.37-7 libblkid1_2.37.2-4 libbsd0_0.11.3-1 libbz2-1.0_1.0.8-4 libc-bin_2.32-4 libc-dev-bin_2.32-4 libc6_2.32-4 libc6-dev_2.32-4 libc6-i386_2.32-4 libcap-ng0_0.7.9-2.2+b1 libcap2_1:2.44-1 libcc1-0_11.2.0-10 libclang-common-13-dev_1:13.0.0-8 libclang-cpp13_1:13.0.0-8 libclang1-13_1:13.0.0-8 libcom-err2_1.46.4-1 libcrypt-dev_1:4.4.25-2 libcrypt1_1:4.4.25-2 libctf-nobfd0_2.37-7 libctf0_2.37-7 libdb5.3_5.3.28+dfsg1-0.8 libdebconfclient0_0.260 libdebhelper-perl_13.5.2 libdpkg-perl_1.20.9 libedit2_3.1-20210910-1 libelf1_0.185-2 libext2fs2_1.46.4-1 libfakeroot_1.26-1 libffi8_3.4.2-3 libfile-stripnondeterminism-perl_1.12.0-2 libgc1_1:8.0.4-3 libgcc-11-dev_11.2.0-10 libgcc-9-dev_9.4.0-3 libgcc-s1_11.2.0-10 libgcrypt20_1.9.4-3+b1 libgdbm-compat4_1.22-1 libgdbm6_1.22-1 libgmp10_2:6.2.1+dfsg-2 libgnutls30_3.7.2-2 libgomp1_11.2.0-10 libgpg-error0_1.42-3 libgssapi-krb5-2_1.18.3-7 libhogweed6_3.7.3-1 libicu67_67.1-7 libidn2-0_2.3.2-2 libisl23_0.24-2 libitm1_11.2.0-10 libk5crypto3_1.18.3-7 libkeyutils1_1.6.1-2 libkrb5-3_1.18.3-7 libkrb5support0_1.18.3-7 libllvm13_1:13.0.0-8 liblsan0_11.2.0-10 liblz4-1_1.9.3-2 liblzma5_5.2.5-2 libmagic-mgc_1:5.39-3 libmagic1_1:5.39-3 libmd0_1.0.4-1 libmount1_2.37.2-4 libmpc3_1.2.1-1 libmpfr6_4.1.0-3 libnettle8_3.7.3-1 libnsl-dev_1.3.0-2 libnsl2_1.3.0-2 libobjc-11-dev_11.2.0-10 libobjc-9-dev_9.4.0-3 libobjc4_11.2.0-10 libomp-13-dev_1:13.0.0-8 libomp5-13_1:13.0.0-8 libp11-kit0_0.24.0-5 libpam-modules_1.4.0-10 libpam-modules-bin_1.4.0-10 libpam-runtime_1.4.0-10 libpam0g_1.4.0-10 libpcre2-8-0_10.36-2 libpcre3_2:8.39-13 libperl5.32_5.32.1-6 libpipeline1_1.5.3-1 libquadmath0_11.2.0-10 libseccomp2_2.5.2-2 libselinux1_3.1-3 libsemanage-common_3.1-1 libsemanage1_3.1-1+b2 libsepol1_3.1-1 libsigsegv2_2.13-1 libsmartcols1_2.37.2-4 libss2_1.46.4-1 libssl1.1_1.1.1l-1 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 libsub-override-perl_0.09-2 libsystemd0_249.5-1 libtasn1-6_4.17.0-2 libtinfo6_6.2+20210905-1 libtirpc-common_1.3.2-2 libtirpc-dev_1.3.2-2 libtirpc3_1.3.2-2 libtool_2.4.6-15 libtsan0_11.2.0-10 libubsan1_11.2.0-10 libuchardet0_0.0.7-1 libudev1_249.5-1 libunistring2_0.9.10-6 libuuid1_2.37.2-4 libxml2_2.9.12+dfsg-5 libxxhash0_0.8.0-2 libz3-4_4.8.12-1+b1 libzstd1_1.4.8+dfsg-3 linux-libc-dev_5.14.12-1 login_1:4.8.1-1 logsave_1.46.4-1 lsb-base_11.1.0 m4_1.4.18-5 make_4.3-4.1 man-db_2.9.4-2 mawk_1.3.4.20200120-2 mount_2.37.2-4 ncurses-base_6.2+20210905-1 ncurses-bin_6.2+20210905-1 passwd_1:4.8.1-1 patch_2.7.6-7 perl_5.32.1-6 perl-base_5.32.1-6 perl-modules-5.32_5.32.1-6 po-debconf_1.0.21+nmu1 qt5-qmake_5.15.2+dfsg-12 qt5-qmake-bin_5.15.2+dfsg-12 qtchooser_66-2 rpcsvc-proto_1.4.2-4 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.8-1 sensible-utils_0.0.17 sysvinit-utils_3.00-1 tar_1.34+dfsg-1 tzdata_2021e-1 util-linux_2.37.2-4 xz-utils_5.2.5-2 zlib1g_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 3.0 (quilt)
Source: libclass-xsaccessor-perl
Binary: libclass-xsaccessor-perl
Architecture: any
Version: 1.19-3
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: Damyan Ivanov <dmn@debian.org>, gregor herrmann <gregoa@debian.org>, Ansgar Burchardt <ansgar@debian.org>, Xavier Guimard <x.guimard@free.fr>
Homepage: https://metacpan.org/release/Class-XSAccessor
Standards-Version: 4.2.0
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libclass-xsaccessor-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libclass-xsaccessor-perl.git
Testsuite: autopkgtest-pkg-perl
Build-Depends: debhelper (>= 10), perl
Package-List:
 libclass-xsaccessor-perl deb perl optional arch=any
Checksums-Sha1:
 77a6a7e2893f93666a6ad1438efd17bf65bbbafc 80786 libclass-xsaccessor-perl_1.19.orig.tar.gz
 6987eb56e2ff2764f83d082e41efcbc445b7a51d 3696 libclass-xsaccessor-perl_1.19-3.debian.tar.xz
Checksums-Sha256:
 99c56b395f1239af19901f2feeb125d9ecb4e351a0d80daa9529211a4700a6f2 80786 libclass-xsaccessor-perl_1.19.orig.tar.gz
 5f448e1f57485bb89a495a5cac696574f22214585e3e0e681f1ded5907357baa 3696 libclass-xsaccessor-perl_1.19-3.debian.tar.xz
Files:
 5c5dea74f00ad37c5119dd22b28a5563 80786 libclass-xsaccessor-perl_1.19.orig.tar.gz
 56bcfa14a7ce700e3aa40e84c4b899e1 3696 libclass-xsaccessor-perl_1.19-3.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQKTBAEBCgB9FiEE0eExbpOnYKgQTYX6uzpoAYZJqgYFAluByeNfFIAAAAAALgAo
aXNzdWVyLWZwckBub3RhdGlvbnMub3BlbnBncC5maWZ0aGhvcnNlbWFuLm5ldEQx
RTEzMTZFOTNBNzYwQTgxMDREODVGQUJCM0E2ODAxODY0OUFBMDYACgkQuzpoAYZJ
qgaJahAAqfk0CnrkiPwWh+QYbHDY+LKbsCJRY0G200wuBbsqMJ/PE2FOoaYJR661
wcsZ6vL8zX7PScRyj5T8Pj6HRgwVeuUwf/6pgE0BfyhuGFsNGf+pJesqKfQTNmbG
/j5DCvv9Tkiq6Udan2lcSj5fuBhWG5x8GJuYk7u+RmKGvoX2+IbDSbl+ssa2jpbw
RgnSVZn+HFpG6tR4roNTCzJ9XwRVOFHG5x6o40DoSltCLOG+Zuz4Jk7TYhMIAudc
MsmdOtQVaopLbS1BYkqaxjnO3QVkDA7WNn6Df2jiLJ4pEY5KdzA7zzisdjaD3OcT
iQ+PiRK5Qn/kaUlCaue3aN1AJ/ryUULe0+ye4unPiKuRxYsWUMnm27V3dMl+fbml
7ahFrfYa7Q1jtvV90OiXT0t2uVHWVdP80VD40sxEQqubszPSnPJ6V6lGl8u7+iWF
dHucsnfcHD9bJ32MDiVayjHeQ0PkveGiTmlVOuIuQiPXKRX0kBUIK2NB1RK7GX2o
9cMdAYZ2dqoWJ8yAd3nHIWdHAeBSKs7v1Tv5bM6kdrGHOMjwsAIMMNVsu7pUYzvA
YQ1qmXg4fyNVS5LQMSSwpRYgseayuxtyT/g6AFCgHAwVl6L2k8GvvmKkzxLu+cf+
S5XXT0eVLz+/mDobuxNPAVEso74EVLqn7HIScGSgpq9YRXg3DBs=
=vKV6
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/tmp/dpkg-verify-sig.yPxUKkA1/trustedkeys.kbx': General error
gpgv: Signature made Sat Aug 25 21:28:03 2018 UTC
gpgv:                using RSA key D1E1316E93A760A8104D85FABB3A68018649AA06
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./libclass-xsaccessor-perl_1.19-3.dsc
dpkg-source: info: extracting libclass-xsaccessor-perl in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking libclass-xsaccessor-perl_1.19.orig.tar.gz
dpkg-source: info: unpacking libclass-xsaccessor-perl_1.19-3.debian.tar.xz

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-b7f27c0c-e1ba-4a5e-afe0-30c7803d9234
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package libclass-xsaccessor-perl
dpkg-buildpackage: info: source version 1.19-3
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Xavier Guimard <x.guimard@free.fr>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean
   dh_clean
 debian/rules build
dh build
   dh_update_autotools_config
   dh_autoreconf
   dh_auto_configure
	/usr/bin/perl -I. Makefile.PL INSTALLDIRS=vendor "OPTIMIZE=-g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2" "LD=x86_64-linux-gnu-gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now"
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for Class::XSAccessor
Writing MYMETA.yml and MYMETA.json
   dh_auto_build
	make -j4
make[1]: Entering directory '/<<PKGBUILDDIR>>'
Running Mkbootstrap for XSAccessor ()
"/usr/bin/perl" "/usr/share/perl/5.32/ExtUtils/xsubpp"  -typemap '/usr/share/perl/5.32/ExtUtils/typemap'  XSAccessor.xs > XSAccessor.xsc
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"1.19\" -DXS_VERSION=\"1.19\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"   cxsa_hash_table.c
chmod 644 "XSAccessor.bs"
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"1.19\" -DXS_VERSION=\"1.19\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"   cxsa_locking.c
cp lib/Class/XSAccessor.pm blib/lib/Class/XSAccessor.pm
cp lib/Class/XSAccessor/Heavy.pm blib/lib/Class/XSAccessor/Heavy.pm
cp lib/Class/XSAccessor/Array.pm blib/lib/Class/XSAccessor/Array.pm
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"1.19\" -DXS_VERSION=\"1.19\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"   cxsa_main.c
mv XSAccessor.xsc XSAccessor.c
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"1.19\" -DXS_VERSION=\"1.19\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"   cxsa_memory.c
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
In file included from cxsa_locking.c:1#   define STMT_END     )
                        ^
:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]In file included from 
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38:cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5::663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4 note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: :
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                                ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:116:37: note: expanded from macro 'ZAPHOD32_MIX'
:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
: note: expanded from macro 'STMT_START'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
:5: note: '{' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: 
note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: :expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38 : note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: note: expanded from macro 'ZAPHOD32_MIX'
expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:
152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                               ^                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5
: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: :expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from 156:5: note: ')' token is here
cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hwarning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: :125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: 
note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
                        ^
In file included from cxsa_hash_table.c:15:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
124:32#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
: note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v2 = ROTR32(v2, 7) ^ v0;   \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
                               ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

                        ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32:cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
 note: expanded from macro 'ZAPHOD32_MIX'    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49:
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:5: note: ')' token is here
:    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                        ^    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
:80:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
38: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */                                               ^

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:159:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \5
:                                               ^ 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);:
5    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");

                                     ^~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::666124::2932::  note: note: expanded from macro 'STMT_START'expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */')' token is here

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::12580::349::  note: note: expanded from macro 'ZAPHOD32_MIX'expanded from macro 'ZAPHOD32_SCRAMBLE32'

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \

                                                ^
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 162note: :expanded from macro 'ZAPHOD32_MIX'5
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:                                    ^~~~~~~~~~87
:41: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :expanded from macro 'ZAPHOD32_SCRAMBLE32'666
:29: note: expanded from macro 'STMT_START'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h21::116 :note: 48expanded from macro 'STMT_END':
 note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_END     )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :expanded from macro 'ZAPHOD32_MIX'163
:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note:     ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);')' token is here

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    v ^= (v>>23);                       \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h163::1255::3 :note:  ')' token is herenote: 
expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:     ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);note: 
expanded from macro 'STMT_END'    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3:#   define STMT_END     ) 
note:                         ^expanded from macro 'ZAPHOD32_SCRAMBLE32'

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hcxsa_hash_table.c::415:
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hIn file included from :./cxsa_hash_table.h171::45:
:In file included from  ./cxsa_memory.hwarning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]6
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \:
666                                     ^~~~~~~~~~:
29: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :expanded from macro 'STMT_START'666
:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
171                              ^:
5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: 164'{' token is here:
5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
80:49:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: 116expanded from macro 'ZAPHOD32_SCRAMBLE32':
48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:
:In file included from 171./cxsa_hash_table.h::54::
 In file included from warning: ./cxsa_memory.h:'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]6
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");    v2 = ROTR32(v2, 7) ^ v0;   \

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                               ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h171::1165::37 :note:  ')' token is herenote: 
expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::125666::329::  note: note: expanded from macro 'ZAPHOD32_MIX'expanded from macro 'STMT_START'

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:                        ^167
:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h247::12413::32 :warning:  '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note: 
expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");:
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note: 
')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
} STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:  ^~~~~~~~666
:29: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :expanded from macro 'STMT_START'667
:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from             ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~3921
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h663::
116In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h48::35 :
note: In file included from expanded from macro 'ZAPHOD32_MIX'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: In file included from '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]cxsa_locking.c
:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");:
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_FINALIZE(v0,v1,v2);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~:
116:48:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: 90expanded from macro 'ZAPHOD32_MIX':
48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h                               ^:
268:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 171warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]5
: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3:    v1 = ROTL32(v1, 17);           \ 
note:                                    ^expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5} STMT_END:
   ^~~~~~~~note: 
')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_END     )
                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: In file included from warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]cxsa_hash_table.c
:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from     ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::3587:
:In file included from 41/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 4note: :
expanded from macro 'ZAPHOD32_SCRAMBLE32'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37:    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d); 
note:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
21                                    ^~~~~~~~~~:
 note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:

In file included from                               ^./cxsa_main.h
:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::2473921::
13In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h :note: 663'{' token is here:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:cxsa_locking.c116::148:
:In file included from  ./cxsa_locking.hnote: :expanded from macro 'ZAPHOD32_MIX'5
:
In file included from     ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~3921
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:
:In file included from 80/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3835::
 /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hnote: :expanded from macro 'ZAPHOD32_SCRAMBLE32'1448
:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666        SBOX32_MIX3(s0,s1,s2,"SEED STATE");:
29        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \

                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \:
                                                 ^note: 
'{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::13152:: 5warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::12487::3241::  note: note: expanded from macro 'ZAPHOD32_MIX'expanded from macro 'ZAPHOD32_SCRAMBLE32'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^    v ^= (v>>23);                       \

                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::247152::135::  note: note: ')' token is here')' token is here

    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::3125:: 3note: :expanded from macro 'ZAPHOD32_SCRAMBLE32' 
note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~} STMT_END

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h21::667 :note: 21expanded from macro 'STMT_END':
 note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h./cxsa_main.h::14485::
9In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :warning: 3921'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156        SBOX32_MIX3(s0,s1,s2,"SEED STATE");:
5        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
1448:9: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :')' token is here116
:37: note: expanded from macro 'ZAPHOD32_MIX'
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h} STMT_END:
666  ^~~~~~~~:
29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'STMT_START':
667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
In file included from cxsa_locking.c:1#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:

In file included from                                                ^./cxsa_locking.h
:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \4
:
                                  ^~~~~~~~~~In file included from 
./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::6663921::
29In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h :note: 663expanded from macro 'STMT_START':

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13:    ZAPHOD32_FINALIZE(v0,v1,v2); 
note:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~'{' token is here

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h268::1565::5 :note:  '{' token is herewarning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::1241453::3213::  note: warning: expanded from macro 'ZAPHOD32_MIX''}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);:
5            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::1251453::313::  note: note: expanded from macro 'ZAPHOD32_MIX'')' token is here

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h#   define STMT_END     ):
1397                        ^:
3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:In file included from 21cxsa_main.c:: 1note: :
expanded from macro 'STMT_END'In file included from 
./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from #   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:                        ^663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~35
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h5::116 :warning: 37'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'ZAPHOD32_MIX'
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
                                     ^~~~~~~~~~note: 
expanded from macro 'XORSHIFT96_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */expanded from macro 'STMT_START'

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::268116::548::  warning: note:     XORSHIFT96_set(*state,s0,s1,s2,t2);'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'ZAPHOD32_MIX'


    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \ 
note:                                                ^expanded from macro 'ZAPHOD32_FINALIZE'

#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'In file included from 
cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \1482
:                                    ^~~~~~~~~~9
: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
666:29: note: expanded from macro 'STMT_START'
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
85                              ^:
39:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: 170expanded from macro 'SBOX32_MIX4':
5: note: '{' token is here
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");:
666    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
29: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :expanded from macro 'STMT_START'116
:48: note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
1482                                               ^:
9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:    v2 = ROTR32(v2, 7) ^ v0;   \37
:                               ^ 
note: expanded from macro 'SBOX32_MIX4'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:170:5: note: ')' token is here
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");:
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note: 
expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97} STMT_END:
3  ^~~~~~~~:
 note: expanded from macro 'SBOX32_MIX4'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: } STMT_ENDnote: 
expanded from macro 'STMT_END'  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21#   define STMT_END     ):
                         ^note: 
expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cxsa_locking.c    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");:
1    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:

In file included from ./cxsa_locking.h:5:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h116::392137:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hnote: :expanded from macro 'ZAPHOD32_MIX'663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \

                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);:
171            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");note: 
expanded from macro 'STMT_END'    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: #   define STMT_END     )note: 
expanded from macro 'ZAPHOD32_MIX'                        ^

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: In file included from note: ')' token is herecxsa_locking.c
:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");5
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 1399note: :expanded from macro 'STMT_END'38
: note: expanded from macro 'XORSHIFT128_set'
#   define STMT_END     )
                        ^
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cxsa_main.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::172:
:In file included from 36./cxsa_main.h:: 5note: :
expanded from macro 'STADTX_SCRAMBLE64'In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
268                                   ^~~~~~~~~~:
5: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: #define STADTX_SCRAMBLE64(v,prime) STMT_START {    \note: 
'{' token is here                                              ^

    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h5::72 :warning: 36'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'STADTX_SCRAMBLE64'
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \113
:                                   ^~~~~~~~~~36
: note: expanded from macro 'ZAPHOD32_FINALIZE'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: expanded from macro 'STMT_START'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:    ZAPHOD32_FINALIZE(v0,v1,v2);5
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
21: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hnote: :expanded from macro 'STMT_END'72
:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_END     )
                        ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5In file included from : cxsa_main.cwarning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]1
:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));:
9    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:99:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h36::666 :note: 29expanded from macro 'SBOX32_MIX3':
 note: expanded from macro 'STMT_START'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                                   ^~~~~~~~~~                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::118666::529::  note: note: '{' token is hereexpanded from macro 'STMT_START'

    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:72:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h47::1448 :note: 9expanded from macro 'STADTX_SCRAMBLE64':
 note: '{' token is here
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");                                              ^

        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h667::144821::9 :note:  expanded from macro 'STMT_END'warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: In file included from expanded from macro 'SBOX32_MIX3'cxsa_locking.c
:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
    v2 = ROTR32(v2, 7) ^ v0;   \In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h                               ^:
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::144855::
9/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 119note: :')' token is here5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3:    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13)); 
note:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'SBOX32_MIX3'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:} STMT_END72
:  ^~~~~~~~36
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'STADTX_SCRAMBLE64':
667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \

                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));3921
:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:
:In file included from 72/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::4735::
 /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hnote: :expanded from macro 'STADTX_SCRAMBLE64'1453
:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h13::119 :note: 5'{' token is here:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));1393
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~46
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hexpanded from macro 'XORSHIFT96_set':
79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: } STMT_ENDwarning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
#   define STMT_END     )            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from     r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:                                                        ^3921
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::1453663::
13In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 55')' token is here
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3:     STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));note: 
expanded from macro 'XORSHIFT96_set'    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

} STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:  ^~~~~~~~72
:36:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note: 667expanded from macro 'STADTX_SCRAMBLE64':
21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */35
:
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1456:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h5::120 :warning: 5'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));1393
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~35
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hexpanded from macro 'XORSHIFT96_set':
72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
666                                              ^:
29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5:#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \ 
warning:                                              ^'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    v ^= (v >> 46);                         \:
1456                                            ^:
5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h :warning: 120'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note:     STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));expanded from macro 'XORSHIFT96_set'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \} STMT_END

                                                        ^  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h1456::6675::21 :note:  ')' token is herenote: 
expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37expanded from macro 'STMT_END': note: 
expanded from macro 'SBOX32_MIX4'
#   define STMT_END     )        v2 = ROTL32(v2, 4) - v0;    \

                        ^                                    ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);:
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note: 
')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \

                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:} STMT_END1490
:  ^~~~~~~~5
: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);

                        ^    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from     STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));cxsa_hash_table.c
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~15
:
In file included from ./cxsa_hash_table.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h4::
79In file included from :./cxsa_memory.h45::6 :
note: In file included from expanded from macro 'STADTX_SCRAMBLE64'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5:    v ^= (v >> 46);                         \ 
warning:                                             ^'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 80note: :expanded from macro 'STADTX_SCRAMBLE64'3
: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
667                                              ^:
21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));  ^~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h667::7221::47 :note:  expanded from macro 'STMT_END'note: 
expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_END     )
                        ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:117:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 666warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]29
: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:79:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h45::115 :note: 5expanded from macro 'STADTX_SCRAMBLE64':
 note: '{' token is here
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));:
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note: 
')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
72:36:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h :note: 79expanded from macro 'STADTX_SCRAMBLE64':
45: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::29115:: 5note: :expanded from macro 'STMT_START' 
note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));

                              ^    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::580:: 3note: :'{' token is here 
note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72#   define STMT_END     ):
47                        ^:
 note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cxsa_hash_table.c:15:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));3
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'} STMT_END

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#   define STMT_END     ):
666                        ^:
29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118In file included from :cxsa_main.c5::1 :
note: In file included from '{' token is here./cxsa_main.h
:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h                                              ^:
72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h47::118 :note: 5expanded from macro 'STADTX_SCRAMBLE64':
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h :note: 119expanded from macro 'STMT_END':
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45:In file included from  note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from In file included from cxsa_main.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::1663:
:
In file included from In file included from ./cxsa_main.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::555:
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::1193921::
5In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h :warning: 663:
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~72
:36: note: expanded from macro 'STADTX_SCRAMBLE64'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
29                                   ^~~~~~~~~~:
 note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */119
:                              ^5
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h'{' token is here:
120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));:
72    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
47: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hexpanded from macro 'STADTX_SCRAMBLE64':
72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::120119::55::  warning: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::7979::4545::  note: note: expanded from macro 'STADTX_SCRAMBLE64'expanded from macro 'STADTX_SCRAMBLE64'

    v ^= (v >> 46);                         \    v ^= (v >> 46);                         \

                                            ^                                            ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::119:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
274                              ^:
6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note:     SIP_ROUNDS;                             \expanded from macro 'SIPROUND'

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274  } STMT_END:
6  ^:
 note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'    ,SIPROUND;

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6  STMT_START {              \:
              ^note: 
')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5:     ,SIPROUND;note: 
expanded from macro 'PERL_SIPHASH_FNC'     ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
    ,SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:     ^~~~~~~~175
:3: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h29::219 :note: 5expanded from macro 'STMT_START':
 note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:                              ^274
:6: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:  SIP_ROUNDS;                               \5
:  ^~~~~~~~~~ 
note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6:   } STMT_ENDnote: 
'{' token is here    ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21    ,SIPROUND;:
      ^~~~~~~~note: 
expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: #   define STMT_END     )note: 
expanded from macro 'SIPROUND'                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'  STMT_START {              \

             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
274                              ^:
6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3  SIP_ROUNDS;                               \:
   ^~~~~~~~~~note: 
expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6:  } STMT_END 
note:   ^'{' token is here

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3:     ,SIPROUND;note: 
expanded from macro 'PERL_SIPHASH_FNC'     ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274  STMT_START {              \:
6             ^:
 note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5:   SIP_ROUNDS;                               \note: 
expanded from macro 'SIPROUND'  ^~~~~~~~~~

  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning:   SIP_FINAL_ROUNDS                          \'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note:     ,SIPROUND;'{' token is here

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
  } STMT_END
  ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:175:14:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 238expanded from macro 'SIPROUND':
3: note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3  SIP_ROUNDS;                               \:
   ^~~~~~~~~~note: 
expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
  SIP_FINAL_ROUNDS                          \
    ,SIPROUND;  ^~~~~~~~~~~~~~~~

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::275244::63::  warning: note: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'PERL_SIPHASH_FNC'

    ,SIPROUND;SIPROUND;SIPROUND;
  SIP_FINAL_ROUNDS                          \     ^~~~~~~~

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::6180:: 3note: :'{' token is here 
note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
    ,SIPROUND;SIPROUND;SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:     ^~~~~~~~244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~  STMT_START {              \

             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 244note: :')' token is here3
: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:275:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h6::275 :warning: 15'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
    ,SIPROUND;SIPROUND;SIPROUND;     ^~~~~~~~

              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::180175::314::  note: note: expanded from macro 'SIPROUND'expanded from macro 'SIPROUND'

  } STMT_END
  ^
  STMT_START {              \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h             ^:
244:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'PERL_SIPHASH_FNC'244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  SIP_FINAL_ROUNDS                          \:
275  ^~~~~~~~~~~~~~~~:
6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 175warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]14
: note: expanded from macro 'SIPROUND'
    ,SIPROUND;
     ^~~~~~~~
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;SIPROUND;275
:              ^~~~~~~~6
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;  } STMT_END

     ^~~~~~~~  ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 175note: :expanded from macro 'PERL_SIPHASH_FNC'3
: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  SIP_FINAL_ROUNDS                          \  ^~~~~~~~~~

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::666275::2915::  note: note: expanded from macro 'STMT_START'')' token is here

    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h                              ^:
180:5: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'SIPROUND':
244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275#   define STMT_END     ):
6                        ^:
 note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14  SIP_FINAL_ROUNDS                          \:
   ^~~~~~~~~~~~~~~~note: 
expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 244warning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]3
: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:  SIP_FINAL_ROUNDS                          \24
:  ^~~~~~~~~~~~~~~~ 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15    ,SIPROUND;SIPROUND;SIPROUND;:
                        ^~~~~~~~warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::244175::33::  note: note: expanded from macro 'PERL_SIPHASH_FNC'expanded from macro 'SIPROUND'

  STMT_START {              \
  ^~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h  ^~~~~~~~~~~~~~~~:
666:29:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 275expanded from macro 'STMT_START':
24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h180::2445::3 :note:  expanded from macro 'SIPROUND'note: 
expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:   SIP_FINAL_ROUNDS                          \note: 
expanded from macro 'STMT_END'  ^~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here#   define STMT_END     )

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'    ,SIPROUND;SIPROUND;SIPROUND;

              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::6238:: 3warning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro] 
note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h6::280 :warning: 15'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
    ,SIPROUND;SIPROUND;     ^~~~~~~~

              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h3::175 :note: 3expanded from macro 'SIPROUND':
 note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:  STMT_START {              \219
:  ^~~~~~~~~~5
: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:    ,SIPROUND;SIPROUND;3
:     ^~~~~~~~ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
  } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:    ^~~~~~~~280
:15: note: '{' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: note: expanded from macro 'STMT_END'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 219expanded from macro 'SIPROUND':
5: note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3    SIP_ROUNDS;                             \:
     ^~~~~~~~~~note: 
expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15:  SIP_ROUNDS;                               \ 
warning:   ^~~~~~~~~~'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::175219::35::  note: note: expanded from macro 'SIPROUND'expanded from macro 'PERL_SIPHASH_FNC'

  STMT_START {              \
  ^~~~~~~~~~
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :warning: 219'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
5: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::280666::629::  warning: note: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'STMT_START'

    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
3                              ^:
 note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3:   } STMT_ENDnote: 
expanded from macro 'PERL_SIPHASH_FNC'  ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here    SIP_ROUNDS;                             \

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ,SIPROUND;SIPROUND;:
175     ^~~~~~~~:
14: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
  } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:    ^~~~~~~~244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
  SIP_FINAL_ROUNDS                          \
#   define STMT_END     )  ^~~~~~~~~~~~~~~~

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  STMT_START {              \:
281             ^:
15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:    ,SIPROUND;SIPROUND;29
:              ^~~~~~~~ 
note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
219                              ^:
5: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:  SIP_FINAL_ROUNDS                          \280
:  ^~~~~~~~~~~~~~~~15
: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:
180                       ^~~~~~~~:
5: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14:  } STMT_END 
note:     ^~~~~~~~expanded from macro 'SIPROUND'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:#   define STMT_END     )3
:                        ^ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'PERL_SIPHASH_FNC'281
:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cxsa_locking.c:1:
In file included from ./cxsa_locking.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
cxsa_locking.c:9:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h3::238 :warning: 3'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'PERL_SIPHASH_FNC'
  MUTEX_INIT(&theLock->mutex);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h197::2745::6 :note:  expanded from macro 'MUTEX_INIT'note: 
'{' token is here
    ,SIPROUND;
    STMT_START {                                                \     ^~~~~~~~

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_locking.c:9:3: note: '{' token is here
  MUTEX_INIT(&theLock->mutex);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:197:16/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 274note: :expanded from macro 'MUTEX_INIT'6
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STMT_START {                                                \
               ^
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'cxsa_locking.c
:9:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3:   MUTEX_INIT(&theLock->mutex);note: 
expanded from macro 'PERL_SIPHASH_FNC'  ^~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:202:5: note: expanded from macro 'MUTEX_INIT'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
    } STMT_END
    ^
cxsa_locking.c:9:3: note: ')' token is here
  MUTEX_INIT(&theLock->mutex);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:202:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h7::275 :note: 6expanded from macro 'MUTEX_INIT':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20    ,SIPROUND;SIPROUND;SIPROUND;:
      ^~~~~~~~note: 
expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175#  define STMT_END      ):
3                        ^:
 note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
cxsa_locking.c:10:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */  COND_INIT(&theLock->cond);

                              ^  ^~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h::244240::35::  note: note: expanded from macro 'PERL_SIPHASH_FNC'expanded from macro 'COND_INIT'

    STMT_START {                                                \
    ^~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~./ppport.h
:4001:28/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 275note: :expanded from macro 'STMT_START'6
: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:175:cxsa_locking.c14::10 :note: 3expanded from macro 'SIPROUND':
 note: '{' token is here
  STMT_START {              \
             ^
  COND_INIT(&theLock->cond);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h3::240 :note: 16expanded from macro 'PERL_SIPHASH_FNC':
 note: expanded from macro 'COND_INIT'
    STMT_START {                                                \
  SIP_FINAL_ROUNDS                          \               ^

  ^~~~~~~~~~~~~~~~
cxsa_locking.c:10:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  COND_INIT(&theLock->cond);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:245:5: note: expanded from macro 'COND_INIT'
    } STMT_END
    ^
cxsa_locking.c:10:3: note: ')' token is here
  COND_INIT(&theLock->cond);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:245:7: note: expanded from macro 'COND_INIT'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_END      )
                        ^
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5    STMT_START {                                                        \:

In file included from     ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h::6662209::295::  note: warning: expanded from macro 'STMT_START''(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:    STMT_START {                                                        \5
:               ^ note: 
expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h    ,SIPROUND;SIPROUND;:
2619     ^~~~~~~~:
5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3:    ENV_LOCK; 
note:     ^~~~~~~~expanded from macro 'SIPROUND'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:  } STMT_END31
:  ^ 
note: expanded from macro 'ENV_LOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:10216 warning:  SIP_ROUNDS;                               \s 
note:  generated  ^~~~~~~~~~expanded from macro 'MUTEX_LOCK'.


/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6:    STMT_START {                                                \ 
note:                ^')' token is here

    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h4::
280In file included from :./cxsa_memory.h15::6 :
warning: In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15:     } STMT_ENDwarning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note:     ,SIPROUND;SIPROUND;')' token is here

              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180    ENV_LOCK;:
3    ^~~~~~~~:
 note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:  } STMT_END2924
:  ^31
: note: expanded from macro 'ENV_LOCK'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~  SIP_ROUNDS;                               \

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h219::2807::15 :note:  expanded from macro 'MUTEX_LOCK'note: 
')' token is here
    } STMT_END
      ^~~~~~~~
    ,SIPROUND;SIPROUND;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h              ^~~~~~~~:
667:21: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
#   define STMT_END     )
                        ^
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3In file included from :cxsa_hash_table.c :note: 15expanded from macro 'PERL_SIPHASH_FNC':

In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
  SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:  ^~~~~~~~~~~~~~~~2627
:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 281warning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]6
: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h     ^~~~~~~~:
2925:31: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'ENV_UNLOCK':
175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~:
244:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.hnote: :expanded from macro 'PERL_SIPHASH_FNC'222
:5: note: expanded from macro 'MUTEX_UNLOCK'
  SIP_FINAL_ROUNDS                          \
7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cxsa_hash_table.c:15:
In file included from ./cxsa_hash_table.h:4:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cxsa_main.c:1:
In file included from ./cxsa_main.h:5:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
cxsa_main.c:53:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:25:47: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
#define CXSA_ACQUIRE_GLOBAL_LOCK(theLock)     \
                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:53:3: note: '{' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:26:12: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
STMT_START {                                  \
           ^
cxsa_main.c:53:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:27:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:53:3: note: '{' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:27:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:53:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:27:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
cxsa_main.c:53:3: note: ')' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:27:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:53:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:29:5: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
    COND_WAIT(&theLock.cond, &theLock.mutex); \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:264:5: note: expanded from macro 'COND_WAIT'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:53:3: note: '{' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:29:5: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
    COND_WAIT(&theLock.cond, &theLock.mutex); \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:264:16: note: expanded from macro 'COND_WAIT'
    STMT_START {                                                \
               ^
cxsa_main.c:53:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:29:5: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
    COND_WAIT(&theLock.cond, &theLock.mutex); \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:269:5: note: expanded from macro 'COND_WAIT'
    } STMT_END
    ^
cxsa_main.c:53:3: note: ')' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:29:5: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
    COND_WAIT(&theLock.cond, &theLock.mutex); \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:269:7: note: expanded from macro 'COND_WAIT'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:53:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:53:3: note: '{' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:53:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
cxsa_main.c:53:3: note: ')' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:53:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:47: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
                                              ^
cxsa_main.c:53:3: note: ')' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:33:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:66:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:35:47: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
#define CXSA_RELEASE_GLOBAL_LOCK(theLock)     \
                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:66:3: note: '{' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:36:12: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
STMT_START {                                  \
           ^
cxsa_main.c:66:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:66:3: note: '{' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:66:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
cxsa_main.c:66:3: note: ')' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:66:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:248:5: note: expanded from macro 'COND_SIGNAL'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:66:3: note: '{' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:248:16: note: expanded from macro 'COND_SIGNAL'
    STMT_START {                                                \
               ^
cxsa_main.c:66:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:253:5: note: expanded from macro 'COND_SIGNAL'
    } STMT_END
    ^
cxsa_main.c:66:3: note: ')' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:253:7: note: expanded from macro 'COND_SIGNAL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:66:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:66:3: note: '{' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:66:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
cxsa_main.c:66:3: note: ')' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:66:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:47: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
                                              ^
cxsa_main.c:66:3: note: ')' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:41:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- XSAccessor.bs blib/arch/auto/Class/XSAccessor/XSAccessor.bs 644
cxsa_main.c:106:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:25:47: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
#define CXSA_ACQUIRE_GLOBAL_LOCK(theLock)     \
                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:106:3: note: '{' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:26:12: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
STMT_START {                                  \
           ^
cxsa_main.c:106:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:27:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:106:3: note: '{' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:27:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:106:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:27:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
cxsa_main.c:106:3: note: ')' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:27:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:106:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:29:5: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
    COND_WAIT(&theLock.cond, &theLock.mutex); \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:264:5: note: expanded from macro 'COND_WAIT'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:106:3: note: '{' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:29:5: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
    COND_WAIT(&theLock.cond, &theLock.mutex); \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:264:16: note: expanded from macro 'COND_WAIT'
    STMT_START {                                                \
               ^
cxsa_main.c:106:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:29:5: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
    COND_WAIT(&theLock.cond, &theLock.mutex); \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:269:5: note: expanded from macro 'COND_WAIT'
    } STMT_END
    ^
cxsa_main.c:106:3: note: ')' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:29:5: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
    COND_WAIT(&theLock.cond, &theLock.mutex); \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:269:7: note: expanded from macro 'COND_WAIT'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:106:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:106:3: note: '{' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:106:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
cxsa_main.c:106:3: note: ')' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:106:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:32:47: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
                                              ^
cxsa_main.c:106:3: note: ')' token is here
  CXSA_ACQUIRE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:33:3: note: expanded from macro 'CXSA_ACQUIRE_GLOBAL_LOCK'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:35:47: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
#define CXSA_RELEASE_GLOBAL_LOCK(theLock)     \
                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:115:5: note: '{' token is here
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:36:12: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
STMT_START {                                  \
           ^
cxsa_main.c:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:115:5: note: '{' token is here
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
cxsa_main.c:115:5: note: ')' token is here
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:248:5: note: expanded from macro 'COND_SIGNAL'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:115:5: note: '{' token is here
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:248:16: note: expanded from macro 'COND_SIGNAL'
    STMT_START {                                                \
               ^
cxsa_main.c:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:253:5: note: expanded from macro 'COND_SIGNAL'
    } STMT_END
    ^
cxsa_main.c:115:5: note: ')' token is here
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:253:7: note: expanded from macro 'COND_SIGNAL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:115:5: note: '{' token is here
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
cxsa_main.c:115:5: note: ')' token is here
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:47: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
                                              ^
cxsa_main.c:115:5: note: ')' token is here
    CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:41:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:122:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:35:47: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
#define CXSA_RELEASE_GLOBAL_LOCK(theLock)     \
                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:122:3: note: '{' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:36:12: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
STMT_START {                                  \
           ^
cxsa_main.c:122:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:122:3: note: '{' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:122:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
cxsa_main.c:122:3: note: ')' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:37:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_LOCK(&theLock.mutex);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:122:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:248:5: note: expanded from macro 'COND_SIGNAL'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:122:3: note: '{' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:248:16: note: expanded from macro 'COND_SIGNAL'
    STMT_START {                                                \
               ^
cxsa_main.c:122:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:253:5: note: expanded from macro 'COND_SIGNAL'
    } STMT_END
    ^
cxsa_main.c:122:3: note: ')' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:39:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  COND_SIGNAL(&theLock.cond);                 \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:253:7: note: expanded from macro 'COND_SIGNAL'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:122:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cxsa_main.c:122:3: note: '{' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
cxsa_main.c:122:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
cxsa_main.c:122:3: note: ')' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cxsa_main.c:122:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:40:47: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
  MUTEX_UNLOCK(&theLock.mutex);               \
                                              ^
cxsa_main.c:122:3: note: ')' token is here
  CXSA_RELEASE_GLOBAL_LOCK(CXSAccessor_lock);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cxsa_locking.h:41:3: note: expanded from macro 'CXSA_RELEASE_GLOBAL_LOCK'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"1.19\" -DXS_VERSION=\"1.19\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"   XSAccessor.c
138 warnings generated.
98 warnings generated.
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cxsa_memory.c:2:
In file included from ./cxsa_memory.h:6:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
98 warnings generated.
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from XSAccessor.xs:13:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
XSAccessor.c:653:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
XSAccessor.c:653:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
XSAccessor.c:653:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
XSAccessor.c:653:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
XSAccessor.c:653:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
XSAccessor.c:653:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
XSAccessor.c:653:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
XSAccessor.c:653:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
XSAccessor.xs:522:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
XSAccessor.xs:522:9: note: '{' token is here
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
XSAccessor.xs:522:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
XSAccessor.xs:522:9: note: ')' token is here
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
XSAccessor.c:672:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
XSAccessor.c:672:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
XSAccessor.c:672:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
XSAccessor.c:672:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
XSAccessor.c:672:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
XSAccessor.c:672:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
XSAccessor.c:672:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
XSAccessor.c:672:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:39:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(getter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:39:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(getter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:39:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(getter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:39:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(getter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:43:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:43:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:43:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:43:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:43:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:43:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:43:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:43:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:55:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(lvalue_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:55:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(lvalue_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:55:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(lvalue_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:55:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(lvalue_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:66:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:66:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:66:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:66:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:69:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:69:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:69:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:69:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:69:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:69:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:69:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:69:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:80:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:80:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:80:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:80:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:94:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(chained_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:94:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(chained_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:94:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(chained_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:94:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(chained_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:108:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:108:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:108:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:108:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:119:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:119:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:119:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:119:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:119:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:119:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:119:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:119:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:131:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(chained_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:131:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(chained_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:131:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(chained_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:131:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(chained_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:142:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:142:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:142:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:142:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:142:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:142:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:142:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:142:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:153:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(exists_predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:153:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(exists_predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:153:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(exists_predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:153:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(exists_predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:155:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:24: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:155:7: note: '{' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:35: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:155:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:155:7: note: '{' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:155:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:155:7: note: ')' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:155:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:65: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:155:7: note: ')' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:67: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:157:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:24: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:157:7: note: '{' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:35: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:157:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:157:7: note: '{' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:157:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:157:7: note: ')' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:157:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:65: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:157:7: note: ')' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:67: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(defined_predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:168:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(defined_predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(defined_predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:168:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(defined_predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:170:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:24: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:170:7: note: '{' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:35: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:170:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:170:7: note: '{' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:170:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:170:7: note: ')' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:170:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:65: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:170:7: note: ')' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:67: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:172:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:24: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:172:7: note: '{' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:35: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:172:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:172:7: note: '{' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:172:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:172:7: note: ')' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:172:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:65: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:172:7: note: ')' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:67: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:183:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(constructor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:183:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(constructor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:183:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(constructor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:183:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(constructor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:208:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(constant_false);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:208:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(constant_false);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:208:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(constant_false);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:208:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(constant_false);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:210:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:24: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:210:7: note: '{' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:35: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:210:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:210:7: note: '{' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:210:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:210:7: note: ')' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:210:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:65: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:210:7: note: ')' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:67: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:218:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(constant_true);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:218:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(constant_true);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Hash.xs:218:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(constant_true);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Hash.xs:218:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(constant_true);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:220:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:24: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:220:7: note: '{' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:35: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:220:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:220:7: note: '{' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:220:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:220:7: note: ')' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:220:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:65: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:220:7: note: ')' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:67: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:233:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB_TEST(test);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:182:79: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB_TEST'
#define CXAH_OPTIMIZE_ENTERSUB_TEST(name)                                     \
                                                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:233:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB_TEST(test);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:183:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB_TEST'
STMT_START {                                                                  \
           ^
./XS/Hash.xs:233:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB_TEST(test);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:196:79: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB_TEST'
    }                                                                         \
                                                                              ^
./XS/Hash.xs:233:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB_TEST(test);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:197:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB_TEST'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:244:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:244:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/Hash.xs:244:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:244:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Hash.xs:244:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Hash.xs:244:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:244:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/Hash.xs:244:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:265:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(getter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:265:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(getter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/Hash.xs:265:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(getter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:265:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(getter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/Hash.xs:265:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(getter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/Hash.xs:265:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(getter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:265:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(getter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/Hash.xs:265:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(getter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:269:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(lvalue_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:269:9: note: '{' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(lvalue_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/Hash.xs:269:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(lvalue_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:269:9: note: '{' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(lvalue_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/Hash.xs:269:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(lvalue_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/Hash.xs:269:9: note: ')' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(lvalue_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:269:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(lvalue_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/Hash.xs:269:9: note: ')' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(lvalue_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:276:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(defined_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:276:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(defined_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/Hash.xs:276:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(defined_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:276:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(defined_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/Hash.xs:276:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(defined_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/Hash.xs:276:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(defined_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:276:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(defined_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/Hash.xs:276:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(defined_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:279:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(exists_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:279:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(exists_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/Hash.xs:279:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(exists_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:279:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(exists_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/Hash.xs:279:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(exists_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/Hash.xs:279:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(exists_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:279:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(exists_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/Hash.xs:279:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(exists_predicate), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:302:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:302:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/Hash.xs:302:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:302:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/Hash.xs:302:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/Hash.xs:302:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:302:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/Hash.xs:302:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:304:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:304:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/Hash.xs:304:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:304:7: note: '{' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/Hash.xs:304:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/Hash.xs:304:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:304:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/Hash.xs:304:7: note: ')' token is here
      INSTALL_NEW_CV_HASH_OBJ(name, CXAH(setter), key, keylen);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:308:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:308:9: note: '{' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/Hash.xs:308:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:308:9: note: '{' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/Hash.xs:308:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/Hash.xs:308:9: note: ')' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:308:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/Hash.xs:308:9: note: ')' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(chained_accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:310:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:310:9: note: '{' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/Hash.xs:310:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:310:9: note: '{' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/Hash.xs:310:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/Hash.xs:310:9: note: ')' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:310:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/Hash.xs:310:9: note: ')' token is here
        INSTALL_NEW_CV_HASH_OBJ(name, CXAH(accessor), key, keylen);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:321:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV(name, CXAH(constructor));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:325:79: note: expanded from macro 'INSTALL_NEW_CV'
#define INSTALL_NEW_CV(name, xsub)                                            \
                                                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:321:5: note: '{' token is here
    INSTALL_NEW_CV(name, CXAH(constructor));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:326:12: note: expanded from macro 'INSTALL_NEW_CV'
STMT_START {                                                                  \
           ^
./XS/Hash.xs:321:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV(name, CXAH(constructor));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:328:79: note: expanded from macro 'INSTALL_NEW_CV'
    croak("ARG! Something went really wrong while installing a new XSUB!");   \
                                                                              ^
./XS/Hash.xs:321:5: note: ')' token is here
    INSTALL_NEW_CV(name, CXAH(constructor));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:329:3: note: expanded from macro 'INSTALL_NEW_CV'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:333:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV(name, CXAH(constant_true));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:325:79: note: expanded from macro 'INSTALL_NEW_CV'
#define INSTALL_NEW_CV(name, xsub)                                            \
                                                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:333:7: note: '{' token is here
      INSTALL_NEW_CV(name, CXAH(constant_true));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:326:12: note: expanded from macro 'INSTALL_NEW_CV'
STMT_START {                                                                  \
           ^
./XS/Hash.xs:333:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV(name, CXAH(constant_true));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:328:79: note: expanded from macro 'INSTALL_NEW_CV'
    croak("ARG! Something went really wrong while installing a new XSUB!");   \
                                                                              ^
./XS/Hash.xs:333:7: note: ')' token is here
      INSTALL_NEW_CV(name, CXAH(constant_true));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:329:3: note: expanded from macro 'INSTALL_NEW_CV'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:335:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV(name, CXAH(constant_false));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:325:79: note: expanded from macro 'INSTALL_NEW_CV'
#define INSTALL_NEW_CV(name, xsub)                                            \
                                                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:335:7: note: '{' token is here
      INSTALL_NEW_CV(name, CXAH(constant_false));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:326:12: note: expanded from macro 'INSTALL_NEW_CV'
STMT_START {                                                                  \
           ^
./XS/Hash.xs:335:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV(name, CXAH(constant_false));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:328:79: note: expanded from macro 'INSTALL_NEW_CV'
    croak("ARG! Something went really wrong while installing a new XSUB!");   \
                                                                              ^
./XS/Hash.xs:335:7: note: ')' token is here
      INSTALL_NEW_CV(name, CXAH(constant_false));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:329:3: note: expanded from macro 'INSTALL_NEW_CV'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:348:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(test), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:348:5: note: '{' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(test), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/Hash.xs:348:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(test), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Hash.xs:348:5: note: '{' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(test), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/Hash.xs:348:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(test), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/Hash.xs:348:5: note: ')' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(test), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Hash.xs:348:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(test), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/Hash.xs:348:5: note: ')' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(test), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(array_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:30:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(array_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/HashCACompat.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(array_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/HashCACompat.xs:30:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(array_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:110:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(array_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:199:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
#define CXAH_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:110:5: note: '{' token is here
    CXAH_OPTIMIZE_ENTERSUB(array_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:200:12: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/HashCACompat.xs:110:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAH_OPTIMIZE_ENTERSUB(array_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:203:85: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/HashCACompat.xs:110:5: note: ')' token is here
    CXAH_OPTIMIZE_ENTERSUB(array_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:204:3: note: expanded from macro 'CXAH_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:116:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:116:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/HashCACompat.xs:116:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:116:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/HashCACompat.xs:116:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/HashCACompat.xs:116:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:116:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/HashCACompat.xs:116:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:162:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:162:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/HashCACompat.xs:162:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:162:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/HashCACompat.xs:162:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/HashCACompat.xs:162:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:162:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/HashCACompat.xs:162:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:204:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_setter_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:204:5: note: '{' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_setter_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/HashCACompat.xs:204:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_setter_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:204:5: note: '{' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_setter_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/HashCACompat.xs:204:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_setter_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/HashCACompat.xs:204:5: note: ')' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_setter_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:204:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_setter_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/HashCACompat.xs:204:5: note: ')' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_setter_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:218:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_accessor_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:368:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
#define INSTALL_NEW_CV_HASH_OBJ(name, xsub, obj_hash_key, obj_hash_key_len)  \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:218:5: note: '{' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_accessor_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:369:12: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
STMT_START {                                                                 \
           ^
./XS/HashCACompat.xs:218:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_accessor_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:347:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
#define INSTALL_NEW_CV_WITH_PTR(name, xsub, user_pointer)                   \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/HashCACompat.xs:218:5: note: '{' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_accessor_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:348:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
STMT_START {                                                                \
           ^
./XS/HashCACompat.xs:218:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_accessor_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:352:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
  XSANY.any_ptr = (void *)user_pointer;                                     \
                                                                            ^
./XS/HashCACompat.xs:218:5: note: ')' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_accessor_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:371:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  INSTALL_NEW_CV_WITH_PTR(name, xsub, hk_ptr);                               \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:353:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_PTR'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/HashCACompat.xs:218:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_accessor_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:376:78: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
  PERL_HASH(hk_ptr->hash, obj_hash_key, obj_hash_key_len);                   \
                                                                             ^
./XS/HashCACompat.xs:218:5: note: ')' token is here
    INSTALL_NEW_CV_HASH_OBJ(name, CXAH(array_accessor_init), key, keylen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:377:3: note: expanded from macro 'INSTALL_NEW_CV_HASH_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:19:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(getter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:206:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
#define CXAA_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:19:5: note: '{' token is here
    CXAA_OPTIMIZE_ENTERSUB(getter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:207:12: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Array.xs:19:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(getter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:210:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Array.xs:19:5: note: ')' token is here
    CXAA_OPTIMIZE_ENTERSUB(getter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:211:3: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:23:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:23:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/Array.xs:23:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:23:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Array.xs:23:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Array.xs:23:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:23:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/Array.xs:23:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:38:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(lvalue_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:206:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
#define CXAA_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:38:5: note: '{' token is here
    CXAA_OPTIMIZE_ENTERSUB(lvalue_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:207:12: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Array.xs:38:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(lvalue_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:210:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Array.xs:38:5: note: ')' token is here
    CXAA_OPTIMIZE_ENTERSUB(lvalue_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:211:3: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:49:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:49:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Array.xs:49:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Array.xs:49:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:52:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/Array.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:52:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Array.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Array.xs:52:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/Array.xs:52:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:66:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:206:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
#define CXAA_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:66:5: note: '{' token is here
    CXAA_OPTIMIZE_ENTERSUB(setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:207:12: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Array.xs:66:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:210:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Array.xs:66:5: note: ')' token is here
    CXAA_OPTIMIZE_ENTERSUB(setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:211:3: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:83:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(chained_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:206:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
#define CXAA_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:83:5: note: '{' token is here
    CXAA_OPTIMIZE_ENTERSUB(chained_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:207:12: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Array.xs:83:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(chained_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:210:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Array.xs:83:5: note: ')' token is here
    CXAA_OPTIMIZE_ENTERSUB(chained_setter);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:211:3: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:100:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:206:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
#define CXAA_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:100:5: note: '{' token is here
    CXAA_OPTIMIZE_ENTERSUB(accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:207:12: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Array.xs:100:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:210:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Array.xs:100:5: note: ')' token is here
    CXAA_OPTIMIZE_ENTERSUB(accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:211:3: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:111:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:111:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/Array.xs:111:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:111:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Array.xs:111:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Array.xs:111:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:111:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/Array.xs:111:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:126:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(chained_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:206:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
#define CXAA_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:126:5: note: '{' token is here
    CXAA_OPTIMIZE_ENTERSUB(chained_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:207:12: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Array.xs:126:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(chained_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:210:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Array.xs:126:5: note: ')' token is here
    CXAA_OPTIMIZE_ENTERSUB(chained_accessor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:211:3: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:137:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:137:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./XS/Array.xs:137:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:137:9: note: '{' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Array.xs:137:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Array.xs:137:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:137:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./XS/Array.xs:137:9: note: ')' token is here
        XSRETURN_UNDEF;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:206:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
#define CXAA_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:152:5: note: '{' token is here
    CXAA_OPTIMIZE_ENTERSUB(predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:207:12: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Array.xs:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:210:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Array.xs:152:5: note: ')' token is here
    CXAA_OPTIMIZE_ENTERSUB(predicate);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:211:3: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:154:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:24: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:154:7: note: '{' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:35: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                  ^
./XS/Array.xs:154:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:154:7: note: '{' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Array.xs:154:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Array.xs:154:7: note: ')' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:154:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:65: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                ^
./XS/Array.xs:154:7: note: ')' token is here
      XSRETURN_YES;
      ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:67: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:156:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:24: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:156:7: note: '{' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:35: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                  ^
./XS/Array.xs:156:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:4001:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:156:7: note: '{' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./XS/Array.xs:156:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./XS/Array.xs:156:7: note: ')' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:156:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:65: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                ^
./XS/Array.xs:156:7: note: ')' token is here
      XSRETURN_NO;
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:67: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:166:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(constructor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:206:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
#define CXAA_OPTIMIZE_ENTERSUB(name)                                                \
                                                                                    ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:166:5: note: '{' token is here
    CXAA_OPTIMIZE_ENTERSUB(constructor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:207:12: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
STMT_START {                                                                        \
           ^
./XS/Array.xs:166:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CXAA_OPTIMIZE_ENTERSUB(constructor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:210:85: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
    }                                                                               \
                                                                                    ^
./XS/Array.xs:166:5: note: ')' token is here
    CXAA_OPTIMIZE_ENTERSUB(constructor);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:211:3: note: expanded from macro 'CXAA_OPTIMIZE_ENTERSUB'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:190:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(getter), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:358:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
#define INSTALL_NEW_CV_ARRAY_OBJ(name, xsub, obj_array_index)                \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:190:7: note: '{' token is here
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(getter), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:359:12: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
STMT_START {                                                                 \
           ^
./XS/Array.xs:190:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(getter), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:336:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
#define INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index)               \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:190:7: note: '{' token is here
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(getter), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:337:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
STMT_START {                                                                \
           ^
./XS/Array.xs:190:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(getter), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:341:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
  XSANY.any_i32 = function_index;                                           \
                                                                            ^
./XS/Array.xs:190:7: note: ')' token is here
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(getter), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:342:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:190:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(getter), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:362:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  CXSAccessor_arrayindices[function_index] = obj_array_index;                \
                                                                             ^
./XS/Array.xs:190:7: note: ')' token is here
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(getter), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:363:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:195:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(lvalue_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:358:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
#define INSTALL_NEW_CV_ARRAY_OBJ(name, xsub, obj_array_index)                \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:195:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(lvalue_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:359:12: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
STMT_START {                                                                 \
           ^
./XS/Array.xs:195:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(lvalue_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:336:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
#define INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index)               \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:195:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(lvalue_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:337:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
STMT_START {                                                                \
           ^
./XS/Array.xs:195:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(lvalue_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:341:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
  XSANY.any_i32 = function_index;                                           \
                                                                            ^
./XS/Array.xs:195:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(lvalue_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:342:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:195:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(lvalue_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:362:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  CXSAccessor_arrayindices[function_index] = obj_array_index;                \
                                                                             ^
./XS/Array.xs:195:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(lvalue_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:363:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:201:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(predicate), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:358:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
#define INSTALL_NEW_CV_ARRAY_OBJ(name, xsub, obj_array_index)                \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:201:7: note: '{' token is here
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(predicate), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:359:12: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
STMT_START {                                                                 \
           ^
./XS/Array.xs:201:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(predicate), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:336:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
#define INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index)               \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:201:7: note: '{' token is here
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(predicate), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:337:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
STMT_START {                                                                \
           ^
./XS/Array.xs:201:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(predicate), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:341:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
  XSANY.any_i32 = function_index;                                           \
                                                                            ^
./XS/Array.xs:201:7: note: ')' token is here
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(predicate), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:342:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:201:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(predicate), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:362:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  CXSAccessor_arrayindices[function_index] = obj_array_index;                \
                                                                             ^
./XS/Array.xs:201:7: note: ')' token is here
      INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(predicate), index);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:363:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:222:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:358:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
#define INSTALL_NEW_CV_ARRAY_OBJ(name, xsub, obj_array_index)                \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:222:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:359:12: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
STMT_START {                                                                 \
           ^
./XS/Array.xs:222:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:336:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
#define INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index)               \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:222:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:337:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
STMT_START {                                                                \
           ^
./XS/Array.xs:222:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:341:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
  XSANY.any_i32 = function_index;                                           \
                                                                            ^
./XS/Array.xs:222:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:342:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:222:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:362:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  CXSAccessor_arrayindices[function_index] = obj_array_index;                \
                                                                             ^
./XS/Array.xs:222:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:363:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:224:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:358:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
#define INSTALL_NEW_CV_ARRAY_OBJ(name, xsub, obj_array_index)                \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:224:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:359:12: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
STMT_START {                                                                 \
           ^
./XS/Array.xs:224:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:336:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
#define INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index)               \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:224:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:337:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
STMT_START {                                                                \
           ^
./XS/Array.xs:224:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:341:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
  XSANY.any_i32 = function_index;                                           \
                                                                            ^
./XS/Array.xs:224:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:342:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:224:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:362:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  CXSAccessor_arrayindices[function_index] = obj_array_index;                \
                                                                             ^
./XS/Array.xs:224:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(setter), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:363:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:228:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:358:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
#define INSTALL_NEW_CV_ARRAY_OBJ(name, xsub, obj_array_index)                \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:228:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:359:12: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
STMT_START {                                                                 \
           ^
./XS/Array.xs:228:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:336:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
#define INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index)               \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:228:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:337:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
STMT_START {                                                                \
           ^
./XS/Array.xs:228:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:341:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
  XSANY.any_i32 = function_index;                                           \
                                                                            ^
./XS/Array.xs:228:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:342:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:228:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:362:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  CXSAccessor_arrayindices[function_index] = obj_array_index;                \
                                                                             ^
./XS/Array.xs:228:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(chained_accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:363:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:230:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:358:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
#define INSTALL_NEW_CV_ARRAY_OBJ(name, xsub, obj_array_index)                \
                                                                             ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:230:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:359:12: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
STMT_START {                                                                 \
           ^
./XS/Array.xs:230:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:336:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
#define INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index)               \
                                                                            ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:230:9: note: '{' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:337:12: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
STMT_START {                                                                \
           ^
./XS/Array.xs:230:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:341:77: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
  XSANY.any_i32 = function_index;                                           \
                                                                            ^
./XS/Array.xs:230:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:361:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  INSTALL_NEW_CV_WITH_INDEX(name, xsub, function_index);                     \
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:342:3: note: expanded from macro 'INSTALL_NEW_CV_WITH_INDEX'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:230:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:362:78: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
  CXSAccessor_arrayindices[function_index] = obj_array_index;                \
                                                                             ^
./XS/Array.xs:230:9: note: ')' token is here
        INSTALL_NEW_CV_ARRAY_OBJ(name, CXAA(accessor), index);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:363:3: note: expanded from macro 'INSTALL_NEW_CV_ARRAY_OBJ'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./XS/Array.xs:241:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV(name, CXAA(constructor));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:325:79: note: expanded from macro 'INSTALL_NEW_CV'
#define INSTALL_NEW_CV(name, xsub)                                            \
                                                                              ^
./ppport.h:4001:28: note: expanded from macro '\
STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./XS/Array.xs:241:5: note: '{' token is here
    INSTALL_NEW_CV(name, CXAA(constructor));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:326:12: note: expanded from macro 'INSTALL_NEW_CV'
STMT_START {                                                                  \
           ^
./XS/Array.xs:241:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    INSTALL_NEW_CV(name, CXAA(constructor));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:328:79: note: expanded from macro 'INSTALL_NEW_CV'
    croak("ARG! Something went really wrong while installing a new XSUB!");   \
                                                                              ^
./XS/Array.xs:241:5: note: ')' token is here
    INSTALL_NEW_CV(name, CXAA(constructor));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XSAccessor.xs:329:3: note: expanded from macro 'INSTALL_NEW_CV'
} STMT_END
  ^~~~~~~~
./ppport.h:4002:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
312 warnings generated.
rm -f blib/arch/auto/Class/XSAccessor/XSAccessor.so
x86_64-linux-gnu-gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now  -shared -L/usr/local/lib -fstack-protector-strong  XSAccessor.o cxsa_hash_table.o cxsa_locking.o cxsa_main.o cxsa_memory.o  -o blib/arch/auto/Class/XSAccessor/XSAccessor.so  \
      \
  
chmod 755 blib/arch/auto/Class/XSAccessor/XSAccessor.so
Manifying 3 pod documents
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_test
	make -j4 test TEST_VERBOSE=1
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- XSAccessor.bs blib/arch/auto/Class/XSAccessor/XSAccessor.bs 644
PERL_DL_NONLAZY=1 "/usr/bin/perl" "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness(1, 'blib/lib', 'blib/arch')" t/*.t

#   Failed test 'use Class::XSAccessor;'
#   at t/01hash_basic.t line 5.
#     Tried to use 'Class::XSAccessor'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at t/01hash_basic.t line 5.
# Compilation failed in require at t/01hash_basic.t line 5.
# BEGIN failed--compilation aborted at t/01hash_basic.t line 5.
Attempt to reload Class/XSAccessor.pm aborted.
Compilation failed in require at t/01hash_basic.t line 12.
BEGIN failed--compilation aborted at t/01hash_basic.t line 12.
# Looks like your test exited with 255 just after 1.
t/01hash_basic.t .............. 
1..39
not ok 1 - use Class::XSAccessor;
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 39/39 subtests 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at t/02hash_accessor.t line 9.
Compilation failed in require at t/02hash_accessor.t line 9.
BEGIN failed--compilation aborted at t/02hash_accessor.t line 9.
t/02hash_accessor.t ........... 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at t/03hash_predicate.t line 12.
Compilation failed in require at t/03hash_predicate.t line 12.
BEGIN failed--compilation aborted at t/03hash_predicate.t line 12.
t/03hash_predicate.t .......... 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at t/04hash_chained.t line 10.
Compilation failed in require at t/04hash_chained.t line 10.
BEGIN failed--compilation aborted at t/04hash_chained.t line 10.
t/04hash_chained.t ............ 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at t/05hash_replace.t line 7.
Compilation failed in require at t/05hash_replace.t line 7.
BEGIN failed--compilation aborted at t/05hash_replace.t line 7.
t/05hash_replace.t ............ 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at t/06hash_constructor.t line 10.
Compilation failed in require at t/06hash_constructor.t line 10.
BEGIN failed--compilation aborted at t/06hash_constructor.t line 10.
t/06hash_constructor.t ........ 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at t/07hash_boolean.t line 9.
Compilation failed in require at t/07hash_boolean.t line 9.
BEGIN failed--compilation aborted at t/07hash_boolean.t line 9.
t/07hash_boolean.t ............ 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at t/08hash_entersub.t line 42.
Compilation failed in require at t/08hash_entersub.t line 42.
BEGIN failed--compilation aborted at t/08hash_entersub.t line 42.
t/08hash_entersub.t ........... 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 

#   Failed test 'use Class::XSAccessor;'
#   at t/09hash_use_hash.t line 9.
#     Tried to use 'Class::XSAccessor'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at t/09hash_use_hash.t line 9.
# Compilation failed in require at t/09hash_use_hash.t line 9.
# BEGIN failed--compilation aborted at t/09hash_use_hash.t line 9.
Attempt to reload Class/XSAccessor.pm aborted.
Compilation failed in require at t/09hash_use_hash.t line 17.
BEGIN failed--compilation aborted at t/09hash_use_hash.t line 17.
# Looks like your test exited with 255 just after 1.
t/09hash_use_hash.t ........... 
1..35
not ok 1 - use Class::XSAccessor;
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 35/35 subtests 

#   Failed test 'use Class::XSAccessor;'
#   at t/10hash_lvalue.t line 5.
#     Tried to use 'Class::XSAccessor'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at t/10hash_lvalue.t line 5.
# Compilation failed in require at t/10hash_lvalue.t line 5.
# BEGIN failed--compilation aborted at t/10hash_lvalue.t line 5.
Attempt to reload Class/XSAccessor.pm aborted.
Compilation failed in require at t/10hash_lvalue.t line 11.
BEGIN failed--compilation aborted at t/10hash_lvalue.t line 11.
# Looks like your test exited with 255 just after 1.
t/10hash_lvalue.t ............. 
1..11
not ok 1 - use Class::XSAccessor;
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 11/11 subtests 

#   Failed test 'use Class::XSAccessor::Array;'
#   at t/31array_basic.t line 5.
#     Tried to use 'Class::XSAccessor::Array'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# Compilation failed in require at t/31array_basic.t line 5.
# BEGIN failed--compilation aborted at t/31array_basic.t line 5.
Attempt to reload Class/XSAccessor/Array.pm aborted.
Compilation failed in require at t/31array_basic.t line 12.
BEGIN failed--compilation aborted at t/31array_basic.t line 12.
# Looks like your test exited with 255 just after 1.
t/31array_basic.t ............. 
1..26
not ok 1 - use Class::XSAccessor::Array;
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 26/26 subtests 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at t/32array_accessor.t line 9.
BEGIN failed--compilation aborted at t/32array_accessor.t line 9.
t/32array_accessor.t .......... 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at t/33array_predicate.t line 10.
BEGIN failed--compilation aborted at t/33array_predicate.t line 10.
t/33array_predicate.t ......... 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at t/34array_chained.t line 10.
BEGIN failed--compilation aborted at t/34array_chained.t line 10.
t/34array_chained.t ........... 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at t/35array_replace.t line 7.
BEGIN failed--compilation aborted at t/35array_replace.t line 7.
t/35array_replace.t ........... 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at t/36array_constructor.t line 10.
BEGIN failed--compilation aborted at t/36array_constructor.t line 10.
t/36array_constructor.t ....... 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at t/37array_boolean.t line 9.
BEGIN failed--compilation aborted at t/37array_boolean.t line 9.
t/37array_boolean.t ........... 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 

#   Failed test 'use Class::XSAccessor::Array;'
#   at t/38array_use_hash.t line 7.
#     Tried to use 'Class::XSAccessor::Array'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# Compilation failed in require at t/38array_use_hash.t line 7.
# BEGIN failed--compilation aborted at t/38array_use_hash.t line 7.
Attempt to reload Class/XSAccessor/Array.pm aborted.
Compilation failed in require at t/38array_use_hash.t line 15.
BEGIN failed--compilation aborted at t/38array_use_hash.t line 15.
# Looks like your test exited with 255 just after 1.
t/38array_use_hash.t .......... 
1..26
not ok 1 - use Class::XSAccessor::Array;
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 26/26 subtests 

#   Failed test 'use Class::XSAccessor::Array;'
#   at t/39array_lvalue.t line 5.
#     Tried to use 'Class::XSAccessor::Array'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# Compilation failed in require at t/39array_lvalue.t line 5.
# BEGIN failed--compilation aborted at t/39array_lvalue.t line 5.
Attempt to reload Class/XSAccessor/Array.pm aborted.
Compilation failed in require at t/39array_lvalue.t line 11.
BEGIN failed--compilation aborted at t/39array_lvalue.t line 11.
# Looks like your test exited with 255 just after 1.
t/39array_lvalue.t ............ 
1..6
not ok 1 - use Class::XSAccessor::Array;
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 6/6 subtests 

#   Failed test 'use Class::XSAccessor;'
#   at t/40hash_bad_call.t line 6.
#     Tried to use 'Class::XSAccessor'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at t/40hash_bad_call.t line 6.
# Compilation failed in require at t/40hash_bad_call.t line 6.
# BEGIN failed--compilation aborted at t/40hash_bad_call.t line 6.
Attempt to reload Class/XSAccessor.pm aborted.
Compilation failed in require at t/40hash_bad_call.t line 13.
BEGIN failed--compilation aborted at t/40hash_bad_call.t line 13.
# Looks like your test exited with 255 just after 1.
t/40hash_bad_call.t ........... 
1..19
not ok 1 - use Class::XSAccessor;
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 19/19 subtests 

#   Failed test 'use Class::XSAccessor;'
#   at t/41array_bad_call.t line 6.
#     Tried to use 'Class::XSAccessor'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at t/41array_bad_call.t line 6.
# Compilation failed in require at t/41array_bad_call.t line 6.
# BEGIN failed--compilation aborted at t/41array_bad_call.t line 6.
Attempt to reload Class/XSAccessor.pm aborted.
Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
Compilation failed in require at t/41array_bad_call.t line 16.
BEGIN failed--compilation aborted at t/41array_bad_call.t line 16.
# Looks like your test exited with 255 just after 1.
t/41array_bad_call.t .......... 
1..13
not ok 1 - use Class::XSAccessor;
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 13/13 subtests 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at t/50reentrant_goto_sigsegv.t line 8.
Compilation failed in require at t/50reentrant_goto_sigsegv.t line 8.
BEGIN failed--compilation aborted at t/50reentrant_goto_sigsegv.t line 8.
t/50reentrant_goto_sigsegv.t .. 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 

#   Failed test 'use Class::XSAccessor;'
#   at t/70bad_arguments.t line 5.
#     Tried to use 'Class::XSAccessor'.
#     Error:  Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at t/70bad_arguments.t line 5.
# Compilation failed in require at t/70bad_arguments.t line 5.
# BEGIN failed--compilation aborted at t/70bad_arguments.t line 5.

#   Failed test 'use Class::XSAccessor::Array;'
#   at t/70bad_arguments.t line 6.
#     Tried to use 'Class::XSAccessor::Array'.
#     Error:  Attempt to reload Class/XSAccessor.pm aborted.
# Compilation failed in require at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# BEGIN failed--compilation aborted at /<<PKGBUILDDIR>>/blib/lib/Class/XSAccessor/Array.pm line 6.
# Compilation failed in require at t/70bad_arguments.t line 6.
# BEGIN failed--compilation aborted at t/70bad_arguments.t line 6.
Attempt to reload Class/XSAccessor.pm aborted.
Compilation failed in require at t/70bad_arguments.t line 12.
BEGIN failed--compilation aborted at t/70bad_arguments.t line 12.
# Looks like your test exited with 255 just after 2.
t/70bad_arguments.t ........... 
1..9
not ok 1 - use Class::XSAccessor;
not ok 2 - use Class::XSAccessor::Array;
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 9/9 subtests 
Can't load '/<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so' for module Class::XSAccessor: /<<PKGBUILDDIR>>/blib/arch/auto/Class/XSAccessor/XSAccessor.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at t/80threadbomb.t line 56.
Compilation failed in require at t/80threadbomb.t line 56.
BEGIN failed--compilation aborted at t/80threadbomb.t line 56.
t/80threadbomb.t .............. 
Dubious, test returned 2 (wstat 512, 0x200)
No subtests run 

Test Summary Report
-------------------
t/01hash_basic.t            (Wstat: 65280 Tests: 1 Failed: 1)
  Failed test:  1
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 39 tests but ran 1.
t/02hash_accessor.t         (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/03hash_predicate.t        (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/04hash_chained.t          (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/05hash_replace.t          (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/06hash_constructor.t      (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/07hash_boolean.t          (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/08hash_entersub.t         (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/09hash_use_hash.t         (Wstat: 65280 Tests: 1 Failed: 1)
  Failed test:  1
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 35 tests but ran 1.
t/10hash_lvalue.t           (Wstat: 65280 Tests: 1 Failed: 1)
  Failed test:  1
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 11 tests but ran 1.
t/31array_basic.t           (Wstat: 65280 Tests: 1 Failed: 1)
  Failed test:  1
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 26 tests but ran 1.
t/32array_accessor.t        (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/33array_predicate.t       (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/34array_chained.t         (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/35array_replace.t         (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/36array_constructor.t     (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/37array_boolean.t         (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/38array_use_hash.t        (Wstat: 65280 Tests: 1 Failed: 1)
  Failed test:  1
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 26 tests but ran 1.
t/39array_lvalue.t          (Wstat: 65280 Tests: 1 Failed: 1)
  Failed test:  1
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 6 tests but ran 1.
t/40hash_bad_call.t         (Wstat: 65280 Tests: 1 Failed: 1)
  Failed test:  1
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 19 tests but ran 1.
t/41array_bad_call.t        (Wstat: 65280 Tests: 1 Failed: 1)
  Failed test:  1
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 13 tests but ran 1.
t/50reentrant_goto_sigsegv.t (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/70bad_arguments.t         (Wstat: 65280 Tests: 2 Failed: 2)
  Failed tests:  1-2
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 9 tests but ran 2.
t/80threadbomb.t            (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
Files=24, Tests=10,  0 wallclock secs ( 0.04 usr  0.02 sys +  0.48 cusr  0.10 csys =  0.64 CPU)
Result: FAIL
Failed 24/24 test programs. 10/10 subtests failed.
make[1]: *** [Makefile:1046: test_dynamic] Error 2
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
dh_auto_test: error: make -j4 test TEST_VERBOSE=1 returned exit code 2
make: *** [debian/rules:9: build] Error 25
dpkg-buildpackage: error: debian/rules build subprocess returned exit status 2
--------------------------------------------------------------------------------
Build finished at 2021-10-26T23:27:29Z

Finished
--------


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use
E: Build failure (dpkg-buildpackage died)

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 1348
Build-Time: 3
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 4
Job: libclass-xsaccessor-perl_1.19-3
Machine Architecture: amd64
Package: libclass-xsaccessor-perl
Package-Time: 27
Source-Version: 1.19-3
Space: 1348
Status: attempted
Version: 1.19-3
--------------------------------------------------------------------------------
Finished at 2021-10-26T23:27:29Z
Build needed 00:00:27, 1348k disk space
E: Build failure (dpkg-buildpackage died)
DC-Status: Failed 28.260631056s
