DC-Build-Header: libconvert-binary-c-perl 0.84-1 / 2021-10-26 23:04:23 +0000
DC-Task: type:rebuild-binarch-only source:libconvert-binary-c-perl version:0.84-1 chroot:unstable esttime:65 logfile:/tmp/libconvert-binary-c-perl_0.84-1_unstable_clang13.log modes:clang13:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang13 libconvert-binary-c-perl_0.84-1'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-5-56.eu-central-1.compute.internal

+==============================================================================+
| libconvert-binary-c-perl 0.84-1 (amd64)      Tue, 26 Oct 2021 23:04:23 +0000 |
+==============================================================================+

Package: libconvert-binary-c-perl
Version: 0.84-1
Source Version: 0.84-1
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-750783d2-f5ca-4db7-ba5b-7f83986f057c' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang13
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=13
+ echo 'Install of clang-13'
Install of clang-13
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [165 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [63.6 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [63.6 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [47.3 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages T-2021-10-26-2004.40-F-2021-10-26-0202.15.pdiff [55.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Translation-en [6586 kB]
Fetched 6981 kB in 3s (2766 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-13 libomp-13-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386 libclang-common-13-dev
  libclang-cpp13 libclang1-13 libedit2 libgc1 libgcc-9-dev libicu67 libllvm13
  libmd0 libobjc-11-dev libobjc4 libomp5-13 libxml2 libz3-4
Suggested packages:
  clang-13-doc libomp-13-doc
Recommended packages:
  llvm-13-dev python3
The following NEW packages will be installed:
  clang-13 lib32gcc-s1 lib32stdc++6 libasan5 libbsd0 libc6-i386
  libclang-common-13-dev libclang-cpp13 libclang1-13 libedit2 libgc1
  libgcc-9-dev libicu67 libllvm13 libmd0 libobjc-11-dev libobjc-9-dev libobjc4
  libomp-13-dev libomp5-13 libxml2 libz3-4
0 upgraded, 22 newly installed, 0 to remove and 0 not upgraded.
Need to get 68.5 MB of archives.
After this operation, 379 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libmd0 amd64 1.0.4-1 [29.6 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.11.3-1 [108 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20210910-1 [97.5 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libicu67 amd64 67.1-7 [8622 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.12+dfsg-5 [696 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.12-1+b1 [6997 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libllvm13 amd64 1:13.0.0-8 [19.7 MB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp13 amd64 1:13.0.0-8 [10.5 MB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libgc1 amd64 1:8.0.4-3 [239 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 11.2.0-10 [43.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc-11-dev amd64 11.2.0-10 [170 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.32-4 [2624 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 11.2.0-10 [49.9 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 11.2.0-10 [601 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-13-dev amd64 1:13.0.0-8 [5730 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libclang1-13 amd64 1:13.0.0-8 [6093 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 clang-13 amd64 1:13.0.0-8 [119 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libasan5 amd64 9.4.0-3 [2734 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libgcc-9-dev amd64 9.4.0-3 [2343 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.4.0-3 [219 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libomp5-13 amd64 1:13.0.0-8 [377 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libomp-13-dev amd64 1:13.0.0-8 [482 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 68.5 MB in 0s (140 MB/s)
Selecting previously unselected package libmd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12431 files and directories currently installed.)
Preparing to unpack .../00-libmd0_1.0.4-1_amd64.deb ...
Unpacking libmd0:amd64 (1.0.4-1) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../01-libbsd0_0.11.3-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.11.3-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../02-libedit2_3.1-20210910-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20210910-1) ...
Selecting previously unselected package libicu67:amd64.
Preparing to unpack .../03-libicu67_67.1-7_amd64.deb ...
Unpacking libicu67:amd64 (67.1-7) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../04-libxml2_2.9.12+dfsg-5_amd64.deb ...
Unpacking libxml2:amd64 (2.9.12+dfsg-5) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../05-libz3-4_4.8.12-1+b1_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.12-1+b1) ...
Selecting previously unselected package libllvm13:amd64.
Preparing to unpack .../06-libllvm13_1%3a13.0.0-8_amd64.deb ...
Unpacking libllvm13:amd64 (1:13.0.0-8) ...
Selecting previously unselected package libclang-cpp13.
Preparing to unpack .../07-libclang-cpp13_1%3a13.0.0-8_amd64.deb ...
Unpacking libclang-cpp13 (1:13.0.0-8) ...
Selecting previously unselected package libgc1:amd64.
Preparing to unpack .../08-libgc1_1%3a8.0.4-3_amd64.deb ...
Unpacking libgc1:amd64 (1:8.0.4-3) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../09-libobjc4_11.2.0-10_amd64.deb ...
Unpacking libobjc4:amd64 (11.2.0-10) ...
Selecting previously unselected package libobjc-11-dev:amd64.
Preparing to unpack .../10-libobjc-11-dev_11.2.0-10_amd64.deb ...
Unpacking libobjc-11-dev:amd64 (11.2.0-10) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../11-libc6-i386_2.32-4_amd64.deb ...
Unpacking libc6-i386 (2.32-4) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../12-lib32gcc-s1_11.2.0-10_amd64.deb ...
Unpacking lib32gcc-s1 (11.2.0-10) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../13-lib32stdc++6_11.2.0-10_amd64.deb ...
Unpacking lib32stdc++6 (11.2.0-10) ...
Selecting previously unselected package libclang-common-13-dev.
Preparing to unpack .../14-libclang-common-13-dev_1%3a13.0.0-8_amd64.deb ...
Unpacking libclang-common-13-dev (1:13.0.0-8) ...
Selecting previously unselected package libclang1-13.
Preparing to unpack .../15-libclang1-13_1%3a13.0.0-8_amd64.deb ...
Unpacking libclang1-13 (1:13.0.0-8) ...
Selecting previously unselected package clang-13.
Preparing to unpack .../16-clang-13_1%3a13.0.0-8_amd64.deb ...
Unpacking clang-13 (1:13.0.0-8) ...
Selecting previously unselected package libasan5:amd64.
Preparing to unpack .../17-libasan5_9.4.0-3_amd64.deb ...
Unpacking libasan5:amd64 (9.4.0-3) ...
Selecting previously unselected package libgcc-9-dev:amd64.
Preparing to unpack .../18-libgcc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libgcc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../19-libobjc-9-dev_9.4.0-3_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.4.0-3) ...
Selecting previously unselected package libomp5-13:amd64.
Preparing to unpack .../20-libomp5-13_1%3a13.0.0-8_amd64.deb ...
Unpacking libomp5-13:amd64 (1:13.0.0-8) ...
Selecting previously unselected package libomp-13-dev.
Preparing to unpack .../21-libomp-13-dev_1%3a13.0.0-8_amd64.deb ...
Unpacking libomp-13-dev (1:13.0.0-8) ...
Setting up libicu67:amd64 (67.1-7) ...
Setting up libasan5:amd64 (9.4.0-3) ...
Setting up libz3-4:amd64 (4.8.12-1+b1) ...
Setting up libgc1:amd64 (1:8.0.4-3) ...
Setting up libmd0:amd64 (1.0.4-1) ...
Setting up libc6-i386 (2.32-4) ...
Setting up libomp5-13:amd64 (1:13.0.0-8) ...
Setting up libbsd0:amd64 (0.11.3-1) ...
Setting up libxml2:amd64 (2.9.12+dfsg-5) ...
Setting up libedit2:amd64 (3.1-20210910-1) ...
Setting up libobjc4:amd64 (11.2.0-10) ...
Setting up libgcc-9-dev:amd64 (9.4.0-3) ...
Setting up lib32gcc-s1 (11.2.0-10) ...
Setting up lib32stdc++6 (11.2.0-10) ...
Setting up libllvm13:amd64 (1:13.0.0-8) ...
Setting up libobjc-9-dev:amd64 (9.4.0-3) ...
Setting up libclang-common-13-dev (1:13.0.0-8) ...
Setting up libomp-13-dev (1:13.0.0-8) ...
Setting up libobjc-11-dev:amd64 (11.2.0-10) ...
Setting up libclang1-13 (1:13.0.0-8) ...
Setting up libclang-cpp13 (1:13.0.0-8) ...
Setting up clang-13 (1:13.0.0-8) ...
Processing triggers for libc-bin (2.32-4) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10 11'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-13 g++-4.6
+ ln -s clang-13 gcc-4.6
+ ln -s clang-13 cpp-4.6
+ ln -s clang-13 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-13 g++-4.7
+ ln -s clang-13 gcc-4.7
+ ln -s clang-13 cpp-4.7
+ ln -s clang-13 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-13 g++-4.8
+ ln -s clang-13 gcc-4.8
+ ln -s clang-13 cpp-4.8
+ ln -s clang-13 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-13 g++-4.9
+ ln -s clang-13 gcc-4.9
+ ln -s clang-13 cpp-4.9
+ ln -s clang-13 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-13 g++-5
+ ln -s clang-13 gcc-5
+ ln -s clang-13 cpp-5
+ ln -s clang-13 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-13 g++-6
+ ln -s clang-13 gcc-6
+ ln -s clang-13 cpp-6
+ ln -s clang-13 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-13 g++-7
+ ln -s clang-13 gcc-7
+ ln -s clang-13 cpp-7
+ ln -s clang-13 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-13 g++-8
+ ln -s clang-13 gcc-8
+ ln -s clang-13 cpp-8
+ ln -s clang-13 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-13 g++-9
+ ln -s clang-13 gcc-9
+ ln -s clang-13 cpp-9
+ ln -s clang-13 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-13 g++-10
+ ln -s clang-13 gcc-10
+ ln -s clang-13 cpp-10
+ ln -s clang-13 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-11 gcc-11 cpp-11 gcc
+ ln -s clang++-13 g++-11
+ ln -s clang-13 gcc-11
+ ln -s clang-13 cpp-11
+ ln -s clang-13 gcc
+ echo 'gcc-11 hold'
+ dpkg --set-selections
+ echo 'g++-11 hold'
+ dpkg --set-selections
+ cd -
/build/libconvert-binary-c-perl-TKP1MA
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang
+ cd /usr/bin/
+ rm -f clang++ clang
+ ln -s clang-13 clang++
+ ln -s clang-13 clang
+ clang++ --version
Debian clang version 13.0.0-8
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ clang --version
Debian clang version 13.0.0-8
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
+ cd -
/build/libconvert-binary-c-perl-TKP1MA
+ apt install --yes --no-install-recommends --force-yes qt5-qmake

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  qt5-qmake-bin qtchooser
The following NEW packages will be installed:
  qt5-qmake qt5-qmake-bin qtchooser
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 1322 kB of archives.
After this operation, 4914 kB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake-bin amd64 5.15.2+dfsg-12 [1046 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 qtchooser amd64 66-2 [26.3 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 qt5-qmake amd64 5.15.2+dfsg-12 [249 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 1322 kB in 0s (58.5 MB/s)
Selecting previously unselected package qt5-qmake-bin.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13528 files and directories currently installed.)
Preparing to unpack .../qt5-qmake-bin_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake-bin (5.15.2+dfsg-12) ...
Selecting previously unselected package qtchooser.
Preparing to unpack .../qtchooser_66-2_amd64.deb ...
Unpacking qtchooser (66-2) ...
Selecting previously unselected package qt5-qmake:amd64.
Preparing to unpack .../qt5-qmake_5.15.2+dfsg-12_amd64.deb ...
Unpacking qt5-qmake:amd64 (5.15.2+dfsg-12) ...
Setting up qt5-qmake-bin (5.15.2+dfsg-12) ...
Setting up qtchooser (66-2) ...
Setting up qt5-qmake:amd64 (5.15.2+dfsg-12) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ cp /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qmake.conf /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/qplatformdefs.h /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
+ ls -al /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/
total 16
drwxr-xr-x  2 root root 4096 Oct 26 23:04 .
drwxr-xr-x 76 root root 4096 Oct 26 23:04 ..
-rw-r--r--  1 root root  276 Oct 26 23:04 qmake.conf
-rw-r--r--  1 root root 3218 Oct 26 23:04 qplatformdefs.h
+ cat /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf
#
# qmake configuration for linux-clang
#

MAKEFILE_GENERATOR = UNIX
CONFIG += incremental

QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/clang.conf)

QMAKE_LFLAGS += -ccc-gcc-name g++

load(qt_config)
+ export QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ QMAKESPEC=/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-clang/
+ sed -i -e 's|compare_problem(2,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ sed -i -e 's|compare_problem(1,|compare_problem(0,|g' /usr/bin/dpkg-gensymbols
+ grep 'compare_problem(' /usr/bin/dpkg-gensymbols
        compare_problem(4, g_('new libraries appeared in the symbols file: %s'), "@libs");
        compare_problem(3, g_('some libraries disappeared in the symbols file: %s'), "@libs");
        compare_problem(0, g_('some new symbols appeared in the symbols file: %s'),
        compare_problem(0, g_('some symbols or patterns disappeared in the symbols file: %s'),

I: Finished running '/tmp/clang13'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/libconvert-binary-c-perl-TKP1MA/resolver-rG606C' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'libconvert-binary-c-perl' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/perl-team/modules/packages/libconvert-binary-c-perl.git
Please use:
git clone https://salsa.debian.org/perl-team/modules/packages/libconvert-binary-c-perl.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 1357 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main libconvert-binary-c-perl 0.84-1 (dsc) [2645 B]
Get:2 http://127.0.0.1:12990/debian sid/main libconvert-binary-c-perl 0.84-1 (tar) [1349 kB]
Get:3 http://127.0.0.1:12990/debian sid/main libconvert-binary-c-perl 0.84-1 (diff) [6124 B]
Fetched 1357 kB in 0s (15.9 MB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/libconvert-binary-c-perl-TKP1MA/libconvert-binary-c-perl-0.84' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/libconvert-binary-c-perl-TKP1MA' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper-compat (= 13), libtest-pod-coverage-perl, libtest-pod-perl, libtie-hash-indexed-perl, libtie-ixhash-perl, perl-xs-dev, perl, build-essential, fakeroot
Filtered Build-Depends: debhelper-compat (= 13), libtest-pod-coverage-perl, libtest-pod-perl, libtie-hash-indexed-perl, libtie-ixhash-perl, perl-xs-dev, perl, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [426 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [498 B]
Fetched 1881 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libdebhelper-perl
  libdevel-symdump-perl libelf1 libfile-stripnondeterminism-perl libmagic-mgc
  libmagic1 libperl-dev libpipeline1 libpod-coverage-perl libpod-parser-perl
  libsigsegv2 libsub-override-perl libtest-pod-coverage-perl libtest-pod-perl
  libtie-hash-indexed-perl libtie-ixhash-perl libtool libuchardet0 m4 man-db
  po-debconf sensible-utils
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc dh-make gettext-doc
  libasprintf-dev libgettextpo-dev groff libtool-doc gfortran
  | fortran95-compiler gcj-jdk m4-doc apparmor less www-browser
  libmail-box-perl
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libltdl-dev libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdextrautils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libdebhelper-perl
  libdevel-symdump-perl libelf1 libfile-stripnondeterminism-perl libmagic-mgc
  libmagic1 libperl-dev libpipeline1 libpod-coverage-perl libpod-parser-perl
  libsigsegv2 libsub-override-perl libtest-pod-coverage-perl libtest-pod-perl
  libtie-hash-indexed-perl libtie-ixhash-perl libtool libuchardet0 m4 man-db
  po-debconf sbuild-build-depends-main-dummy sensible-utils
0 upgraded, 38 newly installed, 0 to remove and 0 not upgraded.
Need to get 10.3 MB of archives.
After this operation, 37.5 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [924 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdextrautils amd64 2.37.2-4 [143 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.7-1 [67.8 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-7 [935 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.3-1 [34.3 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.4-2 [1354 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.17 [21.5 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.39-3 [273 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.39-3 [126 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.39-3 [69.1 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.21-4 [175 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.13-1 [34.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-5 [204 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.71-2 [343 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1+nmu1 [77.1 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.5-1 [823 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.21-4 [510 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 13.5.2 [192 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-15 [513 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 20 [17.1 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.68-1 [104 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.12.0-2 [26.3 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.12.0-2 [15.5 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.185-2 [172 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.14-1 [98.3 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.21-4 [1311 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21+nmu1 [248 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 13.5.2 [1056 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 libdevel-symdump-perl all 2.18-4 [17.5 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 libperl-dev amd64 5.32.1-6 [1072 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 libpod-parser-perl all 1.63-2 [96.1 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 libpod-coverage-perl all 0.23-2 [22.1 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 libtest-pod-coverage-perl all 1.10-2 [14.5 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 libtest-pod-perl all 1.52-1 [14.2 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 libtie-hash-indexed-perl amd64 0.08+ds1-1 [21.2 kB]
Get:38 http://127.0.0.1:12990/debian sid/main amd64 libtie-ixhash-perl all 1.23-2.1 [11.8 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 10.3 MB in 0s (87.8 MB/s)
Selecting previously unselected package bsdextrautils.
(Reading database ... 14273 files and directories currently installed.)
Preparing to unpack .../00-bsdextrautils_2.37.2-4_amd64.deb ...
Unpacking bsdextrautils (2.37.2-4) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.7-1_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.7-1) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-7_amd64.deb ...
Unpacking groff-base (1.22.4-7) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.3-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.3-1) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.4-2_amd64.deb ...
Unpacking man-db (2.9.4-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../05-sensible-utils_0.0.17_all.deb ...
Unpacking sensible-utils (0.0.17) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../06-libmagic-mgc_1%3a5.39-3_amd64.deb ...
Unpacking libmagic-mgc (1:5.39-3) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../07-libmagic1_1%3a5.39-3_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.39-3) ...
Selecting previously unselected package file.
Preparing to unpack .../08-file_1%3a5.39-3_amd64.deb ...
Unpacking file (1:5.39-3) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../09-gettext-base_0.21-4_amd64.deb ...
Unpacking gettext-base (0.21-4) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../10-libsigsegv2_2.13-1_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.13-1) ...
Selecting previously unselected package m4.
Preparing to unpack .../11-m4_1.4.18-5_amd64.deb ...
Unpacking m4 (1.4.18-5) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../12-autoconf_2.71-2_all.deb ...
Unpacking autoconf (2.71-2) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../13-autotools-dev_20180224.1+nmu1_all.deb ...
Unpacking autotools-dev (20180224.1+nmu1) ...
Selecting previously unselected package automake.
Preparing to unpack .../14-automake_1%3a1.16.5-1_all.deb ...
Unpacking automake (1:1.16.5-1) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../15-autopoint_0.21-4_all.deb ...
Unpacking autopoint (0.21-4) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../16-libdebhelper-perl_13.5.2_all.deb ...
Unpacking libdebhelper-perl (13.5.2) ...
Selecting previously unselected package libtool.
Preparing to unpack .../17-libtool_2.4.6-15_all.deb ...
Unpacking libtool (2.4.6-15) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../18-dh-autoreconf_20_all.deb ...
Unpacking dh-autoreconf (20) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../19-libarchive-zip-perl_1.68-1_all.deb ...
Unpacking libarchive-zip-perl (1.68-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../20-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../21-libfile-stripnondeterminism-perl_1.12.0-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.12.0-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../22-dh-strip-nondeterminism_1.12.0-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.12.0-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../23-libelf1_0.185-2_amd64.deb ...
Unpacking libelf1:amd64 (0.185-2) ...
Selecting previously unselected package dwz.
Preparing to unpack .../24-dwz_0.14-1_amd64.deb ...
Unpacking dwz (0.14-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../25-gettext_0.21-4_amd64.deb ...
Unpacking gettext (0.21-4) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../26-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../27-po-debconf_1.0.21+nmu1_all.deb ...
Unpacking po-debconf (1.0.21+nmu1) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../28-debhelper_13.5.2_all.deb ...
Unpacking debhelper (13.5.2) ...
Selecting previously unselected package libdevel-symdump-perl.
Preparing to unpack .../29-libdevel-symdump-perl_2.18-4_all.deb ...
Unpacking libdevel-symdump-perl (2.18-4) ...
Selecting previously unselected package libperl-dev:amd64.
Preparing to unpack .../30-libperl-dev_5.32.1-6_amd64.deb ...
Unpacking libperl-dev:amd64 (5.32.1-6) ...
Selecting previously unselected package libpod-parser-perl.
Preparing to unpack .../31-libpod-parser-perl_1.63-2_all.deb ...
Adding 'diversion of /usr/bin/podselect to /usr/bin/podselect.bundled by libpod-parser-perl'
Adding 'diversion of /usr/share/man/man1/podselect.1.gz to /usr/share/man/man1/podselect.bundled.1.gz by libpod-parser-perl'
Unpacking libpod-parser-perl (1.63-2) ...
Selecting previously unselected package libpod-coverage-perl.
Preparing to unpack .../32-libpod-coverage-perl_0.23-2_all.deb ...
Unpacking libpod-coverage-perl (0.23-2) ...
Selecting previously unselected package libtest-pod-coverage-perl.
Preparing to unpack .../33-libtest-pod-coverage-perl_1.10-2_all.deb ...
Unpacking libtest-pod-coverage-perl (1.10-2) ...
Selecting previously unselected package libtest-pod-perl.
Preparing to unpack .../34-libtest-pod-perl_1.52-1_all.deb ...
Unpacking libtest-pod-perl (1.52-1) ...
Selecting previously unselected package libtie-hash-indexed-perl:amd64.
Preparing to unpack .../35-libtie-hash-indexed-perl_0.08+ds1-1_amd64.deb ...
Unpacking libtie-hash-indexed-perl:amd64 (0.08+ds1-1) ...
Selecting previously unselected package libtie-ixhash-perl.
Preparing to unpack .../36-libtie-ixhash-perl_1.23-2.1_all.deb ...
Unpacking libtie-ixhash-perl (1.23-2.1) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../37-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.3-1) ...
Setting up libtie-ixhash-perl (1.23-2.1) ...
Setting up libtie-hash-indexed-perl:amd64 (0.08+ds1-1) ...
Setting up bsdextrautils (2.37.2-4) ...
update-alternatives: using /usr/bin/write.ul to provide /usr/bin/write (write) in auto mode
Setting up libmagic-mgc (1:5.39-3) ...
Setting up libarchive-zip-perl (1.68-1) ...
Setting up libdebhelper-perl (13.5.2) ...
Setting up libtest-pod-perl (1.52-1) ...
Setting up libmagic1:amd64 (1:5.39-3) ...
Setting up gettext-base (0.21-4) ...
Setting up libperl-dev:amd64 (5.32.1-6) ...
Setting up file (1:5.39-3) ...
Setting up autotools-dev (20180224.1+nmu1) ...
Setting up libsigsegv2:amd64 (2.13-1) ...
Setting up libpod-parser-perl (1.63-2) ...
Setting up autopoint (0.21-4) ...
Setting up sensible-utils (0.0.17) ...
Setting up libuchardet0:amd64 (0.0.7-1) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libdevel-symdump-perl (2.18-4) ...
Setting up libelf1:amd64 (0.185-2) ...
Setting up libfile-stripnondeterminism-perl (1.12.0-2) ...
Setting up gettext (0.21-4) ...
Setting up libtool (2.4.6-15) ...
Setting up libpod-coverage-perl (0.23-2) ...
Setting up m4 (1.4.18-5) ...
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up autoconf (2.71-2) ...
Setting up dh-strip-nondeterminism (1.12.0-2) ...
Setting up dwz (0.14-1) ...
Setting up groff-base (1.22.4-7) ...
Setting up libtest-pod-coverage-perl (1.10-2) ...
Setting up automake (1:1.16.5-1) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up po-debconf (1.0.21+nmu1) ...
Setting up man-db (2.9.4-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up dh-autoreconf (20) ...
Setting up debhelper (13.5.2) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.32-4) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.37-7 dpkg-dev_1.20.9 g++-11_11.2.0-10 gcc-11_11.2.0-10 libc6-dev_2.32-4 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 linux-libc-dev_5.14.12-1
Package versions: adduser_3.118 apt_2.3.11 autoconf_2.71-2 automake_1:1.16.5-1 autopoint_0.21-4 autotools-dev_20180224.1+nmu1 base-files_12 base-passwd_3.5.52 bash_5.1-3+b2 binutils_2.37-7 binutils-common_2.37-7 binutils-x86-64-linux-gnu_2.37-7 bsdextrautils_2.37.2-4 bsdutils_1:2.37.2-4 build-essential_12.9 bzip2_1.0.8-4 clang-13_1:13.0.0-8 coreutils_8.32-4+b1 cpp_4:11.2.0-2 cpp-11_11.2.0-10 dash_0.5.11+git20210120+802ebd4-2 debconf_1.5.78 debhelper_13.5.2 debian-archive-keyring_2021.1.1 debianutils_5.5-1 dh-autoreconf_20 dh-strip-nondeterminism_1.12.0-2 diffutils_1:3.7-5 dpkg_1.20.9 dpkg-dev_1.20.9 dwz_0.14-1 e2fsprogs_1.46.4-1 fakeroot_1.26-1 file_1:5.39-3 findutils_4.8.0-1 g++_4:11.2.0-2 g++-11_11.2.0-10 gcc_4:11.2.0-2 gcc-10-base_10.3.0-11 gcc-11_11.2.0-10 gcc-11-base_11.2.0-10 gcc-9-base_9.4.0-3 gettext_0.21-4 gettext-base_0.21-4 gpgv_2.2.27-2 grep_3.7-1 groff-base_1.22.4-7 gzip_1.10-4 hostname_3.23 init-system-helpers_1.60 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_11.2.0-10 lib32stdc++6_11.2.0-10 libacl1_2.3.1-1 libapt-pkg6.0_2.3.11 libarchive-zip-perl_1.68-1 libasan5_9.4.0-3 libasan6_11.2.0-10 libatomic1_11.2.0-10 libattr1_1:2.5.1-1 libaudit-common_1:3.0.6-1 libaudit1_1:3.0.6-1 libbinutils_2.37-7 libblkid1_2.37.2-4 libbsd0_0.11.3-1 libbz2-1.0_1.0.8-4 libc-bin_2.32-4 libc-dev-bin_2.32-4 libc6_2.32-4 libc6-dev_2.32-4 libc6-i386_2.32-4 libcap-ng0_0.7.9-2.2+b1 libcap2_1:2.44-1 libcc1-0_11.2.0-10 libclang-common-13-dev_1:13.0.0-8 libclang-cpp13_1:13.0.0-8 libclang1-13_1:13.0.0-8 libcom-err2_1.46.4-1 libcrypt-dev_1:4.4.25-2 libcrypt1_1:4.4.25-2 libctf-nobfd0_2.37-7 libctf0_2.37-7 libdb5.3_5.3.28+dfsg1-0.8 libdebconfclient0_0.260 libdebhelper-perl_13.5.2 libdevel-symdump-perl_2.18-4 libdpkg-perl_1.20.9 libedit2_3.1-20210910-1 libelf1_0.185-2 libext2fs2_1.46.4-1 libfakeroot_1.26-1 libffi8_3.4.2-3 libfile-stripnondeterminism-perl_1.12.0-2 libgc1_1:8.0.4-3 libgcc-11-dev_11.2.0-10 libgcc-9-dev_9.4.0-3 libgcc-s1_11.2.0-10 libgcrypt20_1.9.4-3+b1 libgdbm-compat4_1.22-1 libgdbm6_1.22-1 libgmp10_2:6.2.1+dfsg-2 libgnutls30_3.7.2-2 libgomp1_11.2.0-10 libgpg-error0_1.42-3 libgssapi-krb5-2_1.18.3-7 libhogweed6_3.7.3-1 libicu67_67.1-7 libidn2-0_2.3.2-2 libisl23_0.24-2 libitm1_11.2.0-10 libk5crypto3_1.18.3-7 libkeyutils1_1.6.1-2 libkrb5-3_1.18.3-7 libkrb5support0_1.18.3-7 libllvm13_1:13.0.0-8 liblsan0_11.2.0-10 liblz4-1_1.9.3-2 liblzma5_5.2.5-2 libmagic-mgc_1:5.39-3 libmagic1_1:5.39-3 libmd0_1.0.4-1 libmount1_2.37.2-4 libmpc3_1.2.1-1 libmpfr6_4.1.0-3 libnettle8_3.7.3-1 libnsl-dev_1.3.0-2 libnsl2_1.3.0-2 libobjc-11-dev_11.2.0-10 libobjc-9-dev_9.4.0-3 libobjc4_11.2.0-10 libomp-13-dev_1:13.0.0-8 libomp5-13_1:13.0.0-8 libp11-kit0_0.24.0-5 libpam-modules_1.4.0-10 libpam-modules-bin_1.4.0-10 libpam-runtime_1.4.0-10 libpam0g_1.4.0-10 libpcre2-8-0_10.36-2 libpcre3_2:8.39-13 libperl-dev_5.32.1-6 libperl5.32_5.32.1-6 libpipeline1_1.5.3-1 libpod-coverage-perl_0.23-2 libpod-parser-perl_1.63-2 libquadmath0_11.2.0-10 libseccomp2_2.5.2-2 libselinux1_3.1-3 libsemanage-common_3.1-1 libsemanage1_3.1-1+b2 libsepol1_3.1-1 libsigsegv2_2.13-1 libsmartcols1_2.37.2-4 libss2_1.46.4-1 libssl1.1_1.1.1l-1 libstdc++-11-dev_11.2.0-10 libstdc++6_11.2.0-10 libsub-override-perl_0.09-2 libsystemd0_249.5-1 libtasn1-6_4.17.0-2 libtest-pod-coverage-perl_1.10-2 libtest-pod-perl_1.52-1 libtie-hash-indexed-perl_0.08+ds1-1 libtie-ixhash-perl_1.23-2.1 libtinfo6_6.2+20210905-1 libtirpc-common_1.3.2-2 libtirpc-dev_1.3.2-2 libtirpc3_1.3.2-2 libtool_2.4.6-15 libtsan0_11.2.0-10 libubsan1_11.2.0-10 libuchardet0_0.0.7-1 libudev1_249.5-1 libunistring2_0.9.10-6 libuuid1_2.37.2-4 libxml2_2.9.12+dfsg-5 libxxhash0_0.8.0-2 libz3-4_4.8.12-1+b1 libzstd1_1.4.8+dfsg-3 linux-libc-dev_5.14.12-1 login_1:4.8.1-1 logsave_1.46.4-1 lsb-base_11.1.0 m4_1.4.18-5 make_4.3-4.1 man-db_2.9.4-2 mawk_1.3.4.20200120-2 mount_2.37.2-4 ncurses-base_6.2+20210905-1 ncurses-bin_6.2+20210905-1 passwd_1:4.8.1-1 patch_2.7.6-7 perl_5.32.1-6 perl-base_5.32.1-6 perl-modules-5.32_5.32.1-6 po-debconf_1.0.21+nmu1 qt5-qmake_5.15.2+dfsg-12 qt5-qmake-bin_5.15.2+dfsg-12 qtchooser_66-2 rpcsvc-proto_1.4.2-4 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.8-1 sensible-utils_0.0.17 sysvinit-utils_3.00-1 tar_1.34+dfsg-1 tzdata_2021e-1 util-linux_2.37.2-4 xz-utils_5.2.5-2 zlib1g_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 3.0 (quilt)
Source: libconvert-binary-c-perl
Binary: libconvert-binary-c-perl
Architecture: any
Version: 0.84-1
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: Charles Plessy <plessy@debian.org>, gregor herrmann <gregoa@debian.org>, Dominic Hargreaves <dom@earth.li>
Homepage: https://metacpan.org/release/Convert-Binary-C
Standards-Version: 4.5.1
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libconvert-binary-c-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libconvert-binary-c-perl.git
Testsuite: autopkgtest-pkg-perl
Build-Depends: debhelper-compat (= 13), libtest-pod-coverage-perl <!nocheck>, libtest-pod-perl <!nocheck>, libtie-hash-indexed-perl <!nocheck>, libtie-ixhash-perl <!nocheck>, perl-xs-dev, perl:native
Package-List:
 libconvert-binary-c-perl deb perl optional arch=any
Checksums-Sha1:
 e6399c06ccc953c2a34cc5b3294ad1bd8a45b270 1348549 libconvert-binary-c-perl_0.84.orig.tar.gz
 42d5a8c2c82e610b13a998582b8da33ae7a80af8 6124 libconvert-binary-c-perl_0.84-1.debian.tar.xz
Checksums-Sha256:
 a99ce7a8e60b8c6fe1cf73f290e423bd206e8721e3588ed125eebf7c39be3fb0 1348549 libconvert-binary-c-perl_0.84.orig.tar.gz
 f90ce5d22adb757aa2a7480d1480225b3267122388f5d6a5e4b466f784cf40a6 6124 libconvert-binary-c-perl_0.84-1.debian.tar.xz
Files:
 0b7eab3beb5195db35711f6d344c6a5f 1348549 libconvert-binary-c-perl_0.84.orig.tar.gz
 39c646801c3a3cd1d5fb179e78ff0568 6124 libconvert-binary-c-perl_0.84-1.debian.tar.xz
Dgit: 541875f9203fa956df208c959f321c38ee53c9d7 debian archive/debian/0.84-1 https://git.dgit.debian.org/libconvert-binary-c-perl

-----BEGIN PGP SIGNATURE-----

iQKTBAEBCgB9FiEE0eExbpOnYKgQTYX6uzpoAYZJqgYFAl+9O0RfFIAAAAAALgAo
aXNzdWVyLWZwckBub3RhdGlvbnMub3BlbnBncC5maWZ0aGhvcnNlbWFuLm5ldEQx
RTEzMTZFOTNBNzYwQTgxMDREODVGQUJCM0E2ODAxODY0OUFBMDYACgkQuzpoAYZJ
qgZcsxAAq5hR3gs6jvQ+Q4mdN8jliWjqLywSqItSWxOW2w8ziUfCUYGqpi8J3pYp
yY8YJV0EM/p0ym+yevwt1QmKtszwc8zT2lJR0BcjwTPnK4N9Myi8x4XgBZyDtgki
yePJaH8mr8izIQdCyjvytsOYKI8bjnZZaTYhrttfeGyWHGlvZkfy5IojMdGG3LgQ
lSaVqCJ3KdBI3uuxTMPk/HQ4wX736kO2h5QZAyk3Gb9g142t/kGV7V+XGeYqCwnC
452sZ4siVN+Jq4zXsoBrUfv2hw3F7X7NfhDgg/cuqNTXEIQC56GbY4Glq4GKRZfj
uzbQBgfCZVtTDjIRHs8GuLfVG2Hj15S4agN/rEdzdPl0awoZoOhEoosBGwygD9lu
MIoIOCgT0Q6cd7n8X58UD4dGuNoBPZhUPelV/Ejgh1lT3tah4cjguQ1dE/qUXmMr
DZc+ZMbZUDLoLAMejPHots8WyAZRtd3yC2lEaFzSHUECnKt73HqufGROtalwY8GD
qVIqvNMdBWwhestO1fOxZx4LZAWHWxQFa3GJOVXQiUfpA1poR91XpAWjkSPCmDoN
O6PK2maX9wXxIMs7NMUrz6aN+2HJ2IAuiHsvEeEC0rha7Qx5TV79fENqXFoMw0eK
MypbvmYX1gJ+moAmfYsZLYkWINROCiBNuZ4GjeLUNJ9DkUqfPNc=
=hwfo
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/tmp/dpkg-verify-sig.zIUs0Wzv/trustedkeys.kbx': General error
gpgv: Signature made Tue Nov 24 16:56:36 2020 UTC
gpgv:                using RSA key D1E1316E93A760A8104D85FABB3A68018649AA06
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./libconvert-binary-c-perl_0.84-1.dsc
dpkg-source: info: extracting libconvert-binary-c-perl in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking libconvert-binary-c-perl_0.84.orig.tar.gz
dpkg-source: info: unpacking libconvert-binary-c-perl_0.84-1.debian.tar.xz

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-750783d2-f5ca-4db7-ba5b-7f83986f057c
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package libconvert-binary-c-perl
dpkg-buildpackage: info: source version 0.84-1
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by gregor herrmann <gregoa@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 debian/rules clean
dh clean
   dh_clean
 debian/rules binary
dh binary
   dh_update_autotools_config
   dh_autoreconf
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/<<PKGBUILDDIR>>'
# don't hide compiler flags
CBC_MAKEFILE_DEBUG=1 dh_auto_configure
	/usr/bin/perl Makefile.PL INSTALLDIRS=vendor "OPTIMIZE=-g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2" "LD=x86_64-linux-gnu-gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now"
Checking if your kit is complete...
Looks good
Building with feature 'ieeefp'
Finding dependencies...
Generating a Unix-style Makefile
Writing Makefile for Convert::Binary::C
Writing MYMETA.yml and MYMETA.json
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_build
	make -j4
make[1]: Entering directory '/<<PKGBUILDDIR>>'
Running Mkbootstrap for C ()
"/usr/bin/perl" "/usr/share/perl/5.32/ExtUtils/xsubpp"  -typemap '/usr/share/perl/5.32/ExtUtils/typemap' -typemap '/<<PKGBUILDDIR>>/typemap'  C.xs > C.xsc
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/fileinfo.c
chmod 644 "C.bs"
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG util/hash.c
cp lib/Convert/Binary/C.pm blib/lib/Convert/Binary/C.pm
cp lib/Convert/Binary/C/Cached.pm blib/lib/Convert/Binary/C/Cached.pm
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG util/list.c
mv fileinfo.o tmpfileinfo.o
mv tmpfileinfo.o ctlib/fileinfo.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG util/memalloc.c
mv memalloc.o tmpmemalloc.o
mv tmpmemalloc.o util/memalloc.o
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- C.bs blib/arch/auto/Convert/Binary/C/C.bs 644
mv C.xsc C.c
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" ctlib/arch.pl ctlib/arch.h 
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG C.c
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/basic.c
mv list.o tmplist.o
mv tmplist.o util/list.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/dimension.c
mv hash.o tmphash.o
mv tmphash.o util/hash.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/hook.c
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/basic.c:21:
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: In file included from warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
'{' token is here    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49:
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: 
expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151::5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hIn file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663::
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:152:5: warning:     ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'    v ^= (v>>23);                       \

                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3:    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
152:5: note: #   define STMT_END     )
                        ^
')' token is hereIn file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: 
expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_ENDnote: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5:
 note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note:   ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21667:21: note: expanded from macro 'STMT_END'
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
In file included from C.xs                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29::27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: 663note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v2 = ROTR32(v2, 7) ^ v0;   \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
                                    ^~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: :note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
29: note: expanded from macro 'STMT_START'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
3921:
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:159#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: 
                                               ^
note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: 
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here

    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
                        ^#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:
In file included from     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                               ^    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:167#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:5: note: ')' token is here

                              ^    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
157:5#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */note: '{' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

                        ^In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
C.xs:27#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:
In file included from #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:
In file included from #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
:169:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
5:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */ warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
:In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
158:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
5: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    v2 = ROTR32(v2, 7) ^ v0;   \171
:                               ^5
: note: '{' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");:
116    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
48: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \expanded from macro 'STMT_END'

                                               ^
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::21162:: 5note: :expanded from macro 'STMT_END' 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    v2 = ROTR32(v2, 7) ^ v0;   \:
666                               ^:
29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'STMT_START':
167:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");13
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h667::11621::48 :note:  expanded from macro 'STMT_END'note: 
expanded from macro 'ZAPHOD32_MIX'
#   define STMT_END     )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from In file included from cbc/basic.cC.xs::2127:
:
In file included from In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::39213921:
:
In file included from In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::663663:
:
In file included from In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3535:
:
In file included from In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::44:
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::268169::55::  warning: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");:
37    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'ZAPHOD32_FINALIZE'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ZAPHOD32_FINALIZE(v0,v1,v2);:
169    ^~~~~~~~~~~~~~~~~~~~~~~~~~~:
5: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h'{' token is here:
90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \

                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hwarning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]268
:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
113:36: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :expanded from macro 'ZAPHOD32_FINALIZE'124
:32: note: expanded from macro 'ZAPHOD32_MIX'
    v1 = ROTL32(v1, 17);           \
                                   ^    v2 = ROTR32(v2, 7) ^ v0;   \

                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::5169:: 5note: :')' token is here 
note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");note: 
expanded from macro 'ZAPHOD32_FINALIZE'    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h} STMT_END:
125  ^~~~~~~~:
3: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: } STMT_ENDnote: 
expanded from macro 'STMT_END'  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: #   define STMT_END     )note: 
expanded from macro 'STMT_END'                        ^

#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \

                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:#   define STMT_END     )
                        ^
80:3In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");note: 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
expanded from macro 'STADTX_SCRAMBLE64'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
} STMT_END#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
  ^~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3921:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:
In file included from     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
:663:
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \In file included from 
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
cbc/basic.c:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
21:
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

                              ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here

    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/basic.c:21:
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h663::
72:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h36::107 :note: 5expanded from macro 'STADTX_SCRAMBLE64':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    _PERL_HASH_SEED_STATE(seed,state);:
666    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5:     _PERL_HASH_SEED_STATE(seed,state);note: 
')' token is here    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \

  ^~~~~~~~                                                                                            ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::667107::215::  note: note: expanded from macro 'STMT_END'')' token is here

#   define STMT_END     )
                        ^
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: In file included from note: C.xsexpanded from macro '_PERL_HASH_SEED_STATE':
27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
} STMT_ENDIn file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h  ^~~~~~~~:663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h667::11621::5 :note:  expanded from macro 'STMT_END'warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:    ,SIPROUND;SIPROUND;5
:     ^~~~~~~~ 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87  STMT_START {              \:
41  ^~~~~~~~~~:
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);:
5    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
    SIP_ROUNDS;                             \  ^~~~~~~~

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h667::28021::6 :note:  expanded from macro 'STMT_END'note: 
'{' token is here
#   define STMT_END     )
                        ^
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
    SIP_ROUNDS;                             \In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h    ^~~~~~~~~~:
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h29::156 :note: 5expanded from macro 'STMT_START':
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");:
219    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
5: note: expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h15::156 :note: 5'{' token is here:
 note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125  STMT_START {              \:
3             ^:
 note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: } STMT_ENDnote: 
expanded from macro 'PERL_SIPHASH_FNC'  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h280::11615::48 :warning:  note: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'ZAPHOD32_MIX'

    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
')' token is here#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h  } STMT_END:
158    ^~~~~~~~:
5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");219
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5
: note: expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:48: note: expanded from macro 'ZAPHOD32_MIX'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ,SIPROUND;SIPROUND;    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 175note: :expanded from macro 'ZAPHOD32_MIX'14
: note: expanded from macro 'SIPROUND'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^  STMT_START {              \

             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 238note: :')' token is here3
: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:280:6/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 159warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]5
: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h  } STMT_END:
116  ^:
48: note: expanded from macro 'ZAPHOD32_MIX'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:                                               ^280
:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h280::15915::5 :note:  '{' token is herewarning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32  STMT_START {              \:
              ^note: 
expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:                              ^280
:15:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :warning: 162'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
5: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);:
180    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
3: note: expanded from macro 'SIPROUND'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    v ^= (v>>23);                       \281
:                                        ^6
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:162:5: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3::88 :note: 3expanded from macro 'SIPROUND':
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
  STMT_START {              \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h  ^~~~~~~~~~:
667:21: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'STMT_END':
666:29: note: expanded from macro 'STMT_START'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::2443921::
3In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h :note: 663expanded from macro 'PERL_SIPHASH_FNC':

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38:     ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;note: 
expanded from macro 'ZAPHOD32_SCRAMBLE32'     ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h  STMT_START {              \:
666             ^:
29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */  ^~~~~~~~~~~~~~~~

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    v ^= (v>>23);                       \:
281                                        ^:
6: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hwarning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]163
:5: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::388:: 3note: :expanded from macro 'SIPROUND' 
note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
  } STMT_END
} STMT_END  ^

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::244667::321::  note: note: expanded from macro 'PERL_SIPHASH_FNC'expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:

In file included from      ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);667
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~21
: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);175
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~3
: note: expanded from macro 'SIPROUND'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::164175::514::  warning: note: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'SIPROUND'

  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);:
244    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'PERL_SIPHASH_FNC':
87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:167:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 666warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]29
: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");

                              ^    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::5124:: 32note: :'{' token is here 
note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));167
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5
: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");

                                              ^    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'STMT_END'281
:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: In file included from note: cbc/dimension.cexpanded from macro 'SIPROUND':
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h  } STMT_END:
663  ^:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h244::43:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h168expanded from macro 'PERL_SIPHASH_FNC'::
1185::5 :warning:  '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
79:45: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :expanded from macro 'STADTX_SCRAMBLE64'116
:37    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:
               ^~~~~~~~note: 
expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5    v ^= (v >> 46);                         \:
                                             ^note: 
expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5:   } STMT_ENDnote: 
')' token is here    ^~~~~~~~

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 666note: :expanded from macro 'STMT_END'29
: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));#   define STMT_END     )

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::80244::33::  note: note: expanded from macro 'STADTX_SCRAMBLE64'expanded from macro 'PERL_SIPHASH_FNC'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
} STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:  ^~~~~~~~168
:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :'{' token is here667
:21:  SIP_FINAL_ROUNDS                          \ 
note:   ^~~~~~~~~~~~~~~~expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:
3921                       ^~~~~~~~:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h175::1193::5 :note:  expanded from macro 'SIPROUND'warning: 
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                                               ^
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \3
:                                   ^~~~~~~~~~ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47:  STMT_START {              \ 
note:              ^expanded from macro 'STADTX_SCRAMBLE64'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 168warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]5
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");45
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:    v2 = ROTR32(v2, 7) ^ v0;   \119
:                               ^5
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h')' token is here:
168:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");3
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125} STMT_END:
3  ^~~~~~~~:
 note: expanded from macro 'ZAPHOD32_MIX'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: note: } STMT_ENDexpanded from macro 'STMT_END'

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h21::#   define STMT_END     ) 281
note: :                        ^expanded from macro 'STMT_END'24

: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
In file included from C.xs:27:
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h                       ^~~~~~~~:
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::18055::
3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 120note: :expanded from macro 'SIPROUND'5
: In file included from warning: cbc/dimension.c'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
21:
  } STMT_ENDIn file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h  ^:
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h663::
244In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h3::35 :
note: In file included from expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));169
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36:   SIP_FINAL_ROUNDS                          \note: 
expanded from macro 'STADTX_SCRAMBLE64'  ^~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");

                                   ^~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:29
116                       ^~~~~~~~::
 37note: :expanded from macro 'STMT_START' 
note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h                              ^:
667:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \ 120
note: :                                    ^~~~~~~~~~expanded from macro 'STMT_END'5

: note: '{' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: expanded from macro 'STMT_START'#   define STMT_END     )

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */note: 
expanded from macro 'STADTX_SCRAMBLE64'                              ^

  SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:  ^~~~~~~~~~~~~~~~169
:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
281                                              ^:
33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;48
:                                ^~~~~~~~ 
note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80  STMT_START {              \:
3             ^:
 note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3:} STMT_END 
note:   ^~~~~~~~expanded from macro 'PERL_SIPHASH_FNC'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::281667::3321::  warning: note: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
In file included from cbc/dimension.c:21:
In file included from   } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:  ^3921
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
:In file included from 244/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::335::
 In file included from note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hexpanded from macro 'PERL_SIPHASH_FNC':
4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;37
:                                ^~~~~~~~ 
note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
21                                    ^~~~~~~~~~:
 note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5:  SIP_FINAL_ROUNDS                          \ 
note:   ^~~~~~~~~~~~~~~~'{' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5:#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \ 
warning:                                                ^'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note:     ZAPHOD32_FINALIZE(v0,v1,v2);expanded from macro '_PERL_HASH_SEED_STATE'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h} STMT_END:
113  ^~~~~~~~:
36: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'ZAPHOD32_FINALIZE':
667:21: note: expanded from macro 'STMT_END'
    v1 = ROTL32(v1, 17);           \
                                   ^
#   define STMT_END     )
                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666In file included from :29C.xs:: 27note: :
expanded from macro 'STMT_START'In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
    ,SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:     ^~~~~~~~1448
:9: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:  STMT_START {              \99
:  ^~~~~~~~~~47
: note: expanded from macro 'SBOX32_MIX3'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274In file included from :6cbc/dimension.c:: 21note: :
')' token is hereIn file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from     ,SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:     ^~~~~~~~35
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);:
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note: 
expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35:#   define STMT_END     ) 
note:                         ^expanded from macro 'XORSHIFT96_set'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \    SIP_ROUNDS;                             \

    ^~~~~~~~~~                                  ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ,SIPROUND;:
1453     ^~~~~~~~:
13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);  STMT_START {              \

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h1396::66657::29 :note:  expanded from macro 'XORSHIFT96_set'note: 
expanded from macro 'STMT_START'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 238')' token is here:
3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);  ^~~~~~~~~~

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h6::1397 :note: 3'{' token is here:
 note: expanded from macro 'XORSHIFT96_set'
    ,SIPROUND;} STMT_END

     ^~~~~~~~  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::21175:: 14note: :expanded from macro 'STMT_END' 
note: expanded from macro 'SIPROUND'
#   define STMT_END     )
                        ^
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
In file included from cbc/dimension.c:21:
  SIP_ROUNDS;                               \In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h  ^~~~~~~~~~:
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h1456::2745::6 :warning:  warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: #define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \expanded from macro 'SIPROUND'

                                                ^
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :expanded from macro 'SIPROUND'150
:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:  } STMT_END80
:  ^49
: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3::151 :note: 5expanded from macro 'PERL_SIPHASH_FNC':
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3:   STMT_START {              \note: 
expanded from macro 'ZAPHOD32_SCRAMBLE32'  ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:} STMT_END666
:  ^~~~~~~~29
: note: expanded from macro 'STMT_START'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from   SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:  ^~~~~~~~~~~~~~~~4
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h152::2815::24 :warning:  '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note: 
'{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);

                       ^~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::80175::3814::  note: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'expanded from macro 'SIPROUND'

  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \244
:                                     ^~~~~~~~~~3
: note: expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: expanded from macro 'STMT_START'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    v ^= (v>>23);                       \
:                                        ^281
:24:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :warning: 152:'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]5
: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 180note: :expanded from macro 'ZAPHOD32_SCRAMBLE32'3
: note: expanded from macro 'SIPROUND'
} STMT_END
  ^~~~~~~~
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'STMT_END'244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_END     )
                        ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3921180:
:In file included from 5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:: 663note: :
expanded from macro 'SIPROUND'In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
  } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:    ^~~~~~~~156
:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");note: 
expanded from macro 'PERL_SIPHASH_FNC'    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:                                    ^~~~~~~~~~281
:33: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hwarning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]666
:29: note: expanded from macro 'STMT_START'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
3                              ^:
 note: expanded from macro 'SIPROUND'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:156:5: note: '{' token is here
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hIn file included from :170cbc/basic.c::521::
 In file included from note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h')' token is here:
6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hcbc/hook.c::66621::
29In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note: 3921expanded from macro 'STMT_START':

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h116::65737::16 :note:  expanded from macro 'ZAPHOD32_MIX'note: 
expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
In file included from cbc/basic.c:#   define STMT_END     )21
:
                        ^In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/basic.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5:In file included from  note: cbc/hook.c:expanded from macro 'CLEAR_ARGARRAY'21
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:    } STMT_END663
:
    ^In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::22154::
9/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 247note: :')' token is here13
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note:             ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");expanded from macro 'CLEAR_ARGARRAY'

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:      ^~~~~~~~116
:37: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'ZAPHOD32_MIX':
667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:In file included from  note: cbc/basic.cexpanded from macro 'STMT_START':
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
    ENV_LOCK;
    ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1453:13: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: #  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)note: 
expanded from macro 'XORSHIFT96_set'                              ^~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \214
:                                             ^5
: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h'{' token is here:
1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    STMT_START {                                                \:
1453               ^:
13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hcbc/basic.c::66321:
:
In file included from In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::35:
6161/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h1456::26195::5 :warning:  '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h :note: 1393expanded from macro 'ENV_LOCK':
35: note: expanded from macro 'XORSHIFT96_set'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h
:219:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 666note: :expanded from macro 'MUTEX_LOCK'29
: note: expanded from macro 'STMT_START'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
    ENV_LOCK;                              ^

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :'{' token is here2924
:31: note: expanded from macro 'ENV_LOCK'
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46:#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex) 
note:                               ^~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'XORSHIFT96_set'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \      ^~~~~~~~

                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cbc/basic.c:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:
:In file included from 1397/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::36161::
 /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.hnote: :expanded from macro 'XORSHIFT96_set'2627
:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]} STMT_END

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:     ENV_UNLOCK;note: 
expanded from macro 'STMT_END'    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925#   define STMT_END     ):
31                        ^:
 note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
In file included from cbc/hook.c:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning:     STMT_START {                                                \'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

               ^
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
In file included from cbc/basic.c:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
:In file included from 180/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::56161::
 /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.hnote: :expanded from macro 'SIPROUND'2627
:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667    ENV_UNLOCK;:
21    ^~~~~~~~~~:
 note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'#   define STMT_END     )

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:  SIP_FINAL_ROUNDS                          \5
:  ^~~~~~~~~~~~~~~~ 
note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:    _PERL_HASH_SEED_STATE(seed,state);2215
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~9
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \    STMT_START {                                                        \

                                          ^~~~~~~~~~    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::666666::2929::  note: note: expanded from macro 'STMT_START'expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::2215107::95::  note: note: '{' token is here'{' token is here

        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
    _PERL_HASH_SEED_STATE(seed,state);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
667:16:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 91expanded from macro 'CLEAR_ARGARRAY':
54: note: expanded from macro '_PERL_HASH_SEED_STATE'
    STMT_START {                                                        \
               ^
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
        CLEAR_ARGARRAY(av);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:        ^~~~~~~~~~~~~~~~~~107
:5: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h')' token is here:
671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:2215:9: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h')' token is here:
94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
        CLEAR_ARGARRAY(av);  ^~~~~~~~

        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h21::671 :note: 7expanded from macro 'STMT_END':
 note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END#   define STMT_END     )

      ^~~~~~~~                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from C.xs:27:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
./xsubs/cbc.xs:59:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
./ppport.h:3813:28:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 180expanded from macro 'STMT_START':
5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/cbc.xs#   define STMT_END     ):
59                        ^:
7: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    STMT_START {                                        \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
./xsubs/cbc.xs/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::59244::73::  warning: note: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'PERL_SIPHASH_FNC'

      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h  SIP_FINAL_ROUNDS                          \:
320  ^~~~~~~~~~~~~~~~:
5: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'XSRETURN':
281:33: note: '{' token is here
    } STMT_END
    ^
./xsubs/cbc.xs:59:7: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
      XSRETURN(1);
      ^~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:175:14: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.hexpanded from macro 'SIPROUND':
320:7: note: expanded from macro 'XSRETURN'
  STMT_START {              \    } STMT_END

             ^      ^~~~~~~~

./ppport.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3814244::203::  note: note: expanded from macro 'STMT_END'expanded from macro 'PERL_SIPHASH_FNC'

#  define STMT_END      )
                        ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
C.c:546:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:546:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:546:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:546:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:546:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:546:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:546:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:546:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/clone.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/clone.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/clone.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/clone.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/clone.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/clone.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/clone.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/clone.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clone.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clone.xs:36:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/clone.xs:36:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/clone.xs:36:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/clean.xs:30:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/clean.xs:30:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/clean.xs:30:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/clean.xs:30:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:653:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:653:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:653:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:653:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:653:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:653:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:653:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:653:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/configure.xs:29:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/configure.xs:29:7: note: '{' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/configure.xs:29:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/configure.xs:29:7: note: ')' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/configure.xs:30:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/configure.xs:30:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/configure.xs:30:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/configure.xs:30:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/configure.xs:30:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/configure.xs:30:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/configure.xs:30:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/configure.xs:30:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/configure.xs:68:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/configure.xs:68:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/configure.xs:68:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/configure.xs:68:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:747:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:747:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:747:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:747:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/include.xs:54:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/include.xs:54:7: note: '{' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/include.xs:54:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/include.xs:54:7: note: ')' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/include.xs:55:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/include.xs:55:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/include.xs:55:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/include.xs:55:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/include.xs:55:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/include.xs:55:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/include.xs:55:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/include.xs:55:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/include.xs:87:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/include.xs:87:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/include.xs:87:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/include.xs:87:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/parse.xs:54:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/parse.xs:54:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/parse.xs:54:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/parse.xs:54:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:926:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:926:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:926:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:926:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:926:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:926:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:926:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:926:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/parse.xs:81:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/parse.xs:81:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/parse.xs:81:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/parse.xs:81:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:973:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:973:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:973:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:973:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:973:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:973:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:973:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:973:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/def.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/def.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/def.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/def.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/def.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/def.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/def.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/def.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:34:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:34:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./xsubs/def.xs:34:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/def.xs:34:7: note: '{' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/def.xs:34:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/def.xs:34:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/def.xs:34:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./xsubs/def.xs:34:7: note: ')' token is here
      XSRETURN_UNDEF;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1064:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:18: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1064:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:29: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                   ^
C.c:1064:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1064:37: note: '{' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
C.c:1064:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
C.c:1064:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:31: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                     ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1064:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:62: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                    ^
C.c:1064:37: note: ')' token is here
        sv_setpv(TARG, RETVAL); XSprePUSH; PUSHTARG;
                                           ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:456:64: note: expanded from macro 'PUSHTARG'
#define PUSHTARG        STMT_START { SvSETMAGIC(TARG); PUSHs(TARG); } STMT_END
                                                                      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1066:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1066:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1066:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1066:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:38:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:38:7: note: '{' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:38:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:38:7: note: ')' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:39:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:39:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/pack.xs:39:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:39:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:39:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:39:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:39:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/pack.xs:39:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:53:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/pack.xs:53:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:59:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:59:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:59:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:59:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:59:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:59:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:59:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/pack.xs:59:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:70:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SvCUR_set(rv, mi.size);
      ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:70:7: note: '{' token is here
      SvCUR_set(rv, mi.size);
      ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
./xsubs/pack.xs:70:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SvCUR_set(rv, mi.size);
      ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
./xsubs/pack.xs:70:7: note: ')' token is here
      SvCUR_set(rv, mi.size);
      ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:86:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(string, max);
        ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:86:9: note: '{' token is here
        SvCUR_set(string, max);
        ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
./xsubs/pack.xs:86:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(string, max);
        ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
./xsubs/pack.xs:86:9: note: ')' token is here
        SvCUR_set(string, max);
        ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:93:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(rv, max);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:93:9: note: '{' token is here
        SvCUR_set(rv, max);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
./xsubs/pack.xs:93:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(rv, max);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
./xsubs/pack.xs:93:9: note: ')' token is here
        SvCUR_set(rv, max);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
98 warnings generated.
./xsubs/pack.xs:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:107:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
./xsubs/pack.xs:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
./xsubs/pack.xs:107:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:111:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:111:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
./xsubs/pack.xs:111:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
./xsubs/pack.xs:111:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:120:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:120:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
./xsubs/pack.xs:120:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
./xsubs/pack.xs:120:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:125:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SvSETMAGIC(string);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:125:7: note: '{' token is here
      SvSETMAGIC(string);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:34: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                 ^
./xsubs/pack.xs:125:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SvSETMAGIC(string);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
./xsubs/pack.xs:125:7: note: ')' token is here
      SvSETMAGIC(string);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:128:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:128:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/pack.xs:128:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:128:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:128:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:128:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:128:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/pack.xs:128:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:131:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:131:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:131:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:131:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1230:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1230:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1230:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1230:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:158:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
mv basic.o tmpbasic.o
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:158:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:158:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:158:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/pack.xs:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:158:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
mv tmpbasic.o cbc/basic.o
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:158:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/pack.xs:158:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/pack.xs:158:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:165:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:165:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:165:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/pack.xs:165:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:171:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/idl.c
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:171:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/pack.xs:171:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:171:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:171:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:171:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:171:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/pack.xs:171:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:178:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Data too short"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:178:9: note: '{' token is here
        WARN((aTHX_ "Data too short"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/pack.xs:178:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Data too short"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/pack.xs:178:9: note: ')' token is here
        WARN((aTHX_ "Data too short"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:201:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_START
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:201:7: note: '{' token is here
      XCPT_TRY_START
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
./xsubs/pack.xs:201:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_START
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
./xsubs/pack.xs:201:7: note: ')' token is here
      XCPT_TRY_START
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:210:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_END
      ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:210:7: note: '{' token is here
      XCPT_TRY_END
      ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
./xsubs/pack.xs:210:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_END
      ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
./xsubs/pack.xs:210:7: note: ')' token is here
      XCPT_TRY_END
      ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:222:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:222:9: note: '{' token is here
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
./xsubs/pack.xs:222:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
./xsubs/pack.xs:222:9: note: ')' token is here
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:229:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:229:7: note: '{' token is here
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/pack.xs:229:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/pack.xs:229:7: note: ')' token is here
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/pack.xs:237:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(count);
    ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/pack.xs:237:5: note: '{' token is here
    XSRETURN(count);
    ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/pack.xs:237:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(count);
    ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/pack.xs:237:5: note: ')' token is here
    XSRETURN(count);
    ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/sizeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/sizeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/sizeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/sizeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/sizeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/sizeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/sizeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/sizeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:32:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/sizeof.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/sizeof.xs:32:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:41:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:41:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/sizeof.xs:41:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sizeof.xs:41:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/sizeof.xs:41:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/sizeof.xs:41:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sizeof.xs:41:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/sizeof.xs:41:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1426:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1426:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1426:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1426:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/typeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/typeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/typeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/typeof.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typeof.xs:30:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/typeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typeof.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/typeof.xs:30:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1484:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1484:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1484:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1484:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:32:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/offsetof.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/offsetof.xs:32:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/offsetof.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/offsetof.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/offsetof.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/offsetof.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/offsetof.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/offsetof.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/offsetof.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/offsetof.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:39:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "Empty string passed as member expression"));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:39:7: note: '{' token is here
      WARN((aTHX_ "Empty string passed as member expression"));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/offsetof.xs:39:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "Empty string passed as member expression"));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/offsetof.xs:39:7: note: ')' token is here
      WARN((aTHX_ "Empty string passed as member expression"));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:41:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:41:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/offsetof.xs:41:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/offsetof.xs:41:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:52:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/offsetof.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/offsetof.xs:52:7: note: '{' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/offsetof.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/offsetof.xs:52:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/offsetof.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/offsetof.xs:52:7: note: ')' token is here
      WARN_FLAGS(type, mi.flags);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1562:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1562:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1562:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1562:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/dimension.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./xsubs/member.xs:34:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:34:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/member.xs:34:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/member.xs:34:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/member.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/member.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/member.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/member.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/member.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: In file included from expanded from macro 'XSRETURN'cbc/hook.c
:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
    } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:    ^2209
:5: ./xsubs/member.xswarning: :35'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
5: note: ')' token is here
    CHECK_VOID_CONTEXT;    CX_POP_SAVEARRAY(cx);

    ^~~~~~~~~~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~

C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:: 330note: :expanded from macro 'CX_POP_SAVEARRAY'52
: note: expanded from macro 'XSRETURN_EMPTY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^./ppport.h
:3814:20/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:: 2209note: :expanded from macro 'STMT_END'5
: note: '{' token is here
#  define STMT_END      )
                        ^
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
./xsubs/member.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STMT_START {                                                        \
               ^
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/member.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: In file included from note: cbc/hook.cexpanded from macro 'STMT_END':
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5#  define STMT_END      ):
                         ^warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
./xsubs/member.xs:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h35::6625::5 :warning:  '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note: 
expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:2209:5:C.xs :note: 121')' token is here:
11: note: expanded from macro 'CHECK_VOID_CONTEXT'
    CX_POP_SAVEARRAY(cx);
          } STMT_END    ^~~~~~~~~~~~~~~~~~~~

          ^
./xsubs/member.xs:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h35::6625::7 :note:  ')' token is herenote: 
expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:C.xs :note: 121expanded from macro 'STMT_END':
13: note: expanded from macro 'CHECK_VOID_CONTEXT'
#   define STMT_END     )
                        ^
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:37:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:37:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
./xsubs/member.xs:37:5:    STMT_START {                                                        \ 
warning:     ^~~~~~~~~~'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
./xsubs/member.xs:37:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h5::2215 :note: 9')' token is here:
 note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~C.xs
:109:13:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h :note: 667expanded from macro 'NEED_PARSE_DATA':
16: note: expanded from macro 'CLEAR_ARGARRAY'
          } STMT_END
            ^~~~~~~~
./ppport.h    STMT_START {                                                        \:
3814               ^:
20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'./xsubs/member.xs
:54:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_END     )
./cbc/cbc.h                        ^:
233:11: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:54:7: note: '{' token is here
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:233:22: note: expanded from macro 'WARN_FLAGS'
          STMT_START {                                                         \
                     ^
./xsubs/member.xs:54:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:54:7: note: '{' token is here
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/member.xs:54:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/member.xs:54:7: note: ')' token is here
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:235:15: note: expanded from macro 'WARN_FLAGS'
              WARN_UNSAFE(type);                                               \
              ^~~~~~~~~~~~~~~~~
./cbc/cbc.h:230:11: note: expanded from macro 'WARN_UNSAFE'
          WARN((aTHX_ "Unsafe values used in %s('%s')", method, type))
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:54:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:11: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
          ^
./xsubs/member.xs:54:7: note: ')' token is here
      WARN_FLAGS(type, flags);
      ^~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:236:13: note: expanded from macro 'WARN_FLAGS'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:79:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:79:9: note: '{' token is here
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/member.xs:79:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/member.xs:79:9: note: ')' token is here
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:94:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:94:9: note: '{' token is here
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/member.xs:94:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/member.xs:94:9: note: ')' token is here
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:100:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:100:9: note: '{' token is here
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/member.xs:100:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/member.xs:100:9: note: ')' token is here
        XSRETURN(1);
        ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:116:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:116:9: note: '{' token is here
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/member.xs:116:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/member.xs:116:9: note: ')' token is here
        EXTEND(SP, count);
        ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/member.xs:123:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/member.xs:123:9: note: '{' token is here
        XSRETURN(count);
        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/member.xs:123:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from         XSRETURN(count);cbc/hook.c
:        ^~~~~~~~~~~~~~~21
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h320::26195::5 :note:  expanded from macro 'XSRETURN'warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } STMT_END
    ^
./xsubs/member.xs:    ENV_LOCK;123
:    ^~~~~~~~9
: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'        XSRETURN(count);

        ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)      ^~~~~~~~

                              ^~~~~~~~~~~~~~~~~~~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h#  define STMT_END      ):
214                        ^:
5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:./xsubs/member.xs666::12629::9 :note:  expanded from macro 'STMT_START'warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */note: 
expanded from macro 'XSRETURN_IV'                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END31
:                       ^~~~~~~~~~ 
note: expanded from macro 'ENV_LOCK'
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */

                              ^
./xsubs/member.xs:126:9: note: '{' token is here    STMT_START {                                                \

               ^
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
./xsubs/member.xs:126:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h
:219:5: note: expanded from macro 'MUTEX_LOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note:     } STMT_ENDexpanded from macro 'XSRETURN_IV'

    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h                                                   ^~~~~~~~~~~:
2924:31: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.hnote: :expanded from macro 'ENV_LOCK'315
:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex):
3813                              ^~~~~~~~~~~~~~~~~~~~~~~~~:
28: note: expanded from macro 'STMT_START'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h
:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */ 
note:                               ^expanded from macro 'STMT_END'

./xsubs/member.xs:126:9: note: '{' token is here
#   define STMT_END     )
                        ^
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
In file included from cbc/hook.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
./xsubs/member.xs/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h::2627126::59::  warning: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ENV_UNLOCK;
    ^~~~~~~~~~
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:: 322note: :expanded from macro 'ENV_UNLOCK'52
: note: expanded from macro 'XSRETURN_IV'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END222
:                                                   ^~~~~~~~~~~5
: note: expanded from macro 'MUTEX_UNLOCK'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:320:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                                \
    ^~~~~~~~~~
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666./xsubs/member.xs::29126:: 9note: :expanded from macro 'STMT_START' 
note: ')' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */322
:                              ^52
: note: expanded from macro 'XSRETURN_IV'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: #define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_ENDexpanded from macro 'ENV_UNLOCK'

                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./ppport.h:3814/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h::20222:: 16note: :expanded from macro 'STMT_END' 
note: expanded from macro 'MUTEX_UNLOCK'
#  define STMT_END      )
                        ^
    STMT_START {                                                \
               ^
./xsubs/member.xs:126:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/member.xs:126:9: note: ')' token is here
        XSRETURN_IV(count);In file included from 
cbc/hook.c        ^~~~~~~~~~~~~~~~~~:
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h322::262767::5 :note:  expanded from macro 'XSRETURN_IV'warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)#  define STMT_END      )

                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./xsubs/tag.xs:51:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:51:7: note: '{' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/tag.xs:51:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/tag.xs:51:7: note: ')' token is here
      WARN_VOID_CONTEXT;
      ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/tag.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:52:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/tag.xs:52:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:52:7: note: '{' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/tag.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/tag.xs:52:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/tag.xs:52:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/tag.xs:52:7: note: ')' token is here
      XSRETURN_EMPTY;
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/tag.xs:55:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:55:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/tag.xs:55:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/tag.xs:55:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:251:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  WARN((aTHX_ "Cannot use %s%s as dimension", identify_sv(sv), SvPV_nolen(warning)));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:251:3: note: '{' token is here
  WARN((aTHX_ "Cannot use %s%s as dimension", identify_sv(sv), SvPV_nolen(warning)));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/dimension.c:251:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  WARN((aTHX_ "Cannot use %s%s as dimension", identify_sv(sv), SvPV_nolen(warning)));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/dimension.c:251:3: note: ')' token is here
  WARN((aTHX_ "Cannot use %s%s as dimension", identify_sv(sv), SvPV_nolen(warning)));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/tag.xs:97:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/tag.xs:97:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/tag.xs:97:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/tag.xs:97:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:1832:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:1832:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:1832:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:1832:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:31:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/enum.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/enum.xs:31:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:32:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/enum.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:32:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/enum.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/enum.xs:32:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:32:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/enum.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:32:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:32:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/enum.xs:32:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/enum.xs:32:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:40:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:40:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/enum.xs:40:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:40:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/enum.xs:40:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/enum.xs:40:11: note: ')' token is here
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:40:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/enum.xs:40:11: note: ')' token is here
          XPUSHs(sv_2mortal(newSVpv(pEnumSpec->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:45:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:45:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:45:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:45:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:47:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:47:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/enum.xs:47:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:47:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:47:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:47:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:47:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/enum.xs:47:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:69:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:69:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/enum.xs:69:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/enum.xs:69:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/enum.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/enum.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/enum.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/enum.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
cbc/hook.c:493/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::3330:: 52warning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro] 
note: expanded from macro 'XSRETURN_EMPTY'
  PUSHMARK(SP);
  ^~~~~~~~~~~~
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h               ^:
59:5: note: expanded from macro 'PUSHMARK'
    STMT_START {                                                      \
    ^~~~~~~~~~
./xsubs/enum.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:70:5: note: ')' token is here
./ppport.h:3813:28:    CHECK_VOID_CONTEXT; 
note:     ^~~~~~~~~~~~~~~~~~
expanded from macro 'STMT_START'
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/hook.c:493:3: note: '{' token is here
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
  PUSHMARK(SP);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h  ^~~~~~~~~~~~:
330:52: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.hnote: :expanded from macro 'XSRETURN_EMPTY'59
:16: note: expanded from macro 'PUSHMARK'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
    STMT_START {                                                      \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h               ^:
320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/enum.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
cbc/hook.c:493:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
  PUSHMARK(SP);
  ^~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:330:67: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.hnote: :expanded from macro 'XSRETURN_EMPTY'68
:5: note: expanded from macro 'PUSHMARK'
    } STMT_END
    ^
cbc/hook.c:493:3: note: ')' token is here
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:  PUSHMARK(SP);3814
:  ^~~~~~~~~~~~20
: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:7: note: expanded from macro 'PUSHMARK'
#  define STMT_END      )
                        ^
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'./xsubs/enum.xs
:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_END      )
                        ^
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/enum.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:75:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:75:7: note: '{' token is here
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/enum.xs:75:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:75:7: note: '{' token is here
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
cbc/hook.c:555:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
./xsubs/enum.xs:75:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/hook.c:555:7: note: '{' token is here
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
      XPUSHs(sv);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:      ^~~~~~~~~~320
:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.hnote: :expanded from macro 'XSRETURN'462
:30: note: expanded from macro 'XPUSHs'
    } STMT_END
    ^
./xsubs/enum.xs:75:7: note: ')' token is here
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~cbc/hook.c
:555:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
    } STMT_END
      ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h
:371:25./ppport.h:: 3814note: :expanded from macro 'EXTEND'20
: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./xsubs/enum.xs:./ppport.h75::38137::28 :warning:  '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note: 
expanded from macro 'STMT_START'
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                              ^

cbc/hook.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::555322::765::  note: note: '{' token is hereexpanded from macro 'XSRETURN_IV'

      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/enum.xs:75:7: note: ')' token is here
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
      XSRETURN_IV(items > 1 ? items-1 : LL_count(THIS->cpi.enums));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/hook.c:555:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
cbc/hook.c:555:7: note: ')' token is here
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/hook.c:555:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
cbc/hook.c:555:7: note: ')' token is here
      XPUSHs(sv);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/hook.c:563:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/hook.c:563:7: note: '{' token is here
      XPUSHs(in);
./xsubs/enum.xs:      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
cbc/hook.c:563:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
cbc/dimension.c:287:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/hook.c:563:7: note: '{' token is here
    WARN((aTHX_ "Missing parent to look up '%s'", member));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      XPUSHs(in);
      ^~~~~~~~~~
./cbc/cbc.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h225::46220::32 :note:  expanded from macro 'WARN'note: 
expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h
:                   ^~~~~~~~~~371
:36: note: expanded from macro 'EXTEND'
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:287:5: note: '{' token is here
    WARN((aTHX_ "Missing parent to look up '%s'", member));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/dimension.c:287:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Missing parent to look up '%s'", member));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
cbc/hook.c                                                                      ^:
563:7:cbc/dimension.c :warning: 287'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
5: note: ')' token is here
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note:     WARN((aTHX_ "Missing parent to look up '%s'", member));expanded from macro 'XPUSHs'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20:                         } } STMT_END 
note:                            ^expanded from macro 'STMT_END'

cbc/hook.c:563:7: note: ')' token is here
#  define STMT_END      )
                        ^
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
cbc/dimension.c:295:3:#  define STMT_END      ) 
warning:                         ^'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
cbc/hook.c:563:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(in);
      ^~~~~~~~~~
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h
:462:59: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.hexpanded from macro 'XPUSHs':
114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END:
3813                                                                ^:
28: note: cbc/hook.cexpanded from macro 'STMT_START':
563:7: note: ')' token is here
      XPUSHs(in);
      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */ 
note:                               ^expanded from macro 'XPUSHs'

cbc/dimension.c:295:3: note: '{' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END./ppport.h
:                                                                  ^~~~~~~~6658
:31: ./ppport.hnote: :expanded from macro 'XCPT_TRY_START'3814
:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/dimension.c:295:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/dimension.c:295:3: note: ')' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:332:17: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                WARN((aTHX_ "Expected a hash reference to look up member '%s'"
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
104:7                              ^
cbc/dimension.c:332:17: note: '{' token is here
                WARN((aTHX_ "Expected a hash reference to look up member '%s'"
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/dimension.c:332:17: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                WARN((aTHX_ "Expected a hash reference to look up member '%s'"
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/dimension.c:332:17: note: ')' token is here
                WARN((aTHX_ "Expected a hash reference to look up member '%s'"
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:347:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Cannot find member '%s' in hash (in '%s')", name, member));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:347:15: note: '{' token is here
              WARN((aTHX_ "Cannot find member '%s' in hash (in '%s')", name, member));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/dimension.c:347:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Cannot find member '%s' in hash (in '%s')", name, member));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/dimension.c:347:15: note: ')' token is here
              WARN((aTHX_ "Cannot find member '%s' in hash (in '%s')", name, member));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:370:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Expected an array reference to look up index '%ld'"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:370:15: note: '{' token is here
              WARN((aTHX_ "Expected an array reference to look up index '%ld'"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/dimension.c:370:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Expected an array reference to look up index '%ld'"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/dimension.c:370:15: note: ')' token is here
              WARN((aTHX_ "Expected an array reference to look up index '%ld'"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:379:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Cannot lookup index '%ld' in array of size"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:379:15: note: '{' token is here
              WARN((aTHX_ "Cannot lookup index '%ld' in array of size"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/dimension.c:379:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Cannot lookup index '%ld' in array of size"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/dimension.c:379:15: note: ')' token is here
              WARN((aTHX_ "Cannot lookup index '%ld' in array of size"
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:404:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:404:3: note: '{' token is here
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/dimension.c:404:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/dimension.c:404:3: note: ')' token is here
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:410:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:410:5: note: '{' token is here
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/dimension.c:410:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/dimension.c:410:5: note: ')' token is here
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:453:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:453:3: note: '{' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/dimension.c:453:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/dimension.c:453:3: note: ')' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:457:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:457:3: note: '{' token is here
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/dimension.c:457:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/dimension.c:457:3: note: ')' token is here
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/dimension.c:467:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: : warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:104:7: note: '{' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:104:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:104:7: note: ')' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:112:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:112:9: note: '{' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/enum.xs:112:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:112:9: note: '{' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:112:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:112:9: note: ')' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:112:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/enum.xs:112:9: note: ')' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:114:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:114:7: note: '{' token is here
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/enum.xs:114:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/enum.xs:114:7: note: ')' token is here
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/enum.xs:119:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/enum.xs:119:7: note: '{' token is here
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/enum.xs:119:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/dimension.c:467:5: note: '{' token is here
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/dimension.c:467:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/dimension.c:467:5: note: ')' token is here
    XCPT_RETHROW;
    ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/enum.xs:119:7: note: ')' token is here
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:52:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:52:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:52:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/compound.xs:52:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:53:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:53:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/compound.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/compound.xs:53:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:53:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/compound.xs:53:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:53:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:53:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/compound.xs:53:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:53:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/compound.xs:53:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:63:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:63:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/compound.xs:63:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:63:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/compound.xs:63:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/compound.xs:63:11: note: ')' token is here
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:63:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/compound.xs:63:11: note: ')' token is here
          XPUSHs(sv_2mortal(newSVpv(pStruct->identifier, 0)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:68:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:68:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:68:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:68:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:70:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:70:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/compound.xs:70:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:70:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:70:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:70:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:70:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/compound.xs:70:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:113:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/compound.xs:113:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:114:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:114:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/compound.xs:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/compound.xs:114:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:114:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/compound.xs:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:114:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:114:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/compound.xs:114:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/compound.xs:114:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:121:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:121:9: note: '{' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/compound.xs:121:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:121:9: note: '{' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:121:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:121:9: note: ')' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:121:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/compound.xs:121:9: note: ')' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:123:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:123:9: note: '{' token is here
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/compound.xs:123:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:123:9: note: '{' token is here
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:123:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:123:9: note: ')' token is here
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:123:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/compound.xs:123:9: note: ')' token is here
        XSRETURN_IV(LL_count(THIS->cpi.structs));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:133:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:133:9: note: '{' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/compound.xs:133:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:133:9: note: '{' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:133:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:133:9: note: ')' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:133:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/compound.xs:133:9: note: ')' token is here
        XSRETURN_IV(count);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:137:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:137:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/compound.xs:137:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/compound.xs:137:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:187:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:187:7: note: '{' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:187:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:187:7: note: ')' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:197:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:197:11: note: '{' token is here
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/compound.xs:197:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:197:11: note: '{' token is here
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/compound.xs:197:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/compound.xs:197:11: note: ')' token is here
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:197:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/compound.xs:197:11: note: ')' token is here
          XPUSHs(sv_2mortal(get_struct_spec_def(aTHX_ &THIS->cfg, pStruct)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/compound.xs:201:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/compound.xs:201:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/compound.xs:201:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/compound.xs:201:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:32:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:32:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:32:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/typedef.xs:32:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/typedef.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/typedef.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/typedef.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/typedef.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/typedef.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:42:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:42:13: note: '{' token is here
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/typedef.xs:42:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:42:13: note: '{' token is here
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/typedef.xs:42:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/typedef.xs:42:13: note: ')' token is here
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:42:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/typedef.xs:42:13: note: ')' token is here
            XPUSHs(sv_2mortal(newSVpv(pTypedef->pDecl->identifier, 0)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:47:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:47:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:47:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:47:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:49:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:49:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/typedef.xs:49:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:49:7: note: '{' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:49:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:49:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:49:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/typedef.xs:49:7: note: ')' token is here
      XSRETURN_IV(count);
      ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:71:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:71:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:71:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/typedef.xs:71:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:72:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:72:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:72:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:72:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/typedef.xs:72:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/typedef.xs:72:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:72:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:72:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/typedef.xs:72:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:72:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:72:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:72:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:72:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/typedef.xs:72:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:72:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/typedef.xs:72:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:77:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:77:7: note: '{' token is here
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/typedef.xs:77:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:77:7: note: '{' token is here
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:77:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:77:7: note: ')' token is here
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:77:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/typedef.xs:77:7: note: ')' token is here
      XSRETURN_IV(items > 1 ? items-1 : HT_count(THIS->cpi.htTypedefs));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:79:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:11: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:79:5: note: '{' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:102:22: note: expanded from macro 'NEED_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/typedef.xs:79:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:11: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
          ^
./xsubs/typedef.xs:79:5: note: ')' token is here
    NEED_PARSE_DATA;
    ^~~~~~~~~~~~~~~
C.xs:109:13: note: expanded from macro 'NEED_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:97:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:97:7: note: '{' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:97:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:97:7: note: ')' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:106:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:106:9: note: '{' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/typedef.xs:106:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:106:9: note: '{' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:106:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:106:9: note: ')' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:106:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/typedef.xs:106:9: note: ')' token is here
        XSRETURN_EMPTY;
        ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:108:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:108:7: note: '{' token is here
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/typedef.xs:108:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/typedef.xs:108:7: note: ')' token is here
      EXTEND(SP, size);
      ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/typedef.xs:114:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/typedef.xs:114:7: note: '{' token is here
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/typedef.xs:114:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/typedef.xs:114:7: note: ')' token is here
      XSRETURN(size);
      ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:28:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/sourcify.xs:28:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/sourcify.xs:28:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/sourcify.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/sourcify.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/sourcify.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/sourcify.xs:29:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/sourcify.xs:29:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/sourcify.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/sourcify.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/sourcify.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/sourcify.xs:29:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/sourcify.xs:29:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:2468:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:2468:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:2468:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:2468:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/initializer.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/initializer.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/initializer.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/initializer.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/initializer.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/initializer.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/initializer.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/initializer.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/initializer.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/initializer.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/initializer.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/initializer.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/initializer.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/initializer.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/initializer.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/initializer.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:2536:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:2536:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:2536:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:2536:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:30:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/dependencies.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
./xsubs/dependencies.xs:30:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/dependencies.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/dependencies.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/dependencies.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/dependencies.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/dependencies.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/dependencies.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/dependencies.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/dependencies.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:44:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "size",  newSVuv(pFI->size));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:44:11: note: '{' token is here
          HV_STORE_CONST(hattr, "size",  newSVuv(pFI->size));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
./xsubs/dependencies.xs:44:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "size",  newSVuv(pFI->size));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
./xsubs/dependencies.xs:44:11: note: ')' token is here
          HV_STORE_CONST(hattr, "size",  newSVuv(pFI->size));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:45:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "mtime", newSViv(pFI->modify_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:45:11: note: '{' token is here
          HV_STORE_CONST(hattr, "mtime", newSViv(pFI->modify_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
./xsubs/dependencies.xs:45:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "mtime", newSViv(pFI->modify_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
./xsubs/dependencies.xs:45:11: note: ')' token is here
          HV_STORE_CONST(hattr, "mtime", newSViv(pFI->modify_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:46:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "ctime", newSViv(pFI->change_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:46:11: note: '{' token is here
          HV_STORE_CONST(hattr, "ctime", newSViv(pFI->change_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
./xsubs/dependencies.xs:46:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          HV_STORE_CONST(hattr, "ctime", newSViv(pFI->change_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
./xsubs/dependencies.xs:46:11: note: ')' token is here
          HV_STORE_CONST(hattr, "ctime", newSViv(pFI->change_time));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:55:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:55:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/dependencies.xs:55:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:55:7: note: '{' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/dependencies.xs:55:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/dependencies.xs:55:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:55:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/dependencies.xs:55:7: note: ')' token is here
      XPUSHs(sv_2mortal(newRV_noinc((SV *) hv)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:56:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:56:7: note: '{' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/dependencies.xs:56:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/dependencies.xs:56:7: note: ')' token is here
      XSRETURN(1);
      ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:66:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:66:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
./xsubs/dependencies.xs:66:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/dependencies.xs:66:11: note: '{' token is here
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/dependencies.xs:66:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/dependencies.xs:66:11: note: ')' token is here
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/dependencies.xs:66:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
./xsubs/dependencies.xs:66:11: note: ')' token is here
In file included from cbc/idl.c:21:
          XPUSHs(sv_2mortal(newSVpvn(CONST_CHAR(pKey), keylen)));In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h663::
462In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h61::35 :
note: In file included from expanded from macro 'XPUSHs'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~./xsubs/dependencies.xs
:70:7: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hwarning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]666
:29: note: expanded from macro 'STMT_START'
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
    STMT_START {                                        \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ^~~~~~~~~~:
150:5:./ppport.h :note: 3813'{' token is here:
28: note: expanded from macro 'STMT_START'
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */:
                               ^note: 
expanded from macro 'ZAPHOD32_SCRAMBLE32'
./xsubs/dependencies.xs:70:7: note: '{' token is here
      XSRETURN(count);
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \      ^~~~~~~~~~~~~~~

                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
./xsubs/dependencies.xs:70:7:     ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    } STMT_END:
150    ^:
5: ./xsubs/dependencies.xsnote: :')' token is here70
:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h7::88 :note: 3expanded from macro 'XSRETURN':
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    } STMT_END
      ^~~~~~~~
} STMT_END
  ^~~~~~~~
./ppport.h:3814:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h20::667 :note: 21expanded from macro 'STMT_END':
 note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
./xsubs/defined.xs:30:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:156:5: C.xswarning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]96
:11: note: expanded from macro 'CHECK_PARSE_DATA'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          STMT_START {                                                         \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h          ^~~~~~~~~~:
124:32: ./ppport.hnote: :expanded from macro 'ZAPHOD32_MIX'3813
:28: note: expanded from macro 'STMT_START'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/defined.xs:30:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");    ^~~~~~~~~~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C.xs:96:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h22::125 :note: 3expanded from macro 'CHECK_PARSE_DATA':
 note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
          STMT_START {                                                         \
                     ^
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
./xsubs/defined.xs:30:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");:
11    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'CHECK_PARSE_DATA'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note:           } STMT_ENDexpanded from macro 'ZAPHOD32_MIX'

          ^
./xsubs/defined.xs:30:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \C.xs
:                                    ^~~~~~~~~~99
:13: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :expanded from macro 'CHECK_PARSE_DATA'666
:29: note: expanded from macro 'STMT_START'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */#  define STMT_END      )

                              ^                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
./xsubs/defined.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    CHECK_VOID_CONTEXT;

    ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:C.xs48::115 :note: 11expanded from macro 'ZAPHOD32_MIX':
 note: expanded from macro 'CHECK_VOID_CONTEXT'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
          STMT_START {                                                         \                                               ^

          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/defined.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/defined.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END    v2 = ROTR32(v2, 7) ^ v0;   \

                   ^~~~~~~~~~                               ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:./ppport.h157::38135::28 :note:  ')' token is herenote: 
expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");                              ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./xsubs/defined.xs:31:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h5::125 :note: 3'{' token is here:
 note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
    CHECK_VOID_CONTEXT;  ^~~~~~~~

    ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:C.xs :note: 118expanded from macro 'STMT_END':
15: note: expanded from macro 'CHECK_VOID_CONTEXT'
#   define STMT_END     )
                        ^
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
In file included from cbc/idl.c:21C.xs:
:In file included from 112/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::133921::
 In file included from note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hexpanded from macro 'WARN_VOID_CONTEXT':
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
./xsubs/defined.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:48: note: expanded from macro 'ZAPHOD32_MIX'C.xs
:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/defined.xs:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 158note: :expanded from macro 'STMT_END'5
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_END      )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");./xsubs/defined.xs
:31:5    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
    v2 = ROTR32(v2, 7) ^ v0;   \C.xs
:                               ^119
:15:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: 158expanded from macro 'CHECK_VOID_CONTEXT':
5: note: ')' token is here
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~330
:24: note: expanded from macro 'XSRETURN_EMPTY'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: #define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_ENDexpanded from macro 'STMT_END'

                       ^~~~~~~~~~
./ppport.h:3813:28:#   define STMT_END     ) 
note:                         ^expanded from macro 'STMT_START'

#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */In file included from 
cbc/idl.c                              ^:
21:
In file included from ./xsubs/defined.xs/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::313921::
5In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h :note: 663'{' token is here:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:    CHECK_VOID_CONTEXT;5
:    ^~~~~~~~~~~~~~~~~~ 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h              XSRETURN_EMPTY;                                                  \:
116              ^~~~~~~~~~~~~~:
37: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.hexpanded from macro 'ZAPHOD32_MIX':
330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END                                    ^~~~~~~~~~

                                  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
./xsubs/defined.xs:31:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
    CHECK_VOID_CONTEXT;                              ^

    ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: C.xs'{' token is here:
119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h              XSRETURN_EMPTY;                                                  \:
116              ^~~~~~~~~~~~~~:
48: note: expanded from macro 'ZAPHOD32_MIX'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/defined.xs:31:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
./xsubs/defined.xs:31:5: warning:     v2 = ROTR32(v2, 7) ^ v0;   \'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
              XSRETURN_EMPTY;                                                  \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h              ^~~~~~~~~~~~~~:
667:21: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.hnote: :expanded from macro 'STMT_END'330
:52: note: expanded from macro 'XSRETURN_EMPTY'
#   define STMT_END     )
                        ^
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:In file included from 5cbc/idl.c:: 21note: :
expanded from macro 'XSRETURN'In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663    } STMT_END:

In file included from     ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:35:
./xsubs/defined.xsIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h31::45:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: 162')' token is here:
5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);119
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~15
: note: expanded from macro 'CHECK_VOID_CONTEXT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::52666:: 29note: :expanded from macro 'XSRETURN_EMPTY' 
note: expanded from macro 'STMT_START'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:320/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::7162:: 5note: :expanded from macro 'XSRETURN' 
note: '{' token is here
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80#  define STMT_END      ):
49                        ^:
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
./xsubs/defined.xs:31:5:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \ 
warning:                                                 ^'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/defined.xs:31:5: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note:     ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);expanded from macro 'CHECK_VOID_CONTEXT'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
              XSRETURN_EMPTY;                                                  \
    v ^= (v>>23);                       \              ^~~~~~~~~~~~~~

                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::162330::567::  note: note: ')' token is hereexpanded from macro 'XSRETURN_EMPTY'

    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END88
:                                                                  ^~~~~~~~3
: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'./ppport.h
:3814:20: note: } STMT_ENDexpanded from macro 'STMT_END'

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21#  define STMT_END      ):
                         ^note: 
expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./xsubs/defined.xs:31:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/idl.c    CHECK_VOID_CONTEXT;:
21    ^~~~~~~~~~~~~~~~~~:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921C.xs:
:In file included from 121/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::11663::
 In file included from note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'CHECK_VOID_CONTEXT':
35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:          } STMT_END163
:          ^5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]./xsubs/defined.xs
:31:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);    ^~~~~~~~~~~~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C.xs:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h121::8013::38 :note:  expanded from macro 'CHECK_VOID_CONTEXT'note: 
expanded from macro 'ZAPHOD32_SCRAMBLE32'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: #define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \expanded from macro 'STMT_END'

                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:#  define STMT_END      )29
:                        ^ 
note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
C.c:2684:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    STMT_START {                                        \:
163    ^~~~~~~~~~:
5: warning: ./ppport.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
3813:28: note: expanded from macro 'STMT_START'
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: #  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */expanded from macro 'ZAPHOD32_SCRAMBLE32'

                              ^
C.c:2684:5: note: '{' token is here
    v ^= (v>>23);                       \
                                        ^
    XSRETURN(1);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ^~~~~~~~~~~:
163:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h :note: 315')' token is here:
16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hC.c::42684:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h5::164 :warning: 5'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5:    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9); 
note:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'XSRETURN'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80    } STMT_END:
38    ^:
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'C.c
:2684:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h320::6667::29 :note:  expanded from macro 'XSRETURN'note: 
expanded from macro 'STMT_START'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^#  define STMT_END      )

                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
./xsubs/macro.xs:} STMT_END27
:  ^~~~~~~~5
: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
667:21: note: expanded from macro 'STMT_END'
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~#   define STMT_END     )

                        ^
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h          STMT_START {                                                         \:
35          ^~~~~~~~~~:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
./ppport.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::3813168::285::  note: warning: expanded from macro 'STMT_START''(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");./xsubs/macro.xs
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~27
:5: note: '{' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:37: note: expanded from macro 'ZAPHOD32_MIX'
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
          STMT_START {                                                         \
                     ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
./xsubs/macro.xs:27:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");5
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
          ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
./xsubs/macro.xs                                               ^:
27:5: note: ')' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:28:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
./xsubs/macro.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5:     CHECK_VOID_CONTEXT;note: 
')' token is here    ^~~~~~~~~~~~~~~~~~

C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
} STMT_END
  ^~~~~~~~C.xs
:112:13/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 667note: :expanded from macro 'WARN_VOID_CONTEXT'21
: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END:
4                   ^~~~~~~~~~:

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:./ppport.h5::3813 :warning: 28'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");

                              ^    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./xsubs/macro.xs:28/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::5116:: 37note: :'{' token is here 
note: expanded from macro 'ZAPHOD32_MIX'
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
./xsubs/macro.xs:28:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/macro.xs:28:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h15::169 :note: 5expanded from macro 'CHECK_VOID_CONTEXT':
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~C.xs
:112:13/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 124note: :expanded from macro 'WARN_VOID_CONTEXT'32
: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
            WARN((aTHX_ "Useless use of %s in void context", method))/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~169
:5: note: ./cbc/cbc.h')' token is here:
225:73: note: expanded from macro 'WARN'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:125:3./ppport.h:: 3814note: :expanded from macro 'ZAPHOD32_MIX'20
: note: expanded from macro 'STMT_END'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#  define STMT_END      )667
:                        ^21
: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./xsubs/macro.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/idl.c    CHECK_VOID_CONTEXT;:
21    ^~~~~~~~~~~~~~~~~~:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:C.xs663::
119In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h15::35 :
note: In file included from expanded from macro 'CHECK_VOID_CONTEXT'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5"); 
note:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'XSRETURN_EMPTY'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:28:5: note: '{' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:    CHECK_VOID_CONTEXT;5
:    ^~~~~~~~~~~~~~~~~~ 
note: '{' token is here
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h              XSRETURN_EMPTY;                                                  \:
116              ^~~~~~~~~~~~~~:
48: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.hnote: :expanded from macro 'ZAPHOD32_MIX'330
:35: note: expanded from macro 'XSRETURN_EMPTY'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END

                                  ^
./xsubs/macro.xs:28:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:28:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:              XSRETURN_EMPTY;                                                  \5
:              ^~~~~~~~~~~~~~ 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:                                                   ^~~~~~~~~~~124
:32:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h :note: 315expanded from macro 'ZAPHOD32_MIX':
16: note: expanded from macro 'XSRETURN'
    v2 = ROTR32(v2, 7) ^ v0;   \    STMT_START {                                        \

                               ^               ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
./xsubs/macro.xs:28:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
    CHECK_VOID_CONTEXT;In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h    ^~~~~~~~~~~~~~~~~~:
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hC.xs::4119:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h15::171 :note: 5expanded from macro 'CHECK_VOID_CONTEXT':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h
:330:52: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :expanded from macro 'XSRETURN_EMPTY'116
:37: note: expanded from macro 'ZAPHOD32_MIX'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \5
:                                    ^~~~~~~~~~ 
note: expanded from macro 'XSRETURN'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:    } STMT_END 
note:     ^expanded from macro 'STMT_START'

./xsubs/macro.xs:28:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:C.xs5::119 :note: 15'{' token is here:
 note: expanded from macro 'CHECK_VOID_CONTEXT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~              XSRETURN_EMPTY;                                                  \

              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::48330:: 52note: :expanded from macro 'ZAPHOD32_MIX' 
note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                                                   ^~~~~~~~~~~                                               ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:28:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/macro.xs:28:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :expanded from macro 'XSRETURN_EMPTY'171
:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");expanded from macro 'STMT_END'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:#  define STMT_END      )32
:                        ^ 
note: expanded from macro 'ZAPHOD32_MIX'
./xsubs/macro.xs:    v2 = ROTR32(v2, 7) ^ v0;   \28
:                               ^5
: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
171:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./xsubs/macro.xs:28:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: 125')' token is here:
3: note: expanded from macro 'ZAPHOD32_MIX'
    CHECK_VOID_CONTEXT;} STMT_END

    ^~~~~~~~~~~~~~~~~~  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hC.xs::667121::2113::  note: note: expanded from macro 'STMT_END'expanded from macro 'CHECK_VOID_CONTEXT'

          } STMT_END
            ^~~~~~~~#   define STMT_END     )

                        ^
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:36:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:36:7: note: '{' token is here
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/macro.xs:36:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/macro.xs:36:7: note: ')' token is here
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:43:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:43:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/macro.xs:43:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:43:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:49:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:49:7: note: '{' token is here
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/macro.xs:49:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:49:7: note: '{' token is here
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_ENDIn file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h                                                   ^~~~~~~~~~~:
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h::35315:
:In file included from 16/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 4note: :
expanded from macro 'XSRETURN'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STMT_START {                                        \
               ^
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
./xsubs/macro.xs:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */49
:                              ^7
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:247:13: note: '{' token is here
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");322
:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:49:7: note: ')' token is here
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:49:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/macro.xs:49:7: note: ')' token is here
      XSRETURN_IV((int)count);
      ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
./xsubs/macro.xs:69:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:11: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:69:5: note: '{' token is here
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:96:22: note: expanded from macro 'CHECK_PARSE_DATA'
          STMT_START {                                                         \
                     ^
./xsubs/macro.xs:69:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_PARSE_DATA;
    ^~~~~~~~~~~~~~~~
C.xs:99:11: note: expanded from macro 'CHECK_PARSE_DATA'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning:           } STMT_END'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

          ^
./xsubs/macro.xs:69:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    CHECK_PARSE_DATA;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    ^~~~~~~~~~~~~~~~
C.xs:99:13: note: expanded from macro 'CHECK_PARSE_DATA'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/macro.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/macro.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/macro.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: #  define STMT_END      )
                        ^
./xsubs/macro.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/macro.xs:70:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:70:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/macro.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/macro.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:70:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/macro.xs:70:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:76:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:76:9: note: '{' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/macro.xs:76:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:76:9: note: '{' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
108 warnings generated.
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/macro.xs:76:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:76:9: note: ')' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:76:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/macro.xs:76:9: note: ')' token is here
        XSRETURN_IV(items-1);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:82:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:24: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:82:9: note: '{' token is here
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:35: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                  ^
./xsubs/macro.xs:82:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:82:9: note: '{' token is here
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/macro.xs:82:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:82:9: note: ')' token is here
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:52: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:82:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:65: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                ^
./xsubs/macro.xs:82:9: note: ')' token is here
        XSRETURN_IV((int)count);
        ^~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:322:67: note: expanded from macro 'XSRETURN_IV'
#define XSRETURN_IV(v) STMT_START { XST_mIV(0,v);  XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:105:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:105:7: note: '{' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/macro.xs:105:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:105:7: note: ')' token is here
      XSRETURN(items-1);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:113:7: warning: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
mv hook.o tmphook.o
In file included from mv tmphook.o cbc/hook.o
cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:113:7: note: '{' token is here
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
./xsubs/macro.xs:113:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
./xsubs/macro.xs:113:7: note: ')' token is here
      EXTEND(SP, count);
      ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/macro.xs:120:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/macro.xs:120:7: note: '{' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/macro.xs:120:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/macro.xs:120:7: note: ')' token is here
      XSRETURN(count);
      ^~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_ENDx86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/init.c

      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/arg.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/arg.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/arg.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/arg.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/arg.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/arg.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/arg.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */

                              ^
./xsubs/arg.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/arg.xs:33:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/arg.xs:33:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/arg.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/arg.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/arg.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/arg.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/arg.xs:33:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/arg.xs:33:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/arg.xs:60:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(items-1);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/arg.xs:60:5: note: '{' token is here
    XSRETURN(items-1);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/arg.xs:60:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(items-1);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/arg.xs:60:5: note: ')' token is here
    XSRETURN(items-1);
    ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:36:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/feature.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:36:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/feature.xs:36:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/feature.xs:36:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:36:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/feature.xs:36:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:36:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/feature.xs:36:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/feature.xs:36:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:36:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/feature.xs:36:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:36:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/feature.xs:36:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:47:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:24: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:47:11: note: '{' token is here
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:35: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                  ^
./xsubs/feature.xs:47:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:47:11: note: '{' token is here
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/feature.xs:47:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/feature.xs:47:11: note: ')' token is here
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:52: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:47:11: warning:                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:65: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                ^
./xsubs/feature.xs:47:11: note: ')' token is here
          XSRETURN_NO;
          ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:327:67: note: expanded from macro 'XSRETURN_NO'
#define XSRETURN_NO    STMT_START { XST_mNO(0);    XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:54:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:24: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:54:11: note: '{' token is here
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:35: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                  ^
./xsubs/feature.xs:54:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:54:11: note: '{' token is here
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/feature.xs:54:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/feature.xs:54:11: note: ')' token is here
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:52: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:54:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:65: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                ^
./xsubs/feature.xs:54:11: note: ')' token is here
          XSRETURN_YES;
          ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:328:67: note: expanded from macro 'XSRETURN_YES'
#define XSRETURN_YES   STMT_START { XST_mYES(0);   XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:61:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:24: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:61:5: note: '{' token is here
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:35: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                  ^
./xsubs/feature.xs:61:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/feature.xs:61:5: note: '{' token is here
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/feature.xs:61:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/feature.xs:61:5: note: ')' token is here
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:52: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
122 warnings generated.
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/feature.xs:61:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:65: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                ^
./xsubs/feature.xs:61:5: note: ')' token is here
    XSRETURN_UNDEF;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:329:67: note: expanded from macro 'XSRETURN_UNDEF'
#define XSRETURN_UNDEF STMT_START { XST_mUNDEF(0); XSRETURN(1); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/native.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/native.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:115:22: note: expanded from macro 'CHECK_VOID_CONTEXT'
          STMT_START {                                                         \
                     ^
./xsubs/native.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/native.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
./xsubs/native.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
./xsubs/native.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:118:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              WARN_VOID_CONTEXT;                                               \
              ^~~~~~~~~~~~~~~~~
C.xs:112:13: note: expanded from macro 'WARN_VOID_CONTEXT'
            WARN((aTHX_ "Useless use of %s in void context", method))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/native.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/native.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
./xsubs/native.xs:35:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
./xsubs/native.xs:35:5: note: '{' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
./xsubs/native.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
./xsubs/native.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/native.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
./xsubs/native.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:119:15: note: expanded from macro 'CHECK_VOID_CONTEXT'
              XSRETURN_EMPTY;                                                  \
              ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
./xsubs/native.xs:35:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:11: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
          ^
./xsubs/native.xs:35:5: note: ')' token is here
    CHECK_VOID_CONTEXT;
    ^~~~~~~~~~~~~~~~~~
C.xs:121:13: note: expanded from macro 'CHECK_VOID_CONTEXT'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:3037:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:3037:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:3037:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:3037:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:3095:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:24: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                       ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:3095:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:35: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                  ^
C.c:3095:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:3095:5: note: '{' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
mv dimension.o tmpdimension.o
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:3095:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:3095:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:52: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                   ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:3095:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:65: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                ^
C.c:3095:5: note: ')' token is here
    XSRETURN_EMPTY;
    ^~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:330:67: note: expanded from macro 'XSRETURN_EMPTY'
#define XSRETURN_EMPTY STMT_START {                XSRETURN(0); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
C.c:3123:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:5: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
C.c:3123:5: note: '{' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:315:16: note: expanded from macro 'XSRETURN'
    STMT_START {                                        \
               ^
C.c:3123:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:5: note: expanded from macro 'XSRETURN'
    } STMT_END
    ^
C.c:3123:5: note: ')' token is here
    XSRETURN(1);
    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/XSUB.h:320:7: note: expanded from macro 'XSRETURN'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
mv tmpdimension.o cbc/dimension.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/macros.c
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/idl.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
98 warnings generated.
mv idl.o tmpidl.o
mv tmpidl.o cbc/idl.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/member.c
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
657    SIP_ROUNDS;                             \:5: note: expanded from macro 'CX_POP_SAVEARRAY'

    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ^~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hIn file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'

    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    ^    SIP_ROUNDS;                             \
    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from cbc/init.c#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:21  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'

  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ^~~~~~~~~~  SIP_ROUNDS;                               \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

  ^~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;    STMT_START {                                                        \
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;               ^

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here

        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244In file included from :3: note: expanded from macro 'PERL_SIPHASH_FNC'
cbc/init.c  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
In file included from   STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
2619  SIP_FINAL_ROUNDS                          \:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
  ^~~~~~~~~~~~~~~~

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:275:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
24:#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \ warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
               ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_ENDIn file included from 
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'

#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/init.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
   STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
note: expanded from macro 'MUTEX_UNLOCK'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    } STMT_END    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here

    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ^  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'

    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:#   define STMT_END     )
                        ^
280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
cbc/init.c:120/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
7  SIP_FINAL_ROUNDS                          \: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  ^~~~~~~~~~~~~~~~      WARN((aTHX_ "'%s' should be a hash reference", idl_to_str(aTHX_ idl)));
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:  SIP_FINAL_ROUNDS                          \225:20: note: expanded from macro 'WARN'

  ^~~~~~~~~~~~~~~~
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: ./ppport.hnote: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:3813:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
28:  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
     ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;note: expanded from macro 'STMT_START'

                                ^~~~~~~~#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:120:7: note: '{' token is here

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h      WARN((aTHX_ "'%s' should be a hash reference", idl_to_str(aTHX_ idl)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
:175:#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END14: note: expanded from macro 'SIPROUND'

  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
                              ^  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~

cbc/init.c:120:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h      WARN((aTHX_ "'%s' should be a hash reference", idl_to_str(aTHX_ idl)));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
:281:#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/init.c:120:7: note: ')' token is here
33:       WARN((aTHX_ "'%s' should be a hash reference", idl_to_str(aTHX_ idl)));warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;./cbc/cbc.h:225:73: note: expanded from macro 'WARN'

                                ^~~~~~~~#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^

                        ^cbc/init.c:123:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:53:9: note: expanded from macro 'ENTER_LEVEL'

        STMT_START {                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:123:3: note: '{' token is here
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:53:20: note: expanded from macro 'ENTER_LEVEL'
        STMT_START {                          \
                   ^
cbc/init.c:123:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:123:3: note: '{' token is here
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
        STMT_START {                          \
                   ^
cbc/init.c:123:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:9: note: expanded from macro 'INDENT'
        } STMT_END
        ^
cbc/init.c:123:3: note: ')' token is here
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:123:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:56:9: note: expanded from macro 'ENTER_LEVEL'
        } STMT_END
        ^
cbc/init.c:123:3: note: ')' token is here
  ENTER_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:56:11: note: expanded from macro 'ENTER_LEVEL'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:124:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:124:3: note: '{' token is here
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/init.c:124:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:124:3: note: '{' token is here
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/init.c:124:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/init.c:124:3: note: ')' token is here
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:124:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/init.c:124:3: note: ')' token is here
  IDLIST_PUSH(idl, ID);
  ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:149:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        APPEND_COMMA;
        ^~~~~~~~~~~~
cbc/init.c:45:9: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:149:9: note: '{' token is here
        APPEND_COMMA;
        ^~~~~~~~~~~~
cbc/init.c:45:20: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
                   ^
cbc/init.c:149:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        APPEND_COMMA;
        ^~~~~~~~~~~~
cbc/init.c:50:9: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
        ^
cbc/init.c:149:9: note: ')' token is here
        APPEND_COMMA;
        ^~~~~~~~~~~~
cbc/init.c:50:11: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:162:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:162:7: note: '{' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
cbc/init.c:162:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/init.c:162:7: note: ')' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:163:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:45:9: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:163:7: note: '{' token is here
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:45:20: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
                   ^
cbc/init.c:163:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:50:9: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
        ^
cbc/init.c:163:7: note: ')' token is here
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:50:11: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:164:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_POP(idl);
      ^~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:164:7: note: '{' token is here
      IDLIST_POP(idl);
      ^~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/init.c:164:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_POP(idl);
      ^~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/init.c:164:7: note: ')' token is here
      IDLIST_POP(idl);
      ^~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:167:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:167:7: note: '{' token is here
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/init.c:167:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:167:7: note: '{' token is here
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/init.c:167:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/init.c:167:7: note: ')' token is here
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:167:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/init.c:167:7: note: ')' token is here
      IDLIST_PUSH(idl, ID);
      ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:176:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_POP(idl);
  ^~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:176:3: note: '{' token is here
  IDLIST_POP(idl);
  ^~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/init.c:176:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_POP(idl);
  ^~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/init.c:176:3: note: ')' token is here
  IDLIST_POP(idl);
  ^~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:177:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:59:9: note: expanded from macro 'LEAVE_LEVEL'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:177:3: note: '{' token is here
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:59:20: note: expanded from macro 'LEAVE_LEVEL'
        STMT_START {                          \
                   ^
cbc/init.c:177:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:177:3: note: '{' token is here
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
        STMT_START {                          \
                   ^
cbc/init.c:177:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:9: note: expanded from macro 'INDENT'
        } STMT_END
        ^
cbc/init.c:177:3: note: ')' token is here
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:177:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:63:9: note: expanded from macro 'LEAVE_LEVEL'
        } STMT_END
        ^
cbc/init.c:177:3: note: ')' token is here
  LEAVE_LEVEL;
  ^~~~~~~~~~~
cbc/init.c:63:11: note: expanded from macro 'LEAVE_LEVEL'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:216:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:216:9: note: '{' token is here
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/init.c:216:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/init.c:216:9: note: ')' token is here
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:220:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:53:9: note: expanded from macro 'ENTER_LEVEL'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:220:5: note: '{' token is here
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:53:20: note: expanded from macro 'ENTER_LEVEL'
        STMT_START {                          \
                   ^
cbc/init.c:220:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:220:5: note: '{' token is here
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
        STMT_START {                          \
                   ^
cbc/init.c:220:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:9: note: expanded from macro 'INDENT'
        } STMT_END
        ^
cbc/init.c:220:5: note: ')' token is here
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:54:11: note: expanded from macro 'ENTER_LEVEL'
          INDENT;                             \
          ^~~~~~
cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:220:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:56:9: note: expanded from macro 'ENTER_LEVEL'
        } STMT_END
        ^
cbc/init.c:220:5: note: ')' token is here
    ENTER_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:56:11: note: expanded from macro 'ENTER_LEVEL'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:221:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:221:5: note: '{' token is here
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/init.c:221:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:221:5: note: '{' token is here
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/init.c:221:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/init.c:221:5: note: ')' token is here
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:221:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/init.c:221:5: note: ')' token is here
    IDLIST_PUSH(idl, IX);
    ^~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:231:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:45:9: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:231:7: note: '{' token is here
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:45:20: note: expanded from macro 'APPEND_COMMA'
        STMT_START {                          \
                   ^
cbc/init.c:231:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:50:9: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
        ^
cbc/init.c:231:7: note: ')' token is here
      APPEND_COMMA;
      ^~~~~~~~~~~~
cbc/init.c:50:11: note: expanded from macro 'APPEND_COMMA'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:237:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_POP(idl);
    ^~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:237:5: note: '{' token is here
    IDLIST_POP(idl);
    ^~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/init.c:237:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IDLIST_POP(idl);
    ^~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/init.c:237:5: note: ')' token is here
    IDLIST_POP(idl);
    ^~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/init.c:238:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:59:9: note: expanded from macro 'LEAVE_LEVEL'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:238:5: In file included from note: '{' token is here
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:59:20: note: expanded from macro 'LEAVE_LEVEL'
        STMT_START {                          \
                   ^
cbc/member.c:21cbc/init.c:238:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
:
          INDENT;                             \
          ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
In file included from         STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                              ^    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \cbc/init.c:238:5: note: '{' token is here
    LEAVE_LEVEL;
    ^~~~~~~~~~~
cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'

          INDENT;                             \
          ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
                                     ^~~~~~~~~~        STMT_START {                          \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

                   ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here

    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
cbc/init.c:238:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    LEAVE_LEVEL;
    ^~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \cbc/init.c:61:11: note: expanded from macro 'LEAVE_LEVEL'
          INDENT;                             \

                                        ^          ^~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hcbc/init.c::15042::59::  note: note: ')' token is hereexpanded from macro 'INDENT'

        } STMT_END
        ^
cbc/init.c:238:5    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);:
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note: 
')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3:     LEAVE_LEVEL;note: 
expanded from macro 'ZAPHOD32_SCRAMBLE32'    ^~~~~~~~~~~

} STMT_ENDcbc/init.c
:  ^~~~~~~~61
:11: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'LEAVE_LEVEL':
667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )          INDENT;                             \

                        ^          ^~~~~~

cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from #  define STMT_END      )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:                        ^663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
cbc/init.c:238:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \    LEAVE_LEVEL;

                                     ^~~~~~~~~~    ^~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hcbc/init.c::66663::299::  note: note: expanded from macro 'STMT_START'expanded from macro 'LEAVE_LEVEL'

        } STMT_END
        ^
cbc/init.c:238:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    LEAVE_LEVEL;:
151    ^~~~~~~~~~~:
5: note: '{' token is here
cbc/init.c:63:11: note: expanded from macro 'LEAVE_LEVEL'
        } STMT_END    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);

          ^~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./ppport.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::381480::2049::  note: note: expanded from macro 'STMT_END'expanded from macro 'ZAPHOD32_SCRAMBLE32'

#  define STMT_END      )
                        ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/init.c:253:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
        WARN_UNDEF_STRUCT(pStruct);In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h        ^~~~~~~~~~~~~~~~~~~~~~~~~~:
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h./cbc/cbc.h::4244:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h11::152 :note: 5expanded from macro 'WARN_UNDEF_STRUCT':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38./cbc/cbc.h:: 225note: :expanded from macro 'ZAPHOD32_SCRAMBLE32'20
: note: expanded from macro 'WARN'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:253:9: note:     ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);'{' token is here

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: #define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \note: 
expanded from macro 'WARN_UNDEF_STRUCT'                                                ^

          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
cbc/init.c:    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);253
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~9
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: note: ./cbc/cbc.hexpanded from macro 'STMT_END':
244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
#   define STMT_END     )
                        ^
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END: warning: 
                                                                      ^
cbc/init.c:253:9: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note: 
')' token is here
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");:
244    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
11: note: expanded from macro 'WARN_UNDEF_STRUCT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \73
:                                    ^~~~~~~~~~ 
note: expanded from macro 'WARN'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */./ppport.h
:                              ^3814
:20: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :expanded from macro 'STMT_END'156
:5: note: '{' token is here
#  define STMT_END      )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
cbc/init.c:259:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INDENT;
      ^~~~~~
cbc/init.c:39:9: note: expanded from macro 'INDENT'
        STMT_START {                          \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:259:7: note: '{' token is here
      INDENT;
      ^~~~~~
cbc/init.c:39:20: note: expanded from macro 'INDENT'
        STMT_START {                          \
                   ^
cbc/init.c:259:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      INDENT;
      ^~~~~~
cbc/init.c:42:9: note: expanded from macro 'INDENT'
        } STMT_END
        ^
cbc/init.c:259:7: note: ')' token is here
      INDENT;
      ^~~~~~
cbc/init.c:42:11: note: expanded from macro 'INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:3814::15620::5 :note:  expanded from macro 'STMT_END'warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_END      )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
cbc/init.c:263:11: warning: #   define STMT_END     )'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                        ^
          WARN((aTHX_ "'%s' should be a scalar value", idl_to_str(aTHX_ idl)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cbc/member.c:21:
./cbc/cbc.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h225::392120:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hnote: :expanded from macro 'WARN'663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:263:11: note: '{' token is here
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
          WARN((aTHX_ "'%s' should be a scalar value", idl_to_str(aTHX_ idl)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
cbc/init.c:263:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          WARN((aTHX_ "'%s' should be a scalar value", idl_to_str(aTHX_ idl)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/init.c:263:11: note: ')' token is here
          WARN((aTHX_ "'%s' should be a scalar value", idl_to_str(aTHX_ idl)));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/init.c:296:3:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note:   IDLIST_INIT(&idl);expanded from macro 'ZAPHOD32_MIX'

  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:43:9: note: expanded from macro 'IDLIST_INIT'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:296:3: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");  IDLIST_INIT(&idl);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ^~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h./cbc/idl.h::11643::4820::  note: note: expanded from macro 'ZAPHOD32_MIX'expanded from macro 'IDLIST_INIT'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \        STMT_START {                                                           \

                                               ^                   ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:cbc/init.c3921:
:In file included from 296/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h::3663::
 In file included from warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning:   IDLIST_INIT(&idl);'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:48:9: note: expanded from macro 'IDLIST_INIT'
        } STMT_END
        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");cbc/init.c
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~296
:3: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
  IDLIST_INIT(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:48:11: note: expanded from macro 'IDLIST_INIT'
        } STMT_END
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \          ^~~~~~~~

                                    ^~~~~~~~~~
./ppport.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h3814::66620::29 :note:  expanded from macro 'STMT_END'note: 
expanded from macro 'STMT_START'
#  define STMT_END      )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5:cbc/init.c :note: 297'{' token is here:
3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");:
9    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'IDLIST_PUSH'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
28                                               ^:
 note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:297:3: note: '{' token is here
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/init.c:297:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/init.c:297:3: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    v2 = ROTR32(v2, 7) ^ v0;   \
./cbc/idl.h                               ^:
32:20:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: 159expanded from macro 'IDLIST_GROW':
5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");        STMT_START {                                                           \

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                   ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:cbc/init.c667::21297:: 3note: :expanded from macro 'STMT_END' 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:          IDLIST_GROW(idl, (idl)->count+1);                                    \5
:          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/init.c:297:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 80note: :')' token is here38
: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \58
:                                     ^~~~~~~~~~11
: note: expanded from macro 'IDLIST_PUSH'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: expanded from macro 'STMT_START'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^./cbc/idl.h
:40:11/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 163note: :expanded from macro 'IDLIST_GROW'5
: note: '{' token is here
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note:     ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);expanded from macro 'STMT_END'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49:#  define STMT_END      ) 
note:                         ^expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
cbc/init.c:297:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/init.c:297:3: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h  IDLIST_PUSH(&idl, ID);:
163  ^~~~~~~~~~~~~~~~~~~~~:
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]./cbc/idl.h
:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./ppport.h:3814:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h20::87 :note: 41expanded from macro 'STMT_END':
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#  define STMT_END      )
                        ^
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/init.c:302:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:  IDLIST_FREE(&idl);663
:
  ^~~~~~~~~~~~~~~~~In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h./cbc/idl.h::451:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h9::164 :note: 5expanded from macro 'IDLIST_FREE':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        STMT_START {                                                           \
        ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:80:38./ppport.h:: 3813note: :expanded from macro 'ZAPHOD32_SCRAMBLE32'28
: note: expanded from macro 'STMT_START'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */29
:                              ^ 
note: expanded from macro 'STMT_START'
cbc/init.c:302:3: note: '{' token is here
  IDLIST_FREE(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
51                              ^:
20: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :expanded from macro 'IDLIST_FREE'164
:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        STMT_START {                                                           \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h                   ^:
80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
cbc/init.c:302:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_FREE(&idl);
  ^~~~~~~~~~~~~~~~~
./cbc/idl.h:54:9: note: expanded from macro 'IDLIST_FREE'
        } STMT_END
        ^
cbc/init.c:302:3: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164  IDLIST_FREE(&idl);:
5  ^~~~~~~~~~~~~~~~~:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
./cbc/idl.h:54:11: note: expanded from macro 'IDLIST_FREE'
        } STMT_END
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);          ^~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./ppport.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3814::8720::41 :note:  expanded from macro 'STMT_END'note: 
expanded from macro 'ZAPHOD32_SCRAMBLE32'
#  define STMT_END      )
                        ^
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h::6657:: 5warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro] 
note: expanded from macro 'CX_POP_SAVEARRAY'
    ,SIPROUND;
     ^~~~~~~~
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note: 666expanded from macro 'SIPROUND':
29: note: expanded from macro 'STMT_START'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h  SIP_ROUNDS;                               \:
2209  ^~~~~~~~~~:
5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :'{' token is here274
:6: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~    ,SIPROUND;

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:180:5: note: expanded from macro 'SIPROUND'
    STMT_START {                                                        \
               ^
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h    ,SIPROUND;SIPROUND;SIPROUND;:
2209     ^~~~~~~~:
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h5::244 :note: 3expanded from macro 'CX_POP_SAVEARRAY':
 note: expanded from macro 'PERL_SIPHASH_FNC'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5:  SIP_FINAL_ROUNDS                          \ 
note:   ^~~~~~~~~~~~~~~~')' token is here

    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: In file included from expanded from macro 'PERL_SIPHASH_FNC'
cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]  SIP_FINAL_ROUNDS                          \

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5    ,SIPROUND;SIPROUND;SIPROUND;:
      ^~~~~~~~note: 
expanded from macro 'CLEAR_ARGARRAY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5    STMT_START {                                                        \:
     ^~~~~~~~~~note: 
expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:  } STMT_END 
note:     ^~~~~~~~expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h::2442215::39::  note: note: expanded from macro 'PERL_SIPHASH_FNC''{' token is here

        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
  SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h
:  ^~~~~~~~~~~~~~~~667
:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is hereIn file included from 
cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9:     ,SIPROUND;SIPROUND;SIPROUND;warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]              ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5:  STMT_START {              \ 
note:              ^expanded from macro 'CLEAR_ARGARRAY'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:    } STMT_END3
:    ^ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:: 214warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]5
: note: expanded from macro 'MUTEX_LOCK'
    ,SIPROUND;SIPROUND;
    STMT_START {                                                \              ^~~~~~~~

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h666::18029::3 :note:  expanded from macro 'STMT_START'note: 
expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */ 
note:                               ^expanded from macro 'PERL_SIPHASH_FNC'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    SIP_ROUNDS;                             \
    ENV_LOCK;    ^~~~~~~~~~

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h15::2924 :note: 31')' token is here:
 note: expanded from macro 'ENV_LOCK'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h180::2145::16 :note:  expanded from macro 'SIPROUND'note: 
expanded from macro 'MUTEX_LOCK'
  } STMT_END
    ^~~~~~~~
    STMT_START {                                                \
               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6:    } STMT_END 
warning:     ^'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h175::29243::31 :note:  expanded from macro 'SIPROUND'note: 
expanded from macro 'ENV_LOCK'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex):
666                              ^~~~~~~~~~~~~~~~~~~~~~~~~:
29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.hexpanded from macro 'STMT_START':
219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */expanded from macro 'STMT_END'

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:#   define STMT_END     )3
:                        ^ 
note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
In file included from cbc/macros.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h280::29256::31 :warning:  '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note: 
expanded from macro 'ENV_UNLOCK'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:180:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h3::222 :note: 16expanded from macro 'SIPROUND':
 note: expanded from macro 'MUTEX_UNLOCK'
  } STMT_END
  ^
    STMT_START {                                                \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:               ^238
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238In file included from :cbc/macros.c3::21 :
note: In file included from expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h31::280 :note: 15expanded from macro 'ENV_UNLOCK':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h::175227::35::  note: note: expanded from macro 'SIPROUND'expanded from macro 'MUTEX_UNLOCK'

    } STMT_END
    ^
  STMT_START {              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:  ^~~~~~~~~~2627
:5: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h')' token is here:
666:29: note: expanded from macro 'STMT_START'
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: #  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)expanded from macro 'PERL_SIPHASH_FNC'

                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~    } STMT_END

      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h15::667 :note: '{' token is here21
: note: expanded from macro 'STMT_END'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~#   define STMT_END     )

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
98 warnings generated.
mv macros.o tmpmacros.o
mv tmpmacros.o cbc/macros.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/object.c
158 warnings generated.
mv init.o tmpinit.o
mv tmpinit.o cbc/init.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/option.c
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/member.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/member.c:133:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:133:11: note: '{' token is here
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:133:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:133:11: note: ')' token is here
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:143:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:143:7: note: '{' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
cbc/member.c:143:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/member.c:143:7: note: ')' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:145:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:145:9: note: '{' token is here
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:145:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:145:9: note: ')' token is here
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SvCUR_set(name, len);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:151:5: note: '{' token is here
    SvCUR_set(name, len);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SvCUR_set(name, len);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:151:5: note: ')' token is here
    SvCUR_set(name, len);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:201:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:201:11: note: '{' token is here
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:201:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:201:11: note: ')' token is here
          SvCUR_set(name, len+1);
          ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:217:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:217:9: note: '{' token is here
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/member.c:217:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/member.c:217:9: note: ')' token is here
        SvCUR_set(name, len);
        ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:234:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:234:9: note: '{' token is here
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/member.c:234:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/member.c:234:9: note: ')' token is here
        WARN_UNDEF_STRUCT(pStruct);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:427:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN_UNDEF_STRUCT(pStruct);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:427:5: note: '{' token is here
    WARN_UNDEF_STRUCT(pStruct);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/member.c:427:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN_UNDEF_STRUCT(pStruct);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/member.c:427:5: note: ')' token is here
    WARN_UNDEF_STRUCT(pStruct);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:444:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GMS_HANDLE_PAD_REGION;
      ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:444:7: note: '{' token is here
      GMS_HANDLE_PAD_REGION;
      ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:20: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
                   ^
cbc/member.c:444:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GMS_HANDLE_PAD_REGION;
      ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
        ^
cbc/member.c:444:7: note: ')' token is here
      GMS_HANDLE_PAD_REGION;
      ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:11: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:460:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:460:9: note: '{' token is here
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
cbc/member.c:460:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/member.c:460:9: note: ')' token is here
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:474:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          GMS_HANDLE_BEST_MEMBER;
          ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:382:9: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:474:11: note: '{' token is here
          GMS_HANDLE_BEST_MEMBER;
          ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:382:20: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        STMT_START {                                                           \
                   ^
cbc/member.c:474:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          GMS_HANDLE_BEST_MEMBER;
          ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:410:9: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        } STMT_END
        ^
cbc/member.c:474:11: note: ')' token is here
          GMS_HANDLE_BEST_MEMBER;
          ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:410:11: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:493:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            GMS_HANDLE_PAD_REGION;
            ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:493:13: note: '{' token is here
            GMS_HANDLE_PAD_REGION;
            ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:20: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
                   ^
cbc/member.c:493:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            GMS_HANDLE_PAD_REGION;
            ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
        ^
cbc/member.c:493:13: note: ')' token is here
            GMS_HANDLE_PAD_REGION;
            ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:11: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:513:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              GMS_HANDLE_BEST_MEMBER;
              ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:382:9: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:513:15: note: '{' token is here
              GMS_HANDLE_BEST_MEMBER;
              ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:382:20: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        STMT_START {                                                           \
                   ^
cbc/member.c:513:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              GMS_HANDLE_BEST_MEMBER;
              ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:410:9: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        } STMT_END
        ^
cbc/member.c:513:15: note: ')' token is here
              GMS_HANDLE_BEST_MEMBER;
              ^~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:410:11: note: expanded from macro 'GMS_HANDLE_BEST_MEMBER'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:529:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GMS_HANDLE_PAD_REGION;
    ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:529:5: note: '{' token is here
    GMS_HANDLE_PAD_REGION;
    ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:367:20: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        STMT_START {                                                           \
                   ^
cbc/member.c:529:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GMS_HANDLE_PAD_REGION;
    ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:9: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
        ^
cbc/member.c:529:5: note: ')' token is here
    GMS_HANDLE_PAD_REGION;
    ^~~~~~~~~~~~~~~~~~~~~
cbc/member.c:379:11: note: expanded from macro 'GMS_HANDLE_PAD_REGION'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:596:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:596:7: note: '{' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
cbc/member.c:596:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/member.c:596:7: note: ')' token is here
      FOLLOW_AND_CHECK_TSPTR(pTS);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:859:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    PROPAGATE_FLAGS(pType->tflags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:737:9: note: expanded from macro 'PROPAGATE_FLAGS'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:859:5: note: '{' token is here
    PROPAGATE_FLAGS(pType->tflags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:737:20: note: expanded from macro 'PROPAGATE_FLAGS'
        STMT_START {                                                           \
                   ^
cbc/member.c:859:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    PROPAGATE_FLAGS(pType->tflags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:740:9: note: expanded from macro 'PROPAGATE_FLAGS'
        } STMT_END
        ^
cbc/member.c:859:5: note: ')' token is here
    PROPAGATE_FLAGS(pType->tflags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:740:11: note: expanded from macro 'PROPAGATE_FLAGS'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:900:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:900:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:20: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
                   ^
cbc/member.c:900:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:900:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
                   ^
cbc/member.c:900:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
        ^
cbc/member.c:900:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:900:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
        ^
cbc/member.c:900:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("array");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:902:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:902:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:20: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
                   ^
cbc/member.c:902:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:902:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
                   ^
cbc/member.c:902:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
        ^
cbc/member.c:902:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:902:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
        ^
cbc/member.c:902:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("pointer");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:906:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            PROPAGATE_FLAGS(pStruct->tflags);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:737:9: note: expanded from macro 'PROPAGATE_FLAGS'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:906:13: note: '{' token is here
            PROPAGATE_FLAGS(pStruct->tflags);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:737:20: note: expanded from macro 'PROPAGATE_FLAGS'
        STMT_START {                                                           \
                   ^
cbc/member.c:906:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            PROPAGATE_FLAGS(pStruct->tflags);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:740:9: note: expanded from macro 'PROPAGATE_FLAGS'
        } STMT_END
        ^
cbc/member.c:906:13: note: ')' token is here
            PROPAGATE_FLAGS(pStruct->tflags);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:740:11: note: expanded from macro 'PROPAGATE_FLAGS'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:909:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:909:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:743:20: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        STMT_START {                                                           \
                   ^
cbc/member.c:909:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:909:13: note: '{' token is here
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
                   ^
cbc/member.c:909:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
        ^
cbc/member.c:909:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:745:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
          TRUNC_NAME;                                                          \
          ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:909:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:9: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
        ^
cbc/member.c:909:13: note: ')' token is here
            CANNOT_ACCESS_MEMBER("non-compound");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/member.c:749:11: note: expanded from macro 'CANNOT_ACCESS_MEMBER'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:916:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            TRUNC_NAME;
            ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:916:13: note: '{' token is here
            TRUNC_NAME;
            ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
                   ^
cbc/member.c:916:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            TRUNC_NAME;
            ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
        ^
cbc/member.c:916:13: note: ')' token is here
            TRUNC_NAME;
            ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:940:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:940:15: note: '{' token is here
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
                   ^
cbc/member.c:940:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
        ^
cbc/member.c:940:15: note: ')' token is here
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/member.c:958:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:727:9: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/member.c:958:15: note: '{' token is here
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:727:20: note: expanded from macro 'TRUNC_NAME'
        STMT_START {                                                           \
                   ^
cbc/member.c:958:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:734:9: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
        ^
cbc/member.c:958:15: note: ')' token is here
              TRUNC_NAME;
              ^~~~~~~~~~
cbc/member.c:734:11: note: expanded from macro 'TRUNC_NAME'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:274#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:6#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
     ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
note: '{' token is here#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^

    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:     ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
note:     v ^= (v>>23);                       \expanded from macro 'SIPROUND'
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here

    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
  STMT_START {              \In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
             ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
:    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);238
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \3
                                                ^
: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h  ^~~~~~~~~~:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~

                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

     ^~~~~~~~
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \:
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
175:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
3    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \ 
                                                ^
note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
29    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
     v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
note:     ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);expanded from macro 'STMT_START'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )

                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                              ^    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
219:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");5
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \note: 
                                               ^
expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'SIPROUND'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
  STMT_START {              \
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )             ^
                        ^

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hcbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:219    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
5: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
note: expanded from macro 'PERL_SIPHASH_FNC'#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
    SIP_ROUNDS;                             \#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
:280:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
6: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SIP_ROUNDS;                             \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ^~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
                        ^
:280In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:6    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
: note: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");    ,SIPROUND;SIPROUND;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

     ^~~~~~~~#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
  ^~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
                        ^
:281:24:In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
     ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
note: '{' token is here#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^

                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);  STMT_START {              \

             ^    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     ):
                        ^
244:In file included from 3cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b); 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
note: expanded from macro 'PERL_SIPHASH_FNC'#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
  SIP_FINAL_ROUNDS                          \#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \

                                                ^
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
281:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \24
                                               ^
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'PERL_SIPHASH_FNC':167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
  SIP_FINAL_ROUNDS                          \
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )  ^~~~~~~~~~~~~~~~
                        ^

In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");281
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
:24:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
 note: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */')' token is here
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \                        ^
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:
244                        ^
:3: In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note: expanded from macro 'PERL_SIPHASH_FNC'    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
  SIP_FINAL_ROUNDS                          \#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here

  ^~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STMT_START {              \
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");  ^~~~~~~~~~
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )666
                        ^
:29In file included from :cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
 note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
expanded from macro 'STMT_START'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

                              ^#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                ^~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
:175    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
14: note: In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'SIPROUND'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
  STMT_START {              \#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

             ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:244#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \:
                                               ^
3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: In file included from '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \cbc/option.c
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;:
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )21
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
6161:
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
:    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
2209  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:  SIP_ROUNDS;                               \
  ^~~~~~~~~~
5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    STMT_START {                                                        \  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here

    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )    ^~~~~~~~~~
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h666:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:29    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
 note: expanded from macro 'STMT_START'#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
16:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
 note:   SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
expanded from macro 'CX_POP_SAVEARRAY'    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STMT_START {                                                        \    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'

  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
               ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
In file included from   SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
cbc/option.c:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )21
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
:
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
6161:
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;2209
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
:  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
5  SIP_FINAL_ROUNDS                          \:
  ^~~~~~~~~~~~~~~~
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
2209  SIP_FINAL_ROUNDS                          \:
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
5    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
:#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
   SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h')' token is here:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    CX_POP_SAVEARRAY(cx);#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ^~~~~~~~~~~~~~~~~~~~    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'

  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h
  ^~~~~~~~~~~~~~~~
:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/option.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/option.c:361:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Cannot use empty string as a keyword"));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:361:13: note: '{' token is here
            FAIL_CLEAN((aTHX_ "Cannot use empty string as a keyword"));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:361:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Cannot use empty string as a keyword"));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:361:13: note: ')' token is here
            FAIL_CLEAN((aTHX_ "Cannot use empty string as a keyword"));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:367:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", key));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:367:13: note: '{' token is here
            FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", key));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:367:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", key));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:367:13: note: ')' token is here
            FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", key));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:378:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Cannot use a reference as a keyword"));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:378:15: note: '{' token is here
              FAIL_CLEAN((aTHX_ "Cannot use a reference as a keyword"));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:378:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Cannot use a reference as a keyword"));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:378:15: note: ')' token is here
              FAIL_CLEAN((aTHX_ "Cannot use a reference as a keyword"));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:383:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", map));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:383:15: note: '{' token is here
              FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", map));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:327:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:383:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", map));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:383:15: note: ')' token is here
              FAIL_CLEAN((aTHX_ "Cannot use '%s' as a keyword", map));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:330:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:506:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Invalid option '%s' for bitfield layout engine '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:506:13: note: '{' token is here
            FAIL_CLEAN((aTHX_ "Invalid option '%s' for bitfield layout engine '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:506:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Invalid option '%s' for bitfield layout engine '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:506:13: note: ')' token is here
            FAIL_CLEAN((aTHX_ "Invalid option '%s' for bitfield layout engine '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:546:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:546:13: note: '{' token is here
            FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:546:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:546:13: note: ')' token is here
            FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:557:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:9: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:557:15: note: '{' token is here
              FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:445:20: note: expanded from macro 'FAIL_CLEAN'
        STMT_START {                                                           \
                   ^
cbc/option.c:557:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:9: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
        ^
cbc/option.c:557:15: note: ')' token is here
              FAIL_CLEAN((aTHX_ "Invalid value '%s' for option '%s'",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:449:11: note: expanded from macro 'FAIL_CLEAN'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
150 warnings generated.
mv member.o tmpmember.o
mv tmpmember.o cbc/member.o
cbc/option.c:895:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:895:5: note: '{' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/pack.c
cbc/option.c:895:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:895:5: note: ')' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:895:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:895:5: note: '{' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:895:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:895:5: note: ')' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:895:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:895:5: note: '{' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:895:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:895:5: note: ')' token is here
    FLAG_OPTION(OrderMembers,      order_members,          0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:897:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:897:5: note: '{' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:897:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:897:5: note: ')' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:897:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:897:5: note: '{' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:897:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:897:5: note: ')' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:897:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:897:5: note: '{' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:897:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:897:5: note: ')' token is here
    FLAG_OPTION(Warnings,          cfg.issue_warnings,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:898:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:898:5: note: '{' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:898:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:898:5: note: ')' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:898:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:898:5: note: '{' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:898:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:898:5: note: ')' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:898:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:898:5: note: '{' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:898:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:898:5: note: ')' token is here
    FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:899:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:899:5: note: '{' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:899:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:899:5: note: ')' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:899:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:899:5: note: '{' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:899:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:899:5: note: ')' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
In file included from             IMPACTS_PREPROC(pp);                                               \cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~

            ^~~~~~~~~~~~~~~~~~~
cbc/option.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
:    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
772:11#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
:    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
     STMT_START {                                                        \
               ^
note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
cbc/option.c    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
:899:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        ^~~~~~~~~~        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'

    STMT_START {                                                        \
               ^
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);cbc/option.c:899:5: note: '{' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:899:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:899:5: note: ')' token is here
    FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:900:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:900:5: note: '{' token is here
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:900:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:900:5: note: ')' token is here
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:900:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:900:5: note: '{' token is here
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:900:5:In file included from cbc/object.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
 warning: #  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'

            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:900:5: note: ')' token is here
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

            ^~~~~~~~~~~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
cbc/option.c:900:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
In file included from cbc/object.c                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
:21        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
:
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'

#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;                              ^
cbc/option.c:900:5: note: '{' token is here

    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'

#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'

                        ^                DID_CHANGE(1);                                                 \

                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
In file included from cbc/object.c:cbc/option.c:900:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
21    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
:
In file included from                 DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:900:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars,     0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
6161:
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
                        ^

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: cbc/option.c:901:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'ENV_UNLOCK'
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

            ^~~~~~~~~~~~~~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'

#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'

                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'

#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^

                              ^
cbc/option.c:901:5: note: In file included from '{' token is here
cbc/object.c    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
:21:
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:        STMT_START {                                                           \
                   ^
6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:cbc/option.c:901:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
2627:    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'

#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'

    ^~~~~~~~~~            IMPACTS_LAYOUT(layout);                                            \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'

#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:901:5: note: ')' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:793:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:901:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:901:5: note: '{' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:901:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:901:5: note: ')' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:794:13: note: expanded from macro 'FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:901:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:901:5: note: '{' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:901:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:901:5: note: ')' token is here
    FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields, 0, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:803:17: note: expanded from macro 'FLAG_OPTION'
                DID_CHANGE(1);                                                 \
                ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:903:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:903:5: note: '{' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:903:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:903:5: note: ')' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:903:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:903:5: note: '{' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:903:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:903:5: note: ')' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:903:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:903:5: note: '{' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:903:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:903:5: note: '{' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:903:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:903:5: note: ')' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:903:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:903:5: note: ')' token is here
    IVAL_OPTION(PointerSize,       cfg.layout.ptr_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:904:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:904:5: note: '{' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:904:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:904:5: note: ')' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:904:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:904:5: note: '{' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:904:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:904:5: note: ')' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:904:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:904:5: note: '{' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:904:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:904:5: note: '{' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:904:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:904:5: note: ')' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:904:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:904:5: note: ')' token is here
    IVAL_OPTION(EnumSize,          cfg.layout.enum_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:905:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:905:5: note: '{' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:905:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:905:5: note: ')' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:905:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:905:5: note: '{' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:905:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:905:5: note: ')' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:905:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:905:5: note: '{' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:905:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:905:5: note: '{' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:905:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:905:5: note: ')' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:905:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:905:5: note: ')' token is here
    IVAL_OPTION(IntSize,           cfg.layout.int_size,           1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:906:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:906:5: note: '{' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:906:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:906:5: note: ')' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:906:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:906:5: note: '{' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:906:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:906:5: note: ')' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:906:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:906:5: note: '{' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:906:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:906:5: note: '{' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:906:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:906:5: note: ')' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:906:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:906:5: note: ')' token is here
    IVAL_OPTION(CharSize,          cfg.layout.char_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:907:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:907:5: note: '{' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:907:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:907:5: note: ')' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:907:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:907:5: note: '{' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:907:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:907:5: note: ')' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:907:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:907:5: note: '{' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:907:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:907:5: note: '{' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:907:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:907:5: note: ')' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:907:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:907:5: note: ')' token is here
    IVAL_OPTION(ShortSize,         cfg.layout.short_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:908:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:908:5: note: '{' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:908:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:908:5: note: ')' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:908:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:908:5: note: '{' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:908:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:908:5: note: ')' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:908:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:908:5: note: '{' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:908:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:908:5: note: '{' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:908:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:908:5: note: ')' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:908:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:908:5: note: ')' token is here
    IVAL_OPTION(LongSize,          cfg.layout.long_size,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:909:5: note: '{' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:909:5: note: ')' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:909:5: note: '{' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:909:5: note: ')' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:909:5: note: '{' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:909:5: note: '{' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:909:5: note: ')' token is here98 warnings generated.

    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:909:5: note: ')' token is here
    IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size,     1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:910:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:910:5: note: '{' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:910:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:910:5: note: ')' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:910:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:910:5: note: '{' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:910:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:910:5: note: ')' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13mv object.o tmpobject.o
: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:910:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:910:5: note: '{' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
mv tmpobject.o cbc/object.o
cbc/option.c:910:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:910:5: note: '{' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/sourcify.c

                   ^
cbc/option.c:910:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:910:5: note: ')' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:910:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:910:5: note: ')' token is here
    IVAL_OPTION(FloatSize,         cfg.layout.float_size,         1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:911:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:911:5: note: '{' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:911:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:911:5: note: ')' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:911:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:911:5: note: '{' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:911:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:911:5: note: ')' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:911:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:911:5: note: '{' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:911:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:911:5: note: '{' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:911:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:911:5: note: ')' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:911:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:911:5: note: ')' token is here
    IVAL_OPTION(DoubleSize,        cfg.layout.double_size,        1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:912:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:912:5: note: '{' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:912:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:912:5: note: ')' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:912:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:912:5: note: '{' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:912:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:912:5: note: ')' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:912:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:912:5: note: '{' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:912:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:912:5: note: '{' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:912:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:912:5: note: ')' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:912:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:912:5: note: ')' token is here
    IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size,   1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:913:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:913:5: note: '{' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:913:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:913:5: note: ')' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:913:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:913:5: note: '{' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:913:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:913:5: note: ')' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:913:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:913:5: note: '{' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:913:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:913:5: note: '{' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:913:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:913:5: note: ')' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:913:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:913:5: note: ')' token is here
    IVAL_OPTION(Alignment,         cfg.layout.alignment,          1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:914:5: note: '{' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:914:5: note: ')' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:812:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:914:5: note: '{' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:914:5: note: ')' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:813:13: note: expanded from macro 'IVAL_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:914:5: note: '{' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:914:5: note: '{' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:914:5: note: ')' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:914:5: note: ')' token is here
    IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment, 1, 0)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:820:17: note: expanded from macro 'IVAL_OPTION'
                UPDATE_OPT(config, val);                                       \
                ^~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:916:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:828:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:916:5: note: '{' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:828:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:916:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:828:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:916:5: note: ')' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:828:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:916:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:829:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:916:5: note: '{' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:829:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:916:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:829:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:916:5: note: ')' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:829:13: note: expanded from macro 'TRISTATE_FLAG_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:916:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:846:15: note: expanded from macro 'TRISTATE_FLAG_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:916:5: note: '{' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:846:15: note: expanded from macro 'TRISTATE_FLAG_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:916:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:846:15: note: expanded from macro 'TRISTATE_FLAG_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:916:5: note: ')' token is here
    TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:846:15: note: expanded from macro 'TRISTATE_FLAG_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:918:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:854:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:918:5: note: '{' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:854:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:918:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:854:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:918:5: note: ')' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:854:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:918:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:855:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:918:5: note: '{' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:855:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:918:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:855:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:918:5: note: ')' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:855:13: note: expanded from macro 'TRISTATE_INT_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:918:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:872:15: note: expanded from macro 'TRISTATE_INT_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:918:5: note: '{' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:872:15: note: expanded from macro 'TRISTATE_INT_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:918:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:872:15: note: expanded from macro 'TRISTATE_INT_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:918:5: note: ')' token is here
    TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:872:15: note: expanded from macro 'TRISTATE_INT_OPTION'
              DID_CHANGE(changed);                                             \
              ^~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:920:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:920:5: note: '{' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:920:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:920:5: note: ')' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:920:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:920:5: note: '{' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:920:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:920:5: note: ')' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:920:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:920:5: note: '{' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:920:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:920:5: note: ')' token is here
    STRLIST_OPTION(Include, cfg.includes,   0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:921:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:921:5: note: '{' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:921:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:921:5: note: ')' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:921:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:921:5: note: '{' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:921:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:921:5: note: ')' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:921:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:921:5: note: '{' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:921:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:921:5: note: ')' token is here
    STRLIST_OPTION(Define,  cfg.defines,    0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:922:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:922:5: note: '{' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:922:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:922:5: note: ')' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:880:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_LAYOUT(layout);                                            \
            ^~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:922:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:9: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:922:5: note: '{' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:769:20: note: expanded from macro 'IMPACTS_PREPROC'
        STMT_START {                                                           \
                   ^
cbc/option.c:922:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:9: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
        ^
cbc/option.c:922:5: note: ')' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:881:13: note: expanded from macro 'STRLIST_OPTION'
            IMPACTS_PREPROC(pp);                                               \
            ^~~~~~~~~~~~~~~~~~~
cbc/option.c:772:11: note: expanded from macro 'IMPACTS_PREPROC'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:922:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:922:5: note: '{' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:922:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:922:5: note: ')' token is here
    STRLIST_OPTION(Assert,  cfg.assertions, 0, 1)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:883:13: note: expanded from macro 'STRLIST_OPTION'
            DID_CHANGE(sv_val != NULL);                                        \
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:925:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:925:7: note: '{' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:925:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:925:7: note: ')' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:928:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:928:7: note: '{' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:928:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:928:7: note: ')' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:932:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:932:7: note: '{' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:932:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:932:7: note: ')' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:934:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:934:7: note: '{' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:934:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:934:7: note: ')' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:938:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:938:7: note: '{' token is here
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:938:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:938:7: note: ')' token is here
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:942:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:942:9: note: '{' token is here
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:942:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:942:9: note: '{' token is here
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:942:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:942:9: note: ')' token is here
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:942:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:942:9: note: ')' token is here
        UPDATE_OPT(cfg.layout.byte_order, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:953:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:953:7: note: '{' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:953:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:953:7: note: ')' token is here
      IMPACTS_LAYOUT(0);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:957:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:9: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:957:9: note: '{' token is here
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:783:20: note: expanded from macro 'UPDATE_OPT'
        STMT_START {                                                           \
                   ^
cbc/option.c:957:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:957:9: note: '{' token is here
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:957:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:957:9: note: ')' token is here
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:787:13: note: expanded from macro 'UPDATE_OPT'
            DID_CHANGE(1);                                                     \
            ^~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:957:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:9: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
        ^
cbc/option.c:957:9: note: ')' token is here
        UPDATE_OPT(enumType, pOpt->value);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:789:11: note: expanded from macro 'UPDATE_OPT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:608 warnings generated.
20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:967:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:9: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:967:7: note: '{' token is here
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:763:20: note: expanded from macro 'IMPACTS_LAYOUT'
        STMT_START {                                                           \
                   ^
cbc/option.c:967:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:9: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
        ^
cbc/option.c:967:7: note: ')' token is here
      IMPACTS_LAYOUT(1);
      ^~~~~~~~~~~~~~~~~
cbc/option.c:766:11: note: expanded from macro 'IMPACTS_LAYOUT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:969:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:9: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:969mv C.o tmpC.o
:7: note: '{' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:757:20: note: expanded from macro 'DID_CHANGE'
        STMT_START {                                                           \
                   ^
cbc/option.c:969:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:9: note: expanded from macro 'DID_CHANGE'
        } STMT_END
        ^
cbc/option.c:969:7: note: ')' token is here
      DID_CHANGE(sv_val != NULL);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:760:11: note: expanded from macro 'DID_CHANGE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
mv tmpC.o C.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/tag.c
cbc/option.c:1041:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(OrderMembers,      order_members         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1041:3: note: '{' token is here
  FLAG_OPTION(OrderMembers,      order_members         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1041:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(OrderMembers,      order_members         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1041:3: note: ')' token is here
  FLAG_OPTION(OrderMembers,      order_members         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1043:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(Warnings,          cfg.issue_warnings    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1043:3: note: '{' token is here
  FLAG_OPTION(Warnings,          cfg.issue_warnings    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1043:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(Warnings,          cfg.issue_warnings    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1043:3: note: ')' token is here
  FLAG_OPTION(Warnings,          cfg.issue_warnings    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1044:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1044:3: note: '{' token is here
  FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1044:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1044:3: note: ')' token is here
  FLAG_OPTION(HasCPPComments,    cfg.has_cpp_comments  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1045:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1045:3: note: '{' token is here
  FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1045:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1045:3: note: ')' token is here
  FLAG_OPTION(HasMacroVAARGS,    cfg.has_macro_vaargs  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1046:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1046:3: note: '{' token is here
  FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1046:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1046:3: note: ')' token is here
  FLAG_OPTION(UnsignedChars,     cfg.unsigned_chars    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1047:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1047:3: note: '{' token is here
  FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1047:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1047:3: note: ')' token is here
  FLAG_OPTION(UnsignedBitfields, cfg.unsigned_bitfields)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1014:11: note: expanded from macro 'FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1049:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(PointerSize,       cfg.layout.ptr_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1049:3: note: '{' token is here
  IVAL_OPTION(PointerSize,       cfg.layout.ptr_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1049:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(PointerSize,       cfg.layout.ptr_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1049:3: note: ')' token is here
  IVAL_OPTION(PointerSize,       cfg.layout.ptr_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1050:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(EnumSize,          cfg.layout.enum_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1050:3: note: '{' token is here
  IVAL_OPTION(EnumSize,          cfg.layout.enum_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1050:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(EnumSize,          cfg.layout.enum_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1050:3: note: ')' token is here
  IVAL_OPTION(EnumSize,          cfg.layout.enum_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1051:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(IntSize,           cfg.layout.int_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1051:3: note: '{' token is here
  IVAL_OPTION(IntSize,           cfg.layout.int_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1051:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(IntSize,           cfg.layout.int_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1051:3: note: ')' token is here
  IVAL_OPTION(IntSize,           cfg.layout.int_size          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1052:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(CharSize,          cfg.layout.char_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1052:3: note: '{' token is here
  IVAL_OPTION(CharSize,          cfg.layout.char_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1052:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(CharSize,          cfg.layout.char_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1052:3: note: ')' token is here
  IVAL_OPTION(CharSize,          cfg.layout.char_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1053:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(ShortSize,         cfg.layout.short_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1053:3: note: '{' token is here
  IVAL_OPTION(ShortSize,         cfg.layout.short_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1053:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(ShortSize,         cfg.layout.short_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1053:3: note: ')' token is here
  IVAL_OPTION(ShortSize,         cfg.layout.short_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1054:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongSize,          cfg.layout.long_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1054:3: note: '{' token is here
  IVAL_OPTION(LongSize,          cfg.layout.long_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1054:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongSize,          cfg.layout.long_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1054:3: note: ')' token is here
  IVAL_OPTION(LongSize,          cfg.layout.long_size         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1055:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1055:3: note: '{' token is here
  IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1055:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1055:3: note: ')' token is here
  IVAL_OPTION(LongLongSize,      cfg.layout.long_long_size    )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1056:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(FloatSize,         cfg.layout.float_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1056:3: note: '{' token is here
  IVAL_OPTION(FloatSize,         cfg.layout.float_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1056:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(FloatSize,         cfg.layout.float_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1056:3: note: ')' token is here
  IVAL_OPTION(FloatSize,         cfg.layout.float_size        )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1057:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(DoubleSize,        cfg.layout.double_size       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1057:3: note: '{' token is here
  IVAL_OPTION(DoubleSize,        cfg.layout.double_size       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1057:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(DoubleSize,        cfg.layout.double_size       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1057:3: note: ')' token is here
  IVAL_OPTION(DoubleSize,        cfg.layout.double_size       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1058:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1058:3: note: '{' token is here
  IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1058:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1058:3: note: ')' token is here
  IVAL_OPTION(LongDoubleSize,    cfg.layout.long_double_size  )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1059:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(Alignment,         cfg.layout.alignment         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1059:3: note: '{' token is here
  IVAL_OPTION(Alignment,         cfg.layout.alignment         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1059:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(Alignment,         cfg.layout.alignment         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1059:3: note: ')' token is here
  IVAL_OPTION(Alignment,         cfg.layout.alignment         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1060:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1060:3: note: '{' token is here
  IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1060:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1060:3: note: ')' token is here
  IVAL_OPTION(CompoundAlignment, cfg.layout.compound_alignment)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1022:11: note: expanded from macro 'IVAL_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1062:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1026:11: note: expanded from macro 'TRISTATE_FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1062:3: note: '{' token is here
  TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1026:11: note: expanded from macro 'TRISTATE_FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1062:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1026:11: note: expanded from macro 'TRISTATE_FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1062:3: note: ')' token is here
  TRISTATE_FLAG_OPTION(HostedC, cfg.has_std_c_hosted, cfg.is_std_c_hosted)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1026:11: note: expanded from macro 'TRISTATE_FLAG_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1064:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1030:11: note: expanded from macro 'TRISTATE_INT_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1064:3: note: '{' token is here
  TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1030:11: note: expanded from macro 'TRISTATE_INT_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1064:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1030:11: note: expanded from macro 'TRISTATE_INT_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1064:3: note: ')' token is here
  TRISTATE_INT_OPTION(StdCVersion, cfg.has_std_c, cfg.std_c_version)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1030:11: note: expanded from macro 'TRISTATE_INT_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1066:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Include,          cfg.includes         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1066:3: note: '{' token is here
  STRLIST_OPTION(Include,          cfg.includes         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1066:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Include,          cfg.includes         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1066:3: note: ')' token is here
  STRLIST_OPTION(Include,          cfg.includes         )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1067:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Define,           cfg.defines          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1067:3: note: '{' token is here
  STRLIST_OPTION(Define,           cfg.defines          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1067:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Define,           cfg.defines          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1067:3: note: ')' token is here
  STRLIST_OPTION(Define,           cfg.defines          )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1068:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Assert,           cfg.assertions       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1068:3: note: '{' token is here
  STRLIST_OPTION(Assert,           cfg.assertions       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1068:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(Assert,           cfg.assertions       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1068:3: note: ')' token is here
  STRLIST_OPTION(Assert,           cfg.assertions       )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1069:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(DisabledKeywords, cfg.disabled_keywords)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1069:3: note: '{' token is here
  STRLIST_OPTION(DisabledKeywords, cfg.disabled_keywords)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1069:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRLIST_OPTION(DisabledKeywords, cfg.disabled_keywords)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1069:3: note: ')' token is here
  STRLIST_OPTION(DisabledKeywords, cfg.disabled_keywords)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1018:11: note: expanded from macro 'STRLIST_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1072:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "KeywordMap", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1072:3: note: '{' token is here
  HV_STORE_CONST(hv, "KeywordMap", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1072:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "KeywordMap", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1072:3: note: ')' token is here
  HV_STORE_CONST(hv, "KeywordMap", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1074:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRING_OPTION(ByteOrder, THIS->cfg.layout.byte_order)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1074:3: note: '{' token is here
  STRING_OPTION(ByteOrder, THIS->cfg.layout.byte_order)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1074:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRING_OPTION(ByteOrder, THIS->cfg.layout.byte_order)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1074:3: note: ')' token is here
  STRING_OPTION(ByteOrder, THIS->cfg.layout.byte_order)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1075:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRING_OPTION(EnumType,  THIS->enumType)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1075:3: note: '{' token is here
  STRING_OPTION(EnumType,  THIS->enumType)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1075:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STRING_OPTION(EnumType,  THIS->enumType)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1075:3: note: ')' token is here
  STRING_OPTION(EnumType,  THIS->enumType)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/option.c:1034:11: note: expanded from macro 'STRING_OPTION'
          HV_STORE_CONST(hv, #name, sv);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1078:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "Bitfields", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1078:3: note: '{' token is here
  HV_STORE_CONST(hv, "Bitfields", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1078:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "Bitfields", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1078:3: note: ')' token is here
  HV_STORE_CONST(hv, "Bitfields", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1133:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "PointerSize",       newSViv(CTLIB_POINTER_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1133:5: note: '{' token is here
    HV_STORE_CONST(h, "PointerSize",       newSViv(CTLIB_POINTER_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1133:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "PointerSize",       newSViv(CTLIB_POINTER_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1133:5: note: ')' token is here
    HV_STORE_CONST(h, "PointerSize",       newSViv(CTLIB_POINTER_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1134:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "IntSize",           newSViv(CTLIB_int_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1134:5: note: '{' token is here
    HV_STORE_CONST(h, "IntSize",           newSViv(CTLIB_int_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1134:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "IntSize",           newSViv(CTLIB_int_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1134:5: note: ')' token is here
    HV_STORE_CONST(h, "IntSize",           newSViv(CTLIB_int_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1135:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "CharSize",          newSViv(CTLIB_char_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1135:5: note: '{' token is here
    HV_STORE_CONST(h, "CharSize",          newSViv(CTLIB_char_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1135:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "CharSize",          newSViv(CTLIB_char_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1135:5: note: ')' token is here
    HV_STORE_CONST(h, "CharSize",          newSViv(CTLIB_char_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1136:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "ShortSize",         newSViv(CTLIB_short_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1136:5: note: '{' token is here
    HV_STORE_CONST(h, "ShortSize",         newSViv(CTLIB_short_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1136:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "ShortSize",         newSViv(CTLIB_short_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1136:5: note: ')' token is here
    HV_STORE_CONST(h, "ShortSize",         newSViv(CTLIB_short_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1137:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongSize",          newSViv(CTLIB_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1137:5: note: '{' token is here
    HV_STORE_CONST(h, "LongSize",          newSViv(CTLIB_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1137:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongSize",          newSViv(CTLIB_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1137:5: note: ')' token is here
    HV_STORE_CONST(h, "LongSize",          newSViv(CTLIB_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1138:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongLongSize",      newSViv(CTLIB_long_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1138:5: note: '{' token is here
    HV_STORE_CONST(h, "LongLongSize",      newSViv(CTLIB_long_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1138:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongLongSize",      newSViv(CTLIB_long_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1138:5: note: ')' token is here
    HV_STORE_CONST(h, "LongLongSize",      newSViv(CTLIB_long_long_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1139:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "FloatSize",         newSViv(CTLIB_float_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1139:5: note: '{' token is here
    HV_STORE_CONST(h, "FloatSize",         newSViv(CTLIB_float_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1139:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "FloatSize",         newSViv(CTLIB_float_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1139:5: note: ')' token is here
    HV_STORE_CONST(h, "FloatSize",         newSViv(CTLIB_float_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1140:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "DoubleSize",        newSViv(CTLIB_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1140:5: note: '{' token is here
    HV_STORE_CONST(h, "DoubleSize",        newSViv(CTLIB_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1140:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "DoubleSize",        newSViv(CTLIB_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1140:5: note: ')' token is here
    HV_STORE_CONST(h, "DoubleSize",        newSViv(CTLIB_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1141:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongDoubleSize",    newSViv(CTLIB_long_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1141:5: note: '{' token is here
    HV_STORE_CONST(h, "LongDoubleSize",    newSViv(CTLIB_long_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1141:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "LongDoubleSize",    newSViv(CTLIB_long_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1141:5: note: ')' token is here
    HV_STORE_CONST(h, "LongDoubleSize",    newSViv(CTLIB_long_double_SIZE));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1142:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "Alignment",         newSViv(CTLIB_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1142:5: note: '{' token is here
    HV_STORE_CONST(h, "Alignment",         newSViv(CTLIB_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1142:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "Alignment",         newSViv(CTLIB_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1142:5: note: ')' token is here
    HV_STORE_CONST(h, "Alignment",         newSViv(CTLIB_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1143:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "CompoundAlignment", newSViv(CTLIB_COMPOUND_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1143:5: note: '{' token is here
    HV_STORE_CONST(h, "CompoundAlignment", newSViv(CTLIB_COMPOUND_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1143:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "CompoundAlignment", newSViv(CTLIB_COMPOUND_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1143:5: note: ')' token is here
    HV_STORE_CONST(h, "CompoundAlignment", newSViv(CTLIB_COMPOUND_ALIGNMENT));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1144:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "EnumSize",          newSViv(get_native_enum_size()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1144:5: note: '{' token is here
    HV_STORE_CONST(h, "EnumSize",          newSViv(get_native_enum_size()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1144:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "EnumSize",          newSViv(get_native_enum_size()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1144:5: note: ')' token is here
    HV_STORE_CONST(h, "EnumSize",          newSViv(get_native_enum_size()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1145:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "ByteOrder",         newSVpv(native_byteorder, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1145:5: note: '{' token is here
    HV_STORE_CONST(h, "ByteOrder",         newSVpv(native_byteorder, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1145:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "ByteOrder",         newSVpv(native_byteorder, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1145:5: note: ')' token is here
    HV_STORE_CONST(h, "ByteOrder",         newSVpv(native_byteorder, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1146:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "UnsignedChars",     newSViv(get_native_unsigned_chars()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1146:5: note: '{' token is here
    HV_STORE_CONST(h, "UnsignedChars",     newSViv(get_native_unsigned_chars()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1146:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "UnsignedChars",     newSViv(get_native_unsigned_chars()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1146:5: note: ')' token is here
    HV_STORE_CONST(h, "UnsignedChars",     newSViv(get_native_unsigned_chars()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1147:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "UnsignedBitfields", newSViv(get_native_unsigned_bitfields()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1147:5: note: '{' token is here
    HV_STORE_CONST(h, "UnsignedBitfields", newSViv(get_native_unsigned_bitfields()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1147:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "UnsignedBitfields", newSViv(get_native_unsigned_bitfields()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1147:5: note: ')' token is here
    HV_STORE_CONST(h, "UnsignedBitfields", newSViv(get_native_unsigned_bitfields()));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1148:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "StdCVersion",       STD_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1148:5: note: '{' token is here
    HV_STORE_CONST(h, "StdCVersion",       STD_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1148:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "StdCVersion",       STD_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1148:5: note: ')' token is here
    HV_STORE_CONST(h, "StdCVersion",       STD_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/option.c:1149:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "HostedC",           HOSTED_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/option.c:1149:5: note: '{' token is here
    HV_STORE_CONST(h, "HostedC",           HOSTED_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/option.c:1149:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(h, "HostedC",           HOSTED_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/option.c:1149:5: note: ')' token is here
    HV_STORE_CONST(h, "HostedC",           HOSTED_C_NATIVE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hIn file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:268    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
5:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
 note: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */')' token is here
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here

    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note:     ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);expanded from macro 'ZAPHOD32_FINALIZE'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);} STMT_END
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )

                        ^
  ^~~~~~~~
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \667
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:21#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
:    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d); 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
note: #define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \expanded from macro 'STMT_END'
                                                ^

#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
In file included from cbc/sourcify.c:21:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hIn file included from :163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
3921    v ^= (v>>23);                       \:

                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
In file included from     ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
                        ^
:In file included from 663cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:35:
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \1448
                                                ^
:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h        SBOX32_MIX3(s0,s1,s2,"SEED STATE");:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here

    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hIn file included from :cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
99:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
36: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
note: expanded from macro 'SBOX32_MIX3'#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h9:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");note: 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \'{' token is here
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from         SBOX32_MIX3(s0,s1,s2,"SEED STATE");cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:99#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
47:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
 note: #define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \expanded from macro 'SBOX32_MIX3'
                                               ^

#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:1448#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
:    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
1448:9    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     ):
                        ^
 note: In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");In file included from 
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
cbc/sourcify.c:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
                        ^
:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
:1393:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
35: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
note: expanded from macro 'XORSHIFT96_set'            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:1456            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
:    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
5            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     ):
                        ^
 note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
1456:#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
5:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
     ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^

    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here

    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
:96:#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
37:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */ 
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
note:         SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:97        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
:    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
3        SBOX32_MIX3(s0,s1,s2,"SEED STATE");:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
 note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hcbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:667            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
:21#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */note: 
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
expanded from macro 'STMT_END'            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */In file included from 
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
cbc/sourcify.c    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
:21#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
:663    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
:
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )In file included from 
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
In file included from                                      ^~~~~~~~~~cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:666:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
29:        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
 note: #define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
:1399:49: note: expanded from macro 'XORSHIFT128_set'
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'

#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \                                                ^
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:1487            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
:13    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
:             XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )warning: 
                        ^
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'

#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
In file included from } STMT_ENDcbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

  ^~~~~~~~    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'

#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
667:    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));21
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
:#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \ 
                                              ^
note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from     ,SIPROUND;SIPROUND;SIPROUND;
cbc/sourcify.c                       ^~~~~~~~:
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h180::6633:
: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'SIPROUND'107
:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]  } STMT_END

  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:  ^~~~~~~~~~~~~~~~91
:43:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 275expanded from macro '_PERL_HASH_SEED_STATE':
24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5:#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \ 
note:                                           ^~~~~~~~~~expanded from macro 'SIPROUND'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:  } STMT_END666
:    ^~~~~~~~29
: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
3                              ^:
 note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;In file included from 
cbc/sourcify.c     ^~~~~~~~:
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::663180:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h5::274 :note: 6expanded from macro 'SIPROUND':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:    ,SIPROUND;21
:     ^~~~~~~~ 
note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175#   define STMT_END     ):
3                        ^:
 note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:     SIP_ROUNDS;                             \note: 
expanded from macro 'STMT_START'    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;219
:              ^~~~~~~~5
: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
  STMT_START {              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:  ^~~~~~~~~~274
:6: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h'{' token is here:
666:29: note: expanded from macro 'STMT_START'
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
  STMT_START {              \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h             ^:
219:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'PERL_SIPHASH_FNC'219
:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    SIP_ROUNDS;                             \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:    ^~~~~~~~~~280
:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~  } STMT_END

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::667180::213::  note: note: expanded from macro 'STMT_END'expanded from macro 'SIPROUND'

  } STMT_END
  ^
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::5219:: 5note: :expanded from macro 'PERL_SIPHASH_FNC' 
note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h274::6280:: 6note: :'{' token is here 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
    ,SIPROUND;SIPROUND;
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h     ^~~~~~~~:
175:14: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:  STMT_START {              \3
:  ^~~~~~~~~~ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h275::2386::3 :warning:  '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]note: 
expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~  SIP_ROUNDS;                               \

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::6175:: 3note: :')' token is here 
note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~  STMT_START {              \

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::29180:: 5note: :expanded from macro 'STMT_START' 
note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h#   define STMT_END     ):
244                        ^:
3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:  SIP_ROUNDS;                               \6
:  ^~~~~~~~~~ 
note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;SIPROUND;280
:     ^~~~~~~~15
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
  STMT_START {              \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h             ^:
175:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'SIPROUND'244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29  SIP_FINAL_ROUNDS                          \:
   ^~~~~~~~~~~~~~~~note: 
expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */281
:                              ^6
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h180::2753::15 :note:  expanded from macro 'SIPROUND'note: 
'{' token is here
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:    ,SIPROUND;SIPROUND;SIPROUND;3
:              ^~~~~~~~ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  STMT_START {              \:
281             ^:
6: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h15::275 :note: 15'{' token is here:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~    ,SIPROUND;SIPROUND;SIPROUND;

              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h14::180 :note: 3expanded from macro 'SIPROUND':
 note: expanded from macro 'SIPROUND'
  } STMT_END
  ^  STMT_START {              \

             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3244:: 3note: :expanded from macro 'PERL_SIPHASH_FNC' 
note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  SIP_FINAL_ROUNDS                          \  ^~~~~~~~~~~~~~~~

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
                       ^~~~~~~~:
281:15: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'PERL_SIPHASH_FNC':
180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^  SIP_FINAL_ROUNDS                          \

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :note: 275expanded from macro 'STMT_START':
24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::180244::33::  note: note: expanded from macro 'PERL_SIPHASH_FNC'expanded from macro 'SIPROUND'

  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244  SIP_FINAL_ROUNDS                          \:
3  ^~~~~~~~~~~~~~~~:
 note: expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:281:24: note: '{' token is here
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:
24                       ^~~~~~~~:
 note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 244note: :expanded from macro 'SIPROUND'3
: note: expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'  SIP_FINAL_ROUNDS                          \

  ^~~~~~~~~~~~~~~~
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/pack.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/pack.c:292:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Unsupported floating point type '%s' in pack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:292:5: note: '{' token is here
    WARN((aTHX_ "Unsupported floating point type '%s' in pack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:292:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Unsupported floating point type '%s' in pack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:292:5: note: ')' token is here
    WARN((aTHX_ "Unsupported floating point type '%s' in pack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:300:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:248:9: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:300:5: note: '{' token is here
    STORE_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:248:20: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:300:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:266:9: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
        ^
cbc/pack.c:300:5: note: ')' token is here
    STORE_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:266:11: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:302:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:248:9: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:302:5: note: '{' token is here
    STORE_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:248:20: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:302:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:266:9: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
        ^
cbc/pack.c:302:5: note: ')' token is here
    STORE_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:266:11: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:305:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:248:9: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:305:5: note: '{' token is here
    STORE_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:248:20: note: expanded from macro 'STORE_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:305:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STORE_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:266:9: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
        ^
cbc/pack.c:305:5: note: ')' token is here
    STORE_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:266:11: note: expanded from macro 'STORE_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:308:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Cannot pack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:308:5: note: '{' token is here
    WARN((aTHX_ "Cannot pack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:308:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Cannot pack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:308:5: note: ')' token is here
    WARN((aTHX_ "Cannot pack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:405:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Unsupported floating point type '%s' in unpack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:405:5: note: '{' token is here
    WARN((aTHX_ "Unsupported floating point type '%s' in unpack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:405:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Unsupported floating point type '%s' in unpack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:405:5: note: ')' token is here
    WARN((aTHX_ "Unsupported floating point type '%s' in unpack", SvPV_nolen(str)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:413:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:359:9: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:413:5: note: '{' token is here
    FETCH_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:359:20: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:413:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:377:9: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
        ^
cbc/pack.c:413:5: note: ')' token is here
    FETCH_FLOAT(float);
    ^~~~~~~~~~~~~~~~~~
cbc/pack.c:377:11: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:415:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:359:9: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:415:5: note: '{' token is here
    FETCH_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:359:20: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:415:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:377:9: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
        ^
cbc/pack.c:415:5: note: ')' token is here
    FETCH_FLOAT(double);
    ^~~~~~~~~~~~~~~~~~~
cbc/pack.c:377:11: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:418:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:359:9: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:418:5: note: '{' token is here
    FETCH_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:359:20: note: expanded from macro 'FETCH_FLOAT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:418:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    FETCH_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:377:9: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
        ^
cbc/pack.c:418:5: note: ')' token is here
    FETCH_FLOAT(long double);
    ^~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:377:11: note: expanded from macro 'FETCH_FLOAT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:421:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Cannot unpack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:421:5: note: '{' token is here
    WARN((aTHX_ "Cannot unpack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:421:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    WARN((aTHX_ "Cannot unpack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:421:5: note: ')' token is here
    WARN((aTHX_ "Cannot unpack %d byte floating point values", size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:735:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:735:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:735:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:735:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:735:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:735:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:735:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:735:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:782:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:782:5: note: '{' token is here
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:782:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:782:5: note: ')' token is here
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:796:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:796:7: note: '{' token is here
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
In file included from cbc/sourcify.c#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
:21:
        STMT_START {                                                           \
                   ^
In file included from cbc/pack.c:796:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
:6161#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
:2209:        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
5: #  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:796:7: note: '{' token is here
warning:       IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \    CX_POP_SAVEARRAY(cx);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'

    ^~~~~~~~~~~~~~~~~~~~        STMT_START {                                                           \
                   ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
cbc/pack.c:796:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/pack.c:796:7: note: ')' token is here
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:796:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/pack.c:796:7: note: ')' token is here
      IDLP_PUSH(ID);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'cbc/pack.c:846:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

          FOLLOW_AND_CHECK_TSPTR(pTS);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
#   define STMT_END     )        STMT_START {                                                           \

        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
                        ^
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:846:11: note: '{' token is here
          FOLLOW_AND_CHECK_TSPTR(pTS);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:292:20: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        STMT_START {                                                           \
                   ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:cbc/pack.c:846:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
6161:
          FOLLOW_AND_CHECK_TSPTR(pTS);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
        ^
cbc/pack.c:846:11: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h          FOLLOW_AND_CHECK_TSPTR(pTS);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:11: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      ):
                        ^
2215:9cbc/pack.c:848:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_POP;:
          ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
 warning: #define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:848:11: note: '{' token is here
          IDLP_POP;
          ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/sourcify.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/pack.c:848:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_POP;
          ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/pack.c:848:11: note: ')' token is here
          IDLP_POP;
          ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:855:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:855:11: note: '{' token is here
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/pack.c:855:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:855:11: note: '{' token is here
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/pack.c:855:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/pack.c:855:11: note: ')' token is here
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:855:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/pack.c:855:11: note: ')' token is here
          IDLP_PUSH(ID);
          ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:859:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:859:7: note: '{' token is here
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/pack.c:859:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/pack.c:859:7: note: ')' token is here
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:862:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a hash reference",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:862:7: note: '{' token is here
      WARN((aTHX_ "'%s' should be a hash reference",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:862:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a hash reference",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:862:7: note: ')' token is here
      WARN((aTHX_ "'%s' should be a hash reference",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:909:5: note: '{' token is here
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:909:5: note: ')' token is here
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:914:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:914:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:914:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:914:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:914:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:914:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:914:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:914:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:936:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            WARN((aTHX_ "Enumerator value '%s' is unsafe", str));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:936:13: note: '{' token is here
            WARN((aTHX_ "Enumerator value '%s' is unsafe", str));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:936:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            WARN((aTHX_ "Enumerator value '%s' is unsafe", str));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:936:13: note: ')' token is here
            WARN((aTHX_ "Enumerator value '%s' is unsafe", str));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:991:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:991:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:991:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:991:3: note: '{' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:991:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:991:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:991:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:991:3: note: ')' token is here
  GROW_BUFFER(size, "insufficient space");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1034:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1034:5: note: '{' token is here
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1034:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1034:5: note: '{' token is here
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1034:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1034:5: note: ')' token is here
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1034:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1034:5: note: ')' token is here
    GROW_BUFFER(size, "insufficient space");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1056:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1056:7: note: '{' token is here
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1056:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1056:7: note: '{' token is here
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1056:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1056:7: note: ')' token is here
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1056:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1056:7: note: ')' token is here
      GROW_BUFFER(size, "incomplete array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1089:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "Source string \"%s\" is longer (%u byte%s) than '%s'"
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1089:7: note: '{' token is here
      WARN((aTHX_ "Source string \"%s\" is longer (%u byte%s) than '%s'"
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1089:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "Source string \"%s\" is longer (%u byte%s) than '%s'"
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1089:7: note: ')' token is here
      WARN((aTHX_ "Source string \"%s\" is longer (%u byte%s) than '%s'"
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1166:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1166:5: note: '{' token is here
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:1166:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:1166:5: note: ')' token is here
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1195:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
cbc/sourcify.c:194:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:194:7: note: '{' token is here
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:20: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
                   ^
cbc/sourcify.c:194:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:194:7: note: '{' token is here
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:194:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:194:7: note: ')' token is here
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:194:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
        ^
cbc/sourcify.c:194:7: note: ')' token is here
      CHECK_SET_KEYWORD;
      ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:11: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:207:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:207:9: note: '{' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:20: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
                   ^
cbc/sourcify.c:207:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:207:9: note: '{' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:207:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:207:9: note: ')' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:207:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
        ^
cbc/sourcify.c:207:9: note: ')' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:11: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:223:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:223:9: note: '{' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:20: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
                   ^
cbc/sourcify.c:223:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:223:9: note: '{' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:223:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:223:9: note: ')' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:223:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
        ^
cbc/sourcify.c:223:9: note: ')' token is here
        CHECK_SET_KEYWORD;
        ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:11: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:233:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:233:5: note: '{' token is here
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:53:20: note: expanded from macro 'CHECK_SET_KEYWORD'
        STMT_START {                     \
                   ^
cbc/sourcify.c:233:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:233:5: note: '{' token is here
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:233:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:233:5: note: ')' token is here
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:57:13: note: expanded from macro 'CHECK_SET_KEYWORD'
            SRC_INDENT;                  \
            ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:233:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:9: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
        ^
cbc/sourcify.c:233:5: note: ')' token is here
    CHECK_SET_KEYWORD;
    ^~~~~~~~~~~~~~~~~
cbc/sourcify.c:60:11: note: expanded from macro 'CHECK_SET_KEYWORD'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:262:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SvGROW_early(s, SVG_ENUM);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:63:9: note: expanded from macro 'SvGROW_early'
        STMT_START {                                   \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:262:3: note: '{' token is here
  SvGROW_early(s, SVG_ENUM);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:63:20: note: expanded from macro 'SvGROW_early'
        STMT_START {                                   \
                   ^
cbc/sourcify.c:262:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SvGROW_early(s, SVG_ENUM);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:66:9: note: expanded from macro 'SvGROW_early'
        } STMT_END
        ^
cbc/sourcify.c:262:3: note: ')' token is here
  SvGROW_early(s, SVG_ENUM);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:66:11: note: expanded from macro 'SvGROW_early'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:281:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:281:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:281:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:281:5: note: ')' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:297:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:297:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:297:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:297:5: note: ')' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/sourcify.c:306:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SRC_INDENT;
      ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:306:7: note: '{' token is here
      SRC_INDENT;
      ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:306:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      SRC_INDENT;
      ^~~~~~~~~~
cbc/sourcify.c:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1195:9: note: '{' token is here
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1195:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1195:9: note: '{' token is here
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1195:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1195:9: note: ')' token is here
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1195:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1195:9: note: ')' token is here
        GROW_BUFFER(s*size, "dimension tag");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1201:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1201:9: note: '{' token is here
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1201:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1201:9: note: '{' token is here
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1201:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1201:9: note: ')' token is here
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1201:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1201:9: note: ')' token is here
        GROW_BUFFER(s*size, "incomplete array type");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1206:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1206:7: note: '{' token is here
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/pack.c:1206:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1206:7: note: '{' token is here
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/pack.c:1206:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/pack.c:1206:7: note: ')' token is here
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1206:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/pack.c:1206:7: note: ')' token is here
      IDLP_PUSH(IX);
      ^~~~~~~~~~~~~
cbc/pack.c:92:30: note: expanded from macro 'IDLP_PUSH'
#define IDLP_PUSH(what)      IDLIST_PUSH(&(PACK->idl), what)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1226:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:9: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1226:7: note: '{' token is here
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:70:20: note: expanded from macro 'IDLIST_POP'
        STMT_START {                                                           \
                   ^
cbc/pack.c:1226:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:9: note: expanded from macro 'IDLIST_POP'
        } STMT_END
        ^
cbc/pack.c:1226:7: note: ')' token is here
      IDLP_POP;
      ^~~~~~~~
cbc/pack.c:93:30: note: expanded from macro 'IDLP_POP'
#define IDLP_POP             IDLIST_POP(&(PACK->idl))
                             ^~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:76:11: note: expanded from macro 'IDLIST_POP'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1231:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1231:9: note: '{' token is here
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1231:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1231:9: note: ')' token is here
        WARN((aTHX_ "'%s' should be an array reference",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1238:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:11: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1238:7: note: '{' token is here
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:75:22: note: expanded from macro 'GROW_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1238:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:2: note: expanded from macro 'SvCUR_set'
        STMT_START { \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1238:7: note: '{' token is here
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1338:13: note: expanded from macro 'SvCUR_set'
        STMT_START { \
                   ^
cbc/pack.c:1238:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:43: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                        ^
cbc/pack.c:1238:7: note: ')' token is here
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:82:15: note: expanded from macro 'GROW_BUFFER'
              SvCUR_set(PACK->bufsv, _required_);                              \
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:1343:45: note: expanded from macro 'SvCUR_set'
                (((XPV*)  SvANY(sv))->xpv_cur = (val)); } STMT_END
                                                          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1238:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:11: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1238:7: note: ')' token is here
      GROW_BUFFER(size, "insufficient space");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:86:13: note: expanded from macro 'GROW_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1246:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1246:7: note: '{' token is here
In file included from       WARN((aTHX_ "'%s' should be a scalar value",
cbc/tag.c      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
21:
./cbc/cbc.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h225::392131:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hnote: :expanded from macro 'WARN'663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
cbc/pack.c#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
:                              ^1246
:7: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hwarning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]150
:5: note: '{' token is here
      WARN((aTHX_ "'%s' should be a scalar value",    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h./cbc/cbc.h::22580::7149::  note: note: expanded from macro 'WARN'expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1246:7: note: ')' token is here
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:                        ^150
:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
cbc/pack.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::1263151::75::  warning: note: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]'{' token is here

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);      WARN_UNDEF_STRUCT(pStruct);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      ^~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: ./cbc/cbc.hnote: :expanded from macro 'ZAPHOD32_SCRAMBLE32'244
:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:151:cbc/pack.c5::1263 :warning: 7'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: '{' token is here
      WARN_UNDEF_STRUCT(pStruct);
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);      ^~~~~~~~~~~~~~~~~~~~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h./cbc/cbc.h::87244::4111::  note: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'expanded from macro 'WARN_UNDEF_STRUCT'

    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5:           WARN((aTHX_ "Got no definition for '%s %s'",                         \note: 
')' token is here          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END} STMT_END

                              ^  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
cbc/pack.c:1263:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71:    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d); 
note:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'WARN'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
cbc/pack.c:1263:7: note: ')' token is here
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#  define STMT_END      )87
:                        ^41
: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5:cbc/pack.c warning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]1270
:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::225116::2037::  note: note: expanded from macro 'WARN'expanded from macro 'ZAPHOD32_MIX'

#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                   ^~~~~~~~~~                                    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h./ppport.h::6663813::2928::  note: note: expanded from macro 'STMT_START'expanded from macro 'STMT_START'

#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hcbc/pack.c::1561270::57::  note: note: '{' token is here'{' token is here

      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");:
31    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'WARN'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
cbc/pack.c:1270:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1270:7: note: ')' token is here
      WARN((aTHX_ "'%s' should be a scalar value",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5cbc/pack.c: :note: 1308'{' token is here:
3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");:
66    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
11: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'CHECK_BUFFER':
116:48: note: expanded from macro 'ZAPHOD32_MIX'
          STMT_START {                                                         \
          ^~~~~~~~~~
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \./ppport.h
:                                               ^3813
:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1308:3: note: '{' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:22: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1308:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:11: note: expanded from macro 'CHECK_BUFFER'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning:           } STMT_END'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

          ^
cbc/pack.c:1308:3: note: ')' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~cbc/pack.c
:72:13/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:: 124note: :expanded from macro 'CHECK_BUFFER'32
: note: expanded from macro 'ZAPHOD32_MIX'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814    v2 = ROTR32(v2, 7) ^ v0;   \:
20                               ^:
 note: expanded from macro 'STMT_END'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:157:5: note: ')' token is here
#  define STMT_END      )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
cbc/pack.c:1357:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5:          STMT_START {                                                        \ 
warning:           ^~~~~~~~~~'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */:
124                              ^:
32: note: cbc/pack.cexpanded from macro 'ZAPHOD32_MIX':
1357:5: note: '{' token is here
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    SET_BYTEORDER(pStruct->tags);:
158    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~:
5: note: cbc/pack.c')' token is here:
104:22: note: expanded from macro 'SET_BYTEORDER'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          STMT_START {                                                        \
                     ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
cbc/pack.c:1357:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    SET_BYTEORDER(pStruct->tags);:
666    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~:
29: note: cbc/pack.cexpanded from macro 'STMT_START':
121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:1357:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */5
:                              ^ 
note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    SET_BYTEORDER(pStruct->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~          } STMT_END

            ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:./ppport.h48::3814 :note: 20expanded from macro 'ZAPHOD32_MIX':
 note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/pack.c:1367:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:  XCPT_TRY_START32
:  ^~~~~~~~~~~~~~ 
note: expanded from macro 'ZAPHOD32_MIX'
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
50:9: note: expanded from macro 'SRC_INDENT'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3:         } STMT_ENDnote: 
expanded from macro 'ZAPHOD32_MIX'        ^

} STMT_ENDcbc/sourcify.c
:  ^~~~~~~~306
:7: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :')' token is here667
:21: note: expanded from macro 'STMT_END'
      SRC_INDENT;
      ^~~~~~~~~~
#   define STMT_END     )
                        ^cbc/sourcify.c
:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:In file included from 3814cbc/tag.c::2021::
 In file included from note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'STMT_END':
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
#  define STMT_END      )In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h                        ^:
4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
cbc/sourcify.c:321:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);321
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5
: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note:     SRC_INDENT;expanded from macro 'ZAPHOD32_SCRAMBLE32'

    ^~~~~~~~~~
cbc/sourcify.c:} STMT_END47
:  ^~~~~~~~20
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hexpanded from macro 'SRC_INDENT':
667:21: note: expanded from macro 'STMT_END'
        STMT_START {                     \
#   define STMT_END     )                   ^

                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163cbc/sourcify.c:5::321 :warning: 5'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);:
9    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'SRC_INDENT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note:         } STMT_ENDexpanded from macro 'ZAPHOD32_SCRAMBLE32'

        ^
cbc/sourcify.c:321:5: note: ')' token is here
    SRC_INDENT;#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \

    ^~~~~~~~~~                                     ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hcbc/sourcify.c::66650::2911::  note: note: expanded from macro 'STMT_START'expanded from macro 'SRC_INDENT'

        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#  define STMT_END      )163
:                        ^5
: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::35587::341::  warning: note: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]expanded from macro 'ZAPHOD32_SCRAMBLE32'

  SvGROW_early(s, SVG_STRUCT);
    v ^= (v>>23);                       \  ^~~~~~~~~~~~~~~~~~~~~~~~~~~

                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:cbc/sourcify.c163::635::9 :note:  ')' token is herenote: 
expanded from macro 'SvGROW_early'
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        STMT_START {                                   \
        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:./ppport.h3::3813 :note: 28expanded from macro 'ZAPHOD32_SCRAMBLE32':
 note: expanded from macro 'STMT_START'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
#   define STMT_END     )                              ^

                        ^
cbc/sourcify.c:355:3: note: '{' token is here
In file included from cbc/tag.c:21:
In file included from   SvGROW_early(s, SVG_STRUCT);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:  ^~~~~~~~~~~~~~~~~~~~~~~~~~~3921
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:cbc/sourcify.c663::
63In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h20::35 :
note: In file included from expanded from macro 'SvGROW_early'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        STMT_START {                                   \
                   ^
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
cbc/sourcify.c:355:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h  SvGROW_early(s, SVG_STRUCT);:
164  ^~~~~~~~~~~~~~~~~~~~~~~~~~~:
5: warning: cbc/sourcify.c'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
66:9: note: expanded from macro 'SvGROW_early'
        } STMT_END
        ^
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
cbc/sourcify.c    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
355:3:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h :note: 87')' token is here:
41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
  SvGROW_early(s, SVG_STRUCT);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/sourcify.c:    v ^= (v>>23);                       \66
:                                        ^11
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hexpanded from macro 'SvGROW_early':
164:5: note: ')' token is here
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  define STMT_END      )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:                        ^88
:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
cbc/sourcify.c:389:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:389:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/sourcify.c    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");:
389    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
5: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
124:32: note: expanded from macro 'ZAPHOD32_MIX'
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:9:    v2 = ROTR32(v2, 7) ^ v0;   \ 
note:                                ^expanded from macro 'SRC_INDENT'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note:         } STMT_END')' token is here

        ^
cbc/sourcify.c:389:5: note: ')' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");:
50    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
11: note: expanded from macro 'SRC_INDENT'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
        } STMT_END
          ^~~~~~~~
} STMT_END./ppport.h
:  ^~~~~~~~3814
:20:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note: 667expanded from macro 'STMT_END':
21: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
cbc/sourcify.c:407:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \    ^~~~~~~~~~

                                               ^
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:407:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:407:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:407:5: note: ')' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:./ppport.h5::3814 :warning: 20'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
cbc/sourcify.c:480:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:9: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/sourcify.c:480:5: note: '{' token is here
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:47:20: note: expanded from macro 'SRC_INDENT'
        STMT_START {                     \
                   ^
cbc/sourcify.c:480:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SRC_INDENT;
    ^~~~~~~~~~
cbc/sourcify.c:50:9: note: expanded from macro 'SRC_INDENT'
        } STMT_END
        ^
cbc/sourcify.c:480:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:    SRC_INDENT;5
:    ^~~~~~~~~~ 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/sourcify.c:50:11: note: expanded from macro 'SRC_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");:
20    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
#  define STMT_END      )
                        ^
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
        v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1367:3: note: '{' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1367:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1367:3: note: ')' token is here
  XCPT_TRY_START
  ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1387:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Member '%s' used more than once in %s%s%s defined in %s(%ld)",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1387:15: note: '{' token is here
              WARN((aTHX_ "Member '%s' used more than once in %s%s%s defined in %s(%ld)",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1387:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
              WARN((aTHX_ "Member '%s' used more than once in %s%s%s defined in %s(%ld)",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1387:15: note: ')' token is here
              WARN((aTHX_ "Member '%s' used more than once in %s%s%s defined in %s(%ld)",
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
cbc/pack.c:1420:17: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
                SvSETMAGIC(value);
                ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:23: note: #define STADTX_SCRAMBLE64(v,prime) STMT_START {    \expanded from macro 'SvSETMAGIC'

                                              ^
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                      ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1420:17: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:                SvSETMAGIC(value);113
:                ^~~~~~~~~~~~~~~~~5
: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
2144:34: note: expanded from macro 'SvSETMAGIC'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END45
:                                 ^ 
note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hcbc/pack.c::39211420:
:In file included from 17/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:: 663warning: :
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                SvSETMAGIC(value);
                ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:76: note: expanded from macro 'SvSETMAGIC'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                           ^
cbc/pack.c:1420:17: note: ')' token is here#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \

                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'                SvSETMAGIC(value);

                ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sv.h:2144:78: note: expanded from macro 'SvSETMAGIC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
#define SvSETMAGIC(x) STMT_START { if (UNLIKELY(SvSMAGICAL(x))) mg_set(x); } STMT_END
                                                                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:#  define STMT_END      )72
:                        ^47
: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::791432::459::  note: warning: expanded from macro 'STADTX_SCRAMBLE64''(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        FOLLOW_AND_CHECK_TSPTR(pTS);
    v ^= (v >> 46);                         \        ^~~~~~~~~~~~~~~~~~~~~~~~~~~

                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:./cbc/cbc.h5::292 :note: 9')' token is here:
 note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        STMT_START {                                                           \
        ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80./ppport.h::33813:: 28note: :expanded from macro 'STADTX_SCRAMBLE64' 
note: expanded from macro 'STMT_START'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
#   define STMT_END     )
                        ^cbc/pack.c
:1432:9: note: '{' token is here
        FOLLOW_AND_CHECK_TSPTR(pTS);In file included from 
cbc/tag.c        ^~~~~~~~~~~~~~~~~~~~~~~~~~~:
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h./cbc/cbc.h::3921292:
:20In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h :note: 663expanded from macro 'FOLLOW_AND_CHECK_TSPTR':

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        STMT_START {                                                           \
                   ^
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
cbc/pack.c:1432:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
        FOLLOW_AND_CHECK_TSPTR(pTS);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:315:9: note: expanded from macro 'FOLLOW_AND_CHECK_TSPTR'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~        } STMT_END

        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hcbc/pack.c::801432::39::  note: note: expanded from macro 'STADTX_SCRAMBLE64'')' token is here

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:        FOLLOW_AND_CHECK_TSPTR(pTS);21
:        ^~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'STMT_END'
./cbc/cbc.h:315:11: note: #   define STMT_END     )expanded from macro 'FOLLOW_AND_CHECK_TSPTR'

                        ^
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: In file included from expanded from macro 'STMT_END'cbc/tag.c
:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h#  define STMT_END      ):
663                        ^:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
cbc/pack.c:1441:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  XCPT_TRY_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h  ^~~~~~~~~~~~:
72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1441:3: note: '{' token is here
  XCPT_TRY_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:  ^~~~~~~~~~~~116
:5: ./ppport.hwarning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]6659
:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h
:131:16/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 79note: :expanded from macro 'JMPENV_POP'45
: note: expanded from macro 'STADTX_SCRAMBLE64'
    STMT_START {                                                        \
               ^
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: cbc/pack.cexpanded from macro 'STMT_END'
:1441:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_END     )
                        ^
  XCPT_TRY_END
  ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'In file included from 
cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
#    define XCPT_TRY_END      JMPENV_POP;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:                              ^~~~~~~~~~117
:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.hwarning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]140
:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1441:3: note:     STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));')' token is here

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72  XCPT_TRY_END:
36  ^~~~~~~~~~~~:
 note: expanded from macro 'STADTX_SCRAMBLE64'
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#    define XCPT_TRY_END      JMPENV_POP;666
:                              ^~~~~~~~~~29
: note: expanded from macro 'STMT_START'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h
:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */note: 
expanded from macro 'STMT_END'                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: #  define STMT_END      )'{' token is here

                        ^
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79cbc/pack.c:45::1453 :note: 5expanded from macro 'STADTX_SCRAMBLE64':
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_RETHROW;
    ^~~~~~~~~~~~    v ^= (v >> 46);                         \

                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117./ppport.h::56661:: 31note: :')' token is here 
note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h
:143:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h :note: 80expanded from macro 'JMPENV_JUMP':
3: note: expanded from macro 'STADTX_SCRAMBLE64'
    STMT_START {                                                \} STMT_END

    ^~~~~~~~~~  ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h./ppport.h::6673813::2128::  note: note: expanded from macro 'STMT_END'expanded from macro 'STMT_START'

#   define STMT_END     )
                        ^
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1453:5: note: '{' token is hereIn file included from 
cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from     XCPT_RETHROW;/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:    ^~~~~~~~~~~~663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
./ppport.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::6661118::315::  note: warning: expanded from macro 'XCPT_RETHROW''(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));143
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~16
: note: expanded from macro 'JMPENV_JUMP'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
    STMT_START {                                                \
               ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/pack.c:1453:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:    XCPT_RETHROW;45
:    ^~~~~~~~~~~~ 
note: expanded from macro 'STADTX_SCRAMBLE64'
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));    ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:1453:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h5::80 :note: 3')' token is here:
 note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END    XCPT_RETHROW;

  ^~~~~~~~    ^~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: ./ppport.hexpanded from macro 'STMT_END':
6661:31: note: expanded from macro 'XCPT_RETHROW'
#   define STMT_END     )
                        ^
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: In file included from expanded from macro 'JMPENV_JUMP'cbc/tag.c
:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921    } STMT_END:

In file included from       ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:663:
In file included from ./ppport.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::381455::
20/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 119note: :expanded from macro 'STMT_END'5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#  define STMT_END      )
                        ^
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
cbc/pack.c:1465:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    XCPT_TRY_START/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:    ^~~~~~~~~~~~~~72
:47: note: expanded from macro 'STADTX_SCRAMBLE64'
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1465:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5:     XCPT_TRY_STARTwarning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ^~~~~~~~~~~~~~

./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0):
                               ^~~~~~~~~~~~~~~~~note: 
expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    v ^= (v >> 46);                         \
    STMT_START {                                                        \                                            ^

               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
cbc/pack.c:1465:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h128::1205::5 :note:  expanded from macro 'JMPENV_PUSH'warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } STMT_END
    ^
cbc/pack.c:1465:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    XCPT_TRY_START:
79    ^~~~~~~~~~~~~~:
45: note: expanded from macro 'STADTX_SCRAMBLE64'
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./ppport.h:3814:20/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 80note: :expanded from macro 'STMT_END'3
: note: expanded from macro 'STADTX_SCRAMBLE64'
#  define STMT_END      )
} STMT_END                        ^

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/pack.c:1470:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1470:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1470:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1470:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1476:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1476:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1476:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1476:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/pack.c:1525:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1525:5: note: '{' token is here
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:1525:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:1525:5: note: ')' token is here
    SET_BYTEORDER(pEnumSpec->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1528:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:11: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1528:3: note: '{' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:22: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1528:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:11: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1528:3: note: ')' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:13: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1563:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Enumeration '%s' contains unsafe values",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1563:9: note: '{' token is here
        WARN((aTHX_ "Enumeration '%s' contains unsafe values",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1563:9: In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Enumeration '%s' contains unsafe values",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1563:9: note: ')' token is here
        WARN((aTHX_ "Enumeration '%s' contains unsafe values",
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1566:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Enumeration contains unsafe values"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1566:9: note: '{' token is here
        WARN((aTHX_ "Enumeration contains unsafe values"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1566:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        WARN((aTHX_ "Enumeration contains unsafe values"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1566:9: note: ')' token is here
        WARN((aTHX_ "Enumeration contains unsafe values"));
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1602:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1602:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1602:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1602:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1607:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1607:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1607:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1607:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1613:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1613:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1613:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1613:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1648:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:11: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1648:3: note: '{' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:66:22: note: expanded from macro 'CHECK_BUFFER'
          STMT_START {                                                         \
                     ^
cbc/pack.c:1648:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:11: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
          ^
cbc/pack.c:1648:3: note: ')' token is here
  CHECK_BUFFER(size);
  ^~~~~~~~~~~~~~~~~~
cbc/pack.c:72:13: note: expanded from macro 'CHECK_BUFFER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1777:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:11: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
          ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1777:5: note: '{' token is here
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:104:22: note: expanded from macro 'SET_BYTEORDER'
          STMT_START {                                                        \
                     ^
cbc/pack.c:1777:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:11: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
          ^
cbc/pack.c:1777:5: note: ')' token is here
    SET_BYTEORDER(pDecl->tags);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/pack.c:121:13: note: expanded from macro 'SET_BYTEORDER'
          } STMT_END
            ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1795:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1795:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1795:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1795:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1834:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1834:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1834:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1834:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1840:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1840:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1840:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1840:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1854:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1854:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1854:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1854:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1858:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1858:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1858:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1858:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1864:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1864:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1864:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1864:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1880:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1880:7: note: '{' token is here
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/pack.c:1880:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/pack.c:1880:7: note: ')' token is here
      WARN_UNDEF_STRUCT(pStruct);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:244:11: note: expanded from macro 'WARN_UNDEF_STRUCT'
          WARN((aTHX_ "Got no definition for '%s %s'",                         \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1909:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1909:5: note: '{' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/pack.c:1909:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/pack.c:1909:5: note: ')' token is here
    XCPT_TRY_START
    ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1914:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1914:5: note: '{' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/pack.c:1914:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/pack.c:1914:5: note: ')' token is here
    XCPT_TRY_END
    ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:1920:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:1920:7: note: '{' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/pack.c:1920:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/pack.c:1920:7: note: ')' token is here
      XCPT_RETHROW;
      ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:2035:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_INIT(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:43:9: note: expanded from macro 'IDLIST_INIT'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:2035:3: note: '{' token is here
  IDLIST_INIT(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:43:20: note: expanded from macro 'IDLIST_INIT'
        STMT_START {                                                           \
                   ^
cbc/pack.c:2035:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_INIT(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:48:9: note: expanded from macro 'IDLIST_INIT'
        } STMT_END
        ^
cbc/pack.c:2035:3: note: ')' token is here
  IDLIST_INIT(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:48:11: note: expanded from macro 'IDLIST_INIT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:2036:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:9: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:2036:3: note: '{' token is here
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:57:20: note: expanded from macro 'IDLIST_PUSH'
        STMT_START {                                                           \
                   ^
cbc/pack.c:2036:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:9: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:2036:3: note: '{' token is here
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:32:20: note: expanded from macro 'IDLIST_GROW'
        STMT_START {                                                           \
                   ^
cbc/pack.c:2036:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:9: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
        ^
cbc/pack.c:2036:3: note: ')' token is here
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:58:11: note: expanded from macro 'IDLIST_PUSH'
          IDLIST_GROW(idl, (idl)->count+1);                                    \
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:40:11: note: expanded from macro 'IDLIST_GROW'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:2036:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:9: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
        ^
cbc/pack.c:2036:3: note: ')' token is here
  IDLIST_PUSH(&hdl->idl, ID);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:61:11: note: expanded from macro 'IDLIST_PUSH'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/pack.c:2105:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_FREE(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:51:9: note: expanded from macro 'IDLIST_FREE'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/pack.c:2105:3: note: '{' token is here
  IDLIST_FREE(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:51:20: note: expanded from macro 'IDLIST_FREE'
        STMT_START {                                                           \
                   ^
cbc/pack.c:2105:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  IDLIST_FREE(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:54:9: note: expanded from macro 'IDLIST_FREE'
        } STMT_END
        ^
cbc/pack.c:2105:3: note: ')' token is here
  IDLIST_FREE(&hdl->idl);
  ^~~~~~~~~~~~~~~~~~~~~~
./cbc/idl.h:54:11: note: expanded from macro 'IDLIST_FREE'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/tag.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/tag.c:384:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_START {
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:5: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/tag.c:384:7: note: '{' token is here
      XCPT_TRY_START {
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:114:16: note: expanded from macro 'JMPENV_PUSH'
    STMT_START {                                                        \
               ^
cbc/tag.c:384:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      XCPT_TRY_START {
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:5: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
    ^
cbc/tag.c:384:7: note: ')' token is here
      XCPT_TRY_START {
      ^~~~~~~~~~~~~~
./ppport.h:6658:31: note: expanded from macro 'XCPT_TRY_START'
#    define XCPT_TRY_START    JMPENV_PUSH(rEtV); if (rEtV == 0)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:128:7: note: expanded from macro 'JMPENV_PUSH'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/tag.c:386:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      } XCPT_TRY_END
        ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:5: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/tag.c:386:9: note: '{' token is here
      } XCPT_TRY_END
        ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:131:16: note: expanded from macro 'JMPENV_POP'
    STMT_START {                                                        \
               ^
cbc/tag.c:386:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      } XCPT_TRY_END
        ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:5: note: expanded from macro 'JMPENV_POP'
    } STMT_END
    ^
cbc/tag.c:386:9: note: ')' token is here
      } XCPT_TRY_END
        ^~~~~~~~~~~~
./ppport.h:6659:31: note: expanded from macro 'XCPT_TRY_END'
#    define XCPT_TRY_END      JMPENV_POP;
                              ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:140:7: note: expanded from macro 'JMPENV_POP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/tag.c:391:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:5: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/tag.c:391:9: note: '{' token is here
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:143:16: note: expanded from macro 'JMPENV_JUMP'
    STMT_START {                                                \
               ^
cbc/tag.c:391:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:5: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
    ^
cbc/tag.c:391:9: note: ')' token is here
        XCPT_RETHROW;
        ^~~~~~~~~~~~
./ppport.h:6661:31: note: expanded from macro 'XCPT_RETHROW'
#    define XCPT_RETHROW      JMPENV_JUMP(rEtV)
                              ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:155:7: note: expanded from macro 'JMPENV_JUMP'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
132 warnings generated.
mv sourcify.o tmpsourcify.o
mv tmpsourcify.o cbc/sourcify.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/type.c
104 warnings generated.
mv tag.o tmptag.o
mv tmptag.o cbc/tag.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/typeinfo.c
388 warnings generated.
mv option.o tmpoption.o
mv tmpoption.o cbc/option.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG cbc/util.c
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: note: expanded from macro 'SBOX32_MIX3'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108:3: note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: '{' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
In file included from         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: :9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:3721:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
: In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4note: expanded from macro 'SBOX32_MIX4'
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning:         v2 = ROTL32(v2, 4) - v0;    \
                                    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32':9: note: ')' token is here

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3:    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
 note: expanded from macro 'SBOX32_MIX4'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'} STMT_END
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END':151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: #   define STMT_END     )
                        ^
expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from cbc/type.c:21In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: :663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: :expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
13                                                ^
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: : warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41:note: expanded from macro 'XORSHIFT128_set'
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5:#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666 note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: :note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");29: note: expanded from macro 'STMT_START'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here

            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5:#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note: expanded from macro 'STMT_END'
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \#   define STMT_END     )
                        ^

In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                     ^~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:666#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
:29:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
 note: expanded from macro 'STMT_START'#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:150:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
 note:     ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
expanded from macro 'ZAPHOD32_MIX'    v ^= (v>>23);                       \
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

                                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
150:5#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
: note: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: '{' token is here
')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \    ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

                                               ^In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'

    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                        ^

                                                ^In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
     ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
87:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                               ^

                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:151:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[1],0xaa6f908d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
} STMT_END
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                               ^    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here

                                     ^~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
666    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: '{' token is here
                                     ^~~~~~~~~~    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: '{' token is here
152    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
                                                ^    v ^= (v>>23);                       \

                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:152:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);    ZAPHOD32_SCRAMBLE32(state[2],0xcdf6b72d);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
cbc/util.c    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
:    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                        ^    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'

#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                                    ^~~~~~~~~~    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
666    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
:29#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: ')' token is here
:    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
156In file included from :5: note: '{' token is here
cbc/typeinfo.c    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:21:
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
                               ^    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:156:5: note: ')' token is here

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 1/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
80:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'

#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
                                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
:5:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
 note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
:157:In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
5:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:157:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 2/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
:    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
125:3    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
: In file included from note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/typeinfo.c:In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
21:
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */4
:
                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:168/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::5158:: 5warning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro] 
note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::48116:: 37note: :expanded from macro 'ZAPHOD32_MIX' 
note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                                               ^                                    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:158:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 3/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h} STMT_END:
168  ^~~~~~~~:
5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hwarning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]667
:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: In file included from note: cbc/util.cexpanded from macro 'ZAPHOD32_MIX':
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35    v2 = ROTR32(v2, 7) ^ v0;   \:

In file included from                                ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::168159::55::  note: warning: ')' token is here'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h125::1163::37 :note:  expanded from macro 'ZAPHOD32_MIX'note: 
expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \

                        ^                                    ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
In file included from cbc/typeinfo.c#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
21                              ^:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3921::
159In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h5::663 :
note: In file included from '{' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:159:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE A 4/4");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h} STMT_END:
169  ^~~~~~~~:
5: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663    v2 = ROTR32(v2, 7) ^ v0;   \:

                               ^In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:
:In file included from 169/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::54::
 /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hnote: :')' token is here162
:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h3::80 :note: 38expanded from macro 'ZAPHOD32_MIX':
 note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:                        ^666
:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */In file included from 
cbc/typeinfo.c                              ^:
21:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h162::39215:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hnote: :'{' token is here663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:                                                ^116
:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:162:5: note: ')' token is here
    ZAPHOD32_SCRAMBLE32(state[0],0xc95d22a9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \32
:                                                ^ 
note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:163:5:#   define STMT_END     ) 
warning:                         ^'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    v ^= (v>>23);                       \:
35                                        ^:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h4::
163/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::5171:: 5note: :')' token is here 
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[1],0x8497242b);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");3
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:} STMT_END37
:  ^~~~~~~~ 
note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: In file included from note: cbc/util.cexpanded from macro 'STMT_START':
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
                               ^warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:38: note:     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");expanded from macro 'ZAPHOD32_SCRAMBLE32'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: note: '{' token is here
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
#define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
    v ^= (v>>23);                       \
                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:164/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::5:171 :note: 5')' token is here:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_SCRAMBLE32(state[2],0x9c5cc4e9);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:88:3    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");:
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note: 
expanded from macro 'ZAPHOD32_SCRAMBLE32'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32} STMT_END:
   ^~~~~~~~note: 
expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:#   define STMT_END     )171
:                        ^5
: note: ')' token is here
In file included from cbc/util.c:21:
In file included from     ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~3921
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h125::353:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hnote: :expanded from macro 'ZAPHOD32_MIX'4
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5} STMT_END:
   ^~~~~~~~warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:167:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 1/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:168:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 2/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:169:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 3/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");:
29            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::13170:: 5note: :')' token is here 
note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");125
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~3
: note: expanded from macro 'ZAPHOD32_MIX'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:48: note: } STMT_ENDexpanded from macro 'ZAPHOD32_MIX'

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:170:5: note: ')' token is here
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 4/5");:
5    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END    ZAPHOD32_FINALIZE(v0,v1,v2);

  ^~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h21::90 note: :expanded from macro 'STMT_END'37
: note: expanded from macro 'ZAPHOD32_FINALIZE'
#   define STMT_END     )
                        ^
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: In file included from note: cbc/util.cexpanded from macro 'STMT_START':
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */ 
warning:                               ^'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~90
:48: note: expanded from macro 'ZAPHOD32_FINALIZE'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h
:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: '{' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:113:36: note: expanded from macro 'ZAPHOD32_FINALIZE'
    v1 = ROTL32(v1, 17);           \
                                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ZAPHOD32_FINALIZE(v0,v1,v2);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3: note: expanded from macro 'ZAPHOD32_FINALIZE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");:
21    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
#   define STMT_END     )
                        ^
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:171:5: note: ')' token is here
    ZAPHOD32_MIX(state[0],state[1],state[2],"ZAPHOD32 SEED-STATE B 5/5");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:37: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: '{' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:116:48: note: expanded from macro 'ZAPHOD32_MIX'
#define ZAPHOD32_MIX(v0,v1,v2,text) STMT_START {                              \
                                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:124:32: note: expanded from macro 'ZAPHOD32_MIX'
    v2 = ROTR32(v2, 7) ^ v0;   \
                               ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:247:13: note: ')' token is here
            ZAPHOD32_MIX(v0,v1,v2,"MIX 2-WORDS A");
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:125:3: note: expanded from macro 'ZAPHOD32_MIX'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:4:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:37: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: note: '{' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:90:48: note: expanded from macro 'ZAPHOD32_FINALIZE'
#define ZAPHOD32_FINALIZE(v0,v1,v2) STMT_START {          \
                                               ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ZAPHOD32_FINALIZE(v0,v1,v2);    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h::79113::4536::  note: note: expanded from macro 'STADTX_SCRAMBLE64'expanded from macro 'ZAPHOD32_FINALIZE'

    v1 = ROTL32(v1, 17);           \
                                   ^
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:268:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h5::113 :note: 5')' token is here:
 note: ')' token is here
    ZAPHOD32_FINALIZE(v0,v1,v2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/zaphod32_hash.h:114:3:    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17)); 
note:     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~expanded from macro 'ZAPHOD32_FINALIZE'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:} STMT_END80
:  ^~~~~~~~3
: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: } STMT_ENDexpanded from macro 'STMT_END'

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: #   define STMT_END     )expanded from macro 'STMT_END'

                        ^
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:115:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cbc/util.c:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:
:In file included from 79/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::392145:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hnote: :expanded from macro 'STADTX_SCRAMBLE64'663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \:
21                                   ^~~~~~~~~~:
 note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_END     )
                        ^
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h        SBOX32_MIX3(s0,s1,s2,"SEED STATE");:
118        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
5: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
99:47: note: expanded from macro 'SBOX32_MIX3'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
9    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
:    v ^= (v >> 46);                         \ 
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_ENDIn file included from 
cbc/typeinfo.c  ^~~~~~~~:
21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::3921667:
:In file included from 21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:: 663note: :
expanded from macro 'STMT_END'In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: #   define STMT_END     )warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]                        ^

        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5:        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:107:32: note: expanded from macro 'SBOX32_MIX3'
    v2 = ROTR32(v2, 7) ^ v0;   \
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));                               ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h9        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~::
72 :note: 36')' token is here:
 note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:36: note: expanded from macro 'SBOX32_MIX3'
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:108/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::3666:: 29note: :expanded from macro 'SBOX32_MIX3' 
note: expanded from macro 'STMT_START'
#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
} STMT_END                                   ^~~~~~~~~~

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::666667::2921::  note: note: expanded from macro 'STMT_START'expanded from macro 'STMT_END'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#   define STMT_END     ):
119                        ^:
5: note: '{' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448:9: note: '{' token is here    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:99:47: #define STADTX_SCRAMBLE64(v,prime) STMT_START {    \note: 
expanded from macro 'SBOX32_MIX3'                                              ^

#define SBOX32_MIX3(v0,v1,v2,text) STMT_START {                               \
                                              ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
    v ^= (v >> 46);                         \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:                                            ^1453
:13:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h :note: 119'{' token is here:
5: note: ')' token is here
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
1393:46: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hexpanded from macro 'XORSHIFT96_set':
80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \ 
note:                                              ^expanded from macro 'STMT_END'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1448#   define STMT_END     ):
9                        ^:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from cbc/type.c:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h21::
107In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h32::3921 :
note: In file included from expanded from macro 'SBOX32_MIX3'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h
:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5:     v2 = ROTR32(v2, 7) ^ v0;   \warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:                               ^
1453
:13:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h :warning: 1448'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
9: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
        SBOX32_MIX3(s0,s1,s2,"SEED STATE");            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
72:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h36::1396 :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hnote: 57:expanded from macro 'STADTX_SCRAMBLE64':108
 :note: 3expanded from macro 'XORSHIFT96_set':
 note: expanded from macro 'SBOX32_MIX3'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \667
:                                   ^~~~~~~~~~21
:    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \ 
note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h                                                        ^:expanded from macro 'STMT_END'
666
:29/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 1453note: :expanded from macro 'STMT_START'13
: note: ')' token is here#   define STMT_END     )

                        ^
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::51397:: 3note: :'{' token is here 
note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:#   define STMT_END     )72
:                        ^47
: note: expanded from macro 'STADTX_SCRAMBLE64'
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
3921                                              ^In file included from :

cbc/util.cIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h21::
663In file included from :
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h3921::
35In file included from :
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::6631453:
:In file included from 13/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 35warning: :
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 1393note: :expanded from macro 'XORSHIFT96_set'35
: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h                                  ^~~~~~~~~~:
666:29:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hnote: 666:expanded from macro 'STMT_START':
12029::5 :note:  expanded from macro 'STMT_START'warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:

1453    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                              ^:

13: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hnote: ::'{' token is here145679
::545::  note: note: '{' token is hereexpanded from macro 'STADTX_SCRAMBLE64'

            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    v ^= (v >> 46);                         \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h                                            ^:
1393:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h46:::1393120: :46note: 5:expanded from macro 'XORSHIFT96_set': 
note:  expanded from macro 'XORSHIFT96_set'note: 
')' token is here
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h57::1396 :note: 57expanded from macro 'XORSHIFT96_set':
 note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \                                                        ^

                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1453/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h::131456:: 5note: :')' token is here 
note: ')' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~            XORSHIFT96_set(*state_cursor,s0,s1,s2,t1);

            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h1397::13973::3 :note:  expanded from macro 'XORSHIFT96_set'note: 
expanded from macro 'XORSHIFT96_set'
} STMT_END
} STMT_END  ^~~~~~~~

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h667::66721::21 :note:  expanded from macro 'STMT_END'note: 
expanded from macro 'STMT_END'
#   define STMT_END     )
#   define STMT_END     )                        ^

                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:35: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: note: '{' token is here
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1393:46: note: expanded from macro 'XORSHIFT96_set'
#define XORSHIFT96_set(r,x,y,z,t) STMT_START {          \
                                             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT96_set(*state,s0,s1,s2,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1396:57: note: expanded from macro 'XORSHIFT96_set'
    r = z = (z ^ ( z >> 26 ) ) ^ ( t ^ ( t >> 5 ) );    \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1456:In file included from 5:cbc/util.c :note: 21')' token is here:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
    XORSHIFT96_set(*state,s0,s1,s2,t2);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
1482:9: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
1397:3: note: expanded from macro 'XORSHIFT96_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");:
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note: 
expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39#   define STMT_END     ):
                         ^note: 
expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:50: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:85:39: note:         SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");expanded from macro 'SBOX32_MIX4'

        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                      ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29        v2 = ROTL32(v2, 4) - v0;    \:
                                     ^note: 
expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~1482
:9: note: '{' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h
:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 85note: :expanded from macro 'STMT_END'50
: note: expanded from macro 'SBOX32_MIX4'
#   define STMT_END     )
                        ^
#define SBOX32_MIX4(v0,v1,v2,v3,text) STMT_START { \
                                                 ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1482:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: '{' token is here
        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:96:37: note: expanded from macro 'SBOX32_MIX4'
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:        v2 = ROTL32(v2, 4) - v0;    \1399
:                                    ^49
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hexpanded from macro 'XORSHIFT128_set':
1482:9: note: ')' token is here
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \        SBOX32_MIX4(s0,s1,s2,s3,"SEED STATE");

                                                ^        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:97:3: note: expanded from macro 'SBOX32_MIX4'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \3921
:
                                                        ^In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:
:In file included from 1487/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3513:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h :note: 1487')' token is here:
13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
1403:3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hexpanded from macro 'XORSHIFT128_set':
1399:38: note: expanded from macro 'XORSHIFT128_set'} STMT_END

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h#   define STMT_END     ):
666                        ^:
29: note: expanded from macro 'STMT_START'
In file included from cbc/util.c:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */21
:
                              ^In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h1487::66313:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :'{' token is here35
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);1399
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~49
: note: expanded from macro 'XORSHIFT128_set'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:38: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
1487:13:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h :warning: 1399'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
49: note: expanded from macro 'XORSHIFT128_set'
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1487:13: note: ')' token is here
            XORSHIFT128_set(*state_cursor,s0,s1,s2,s3,t1);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:: 1490note: :expanded from macro 'XORSHIFT128_set'5
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_END     )
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h                        ^:
1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
In file included from                                                         ^cbc/typeinfo.c
:21:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h1490::39215:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.hnote: :')' token is here663
:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:35:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note:     XORSHIFT128_set(*state,s0,s1,s2,s3,t2);expanded from macro 'XORSHIFT128_set'

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
} STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h  ^~~~~~~~:
1399:38:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note: 667expanded from macro 'XORSHIFT128_set':
21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                     ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: '{' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1399:49: note: expanded from macro 'XORSHIFT128_set'
#define XORSHIFT128_set(r,x,y,z,w,t) STMT_START {       \
                                                ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1402:57: note: expanded from macro 'XORSHIFT128_set'
    r = w = ( w ^ ( w >> 29 ) ) ^ ( t ^ ( t >> 12 ) );  \
                                                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1490:5: note: ')' token is here
    XORSHIFT128_set(*state,s0,s1,s2,s3,t2);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/sbox32_hash.h:1403:3: note: expanded from macro 'XORSHIFT128_set'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::11355::
5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 113warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]5
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));:
45    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \

                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
} STMT_END/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:  ^~~~~~~~113
:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :'{' token is here667
:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
663                                              ^:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:113:5: note: ')' token is here
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
    STADTX_SCRAMBLE64(state[0],UINT64_C(0x801178846e899d17));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hcbc/typeinfo.c::11421::
5In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :warning: 3921'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:

In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:    v ^= (v >> 46);                         \36
:                                            ^ 
note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: note: ')' token is here
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));:
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note: 
expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h                              ^:
667:21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 114note: :expanded from macro 'STMT_END'5
: note: '{' token is here
#   define STMT_END     )
                        ^
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hIn file included from :cbc/type.c72::2147:
:In file included from  /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :In file included from expanded from macro 'STADTX_SCRAMBLE64'3921cbc/util.c
:
:In file included from 21/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:
:In file included from 663/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h3921::
107In file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h5::663 :
warning: In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \55
:
                                              ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:115:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \                                          ^~~~~~~~~~

                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::666666::2929::  note: note: expanded from macro 'STMT_START'expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:114:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^                              ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::115107::55::  note: note: '{' token is here'{' token is here

    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));91
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~54
: note: expanded from macro '_PERL_HASH_SEED_STATE'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    v ^= (v >> 46);                         \
:
72                                            ^:
47: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hnote: :expanded from macro 'STADTX_SCRAMBLE64'114
:5: note: ')' token is here
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
    STADTX_SCRAMBLE64(state[0],UINT64_C(0xdd51e5d1c9a5a151));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
    _PERL_HASH_SEED_STATE(seed,state);In file included from 
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h5593::
:115/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h93:::5115 ::note:  5expanded from macro '_PERL_HASH_SEED_STATE':warning: 
 '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:                                                                                            ^79
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::4572:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 36107note: ::expanded from macro 'STADTX_SCRAMBLE64' 5
note: :expanded from macro 'STADTX_SCRAMBLE64' 
note: ')' token is here
    v ^= (v >> 46);                         \
                                            ^#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
    _PERL_HASH_SEED_STATE(seed,state);

                                   ^~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h

:115:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:: 666/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: ::')' token is here2994
:: 3note: :expanded from macro 'STMT_START' 
note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:     STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));note: 
expanded from macro 'STMT_END'    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::80115::35#   define STMT_END     )::
                          ^note: note: 
expanded from macro 'STADTX_SCRAMBLE64''{' token is here

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:                        ^72
:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
In file included from                                               ^cbc/util.c
:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h :note: 115expanded from macro 'STMT_START':
5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:116:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 79note: :'{' token is here45
: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));                                            ^

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h115::725::47 :note:  ')' token is herenote: 
expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x93a7d6c8c62e4835));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hwarning: :'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]116
:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));72
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~36
: note: expanded from macro 'STADTX_SCRAMBLE64'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h    v ^= (v >> 46);                         \:
666                                            ^:
29: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hexpanded from macro 'STMT_START':
116:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~116
:5: note: '{' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));21
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_END     )
                        ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h                                   ^~~~~~~~~~:
116:5:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :warning: 666'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
29: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */79
:                              ^45
: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hexpanded from macro 'STADTX_SCRAMBLE64':
117:5: note: '{' token is here
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:116:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[1],UINT64_C(0x803340f36895c2b5));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \:
3                                              ^:
 note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
} STMT_END    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h72::66747::21 :note:  expanded from macro 'STADTX_SCRAMBLE64'note: 
expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \5
:                                   ^~~~~~~~~~ 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
79                              ^:
45: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hnote: :expanded from macro 'STADTX_SCRAMBLE64'118
:5: note: '{' token is here
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:117:5:     STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));note: 
')' token is here    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xbea9344eb7565eeb));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h                                              ^:
80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'    v ^= (v >> 46);                         \

                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note:     STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));'{' token is here

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));  ^~~~~~~~

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h::66772::2147::  note: note: expanded from macro 'STMT_END'expanded from macro 'STADTX_SCRAMBLE64'

#   define STMT_END     )
                        ^
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: warning: #define STADTX_SCRAMBLE64(v,prime) STMT_START {    \'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:118:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[2],UINT64_C(0xcd95d1e509b995cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));:
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h                                   ^~~~~~~~~~:
79:45:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :note: 666expanded from macro 'STADTX_SCRAMBLE64':
29: note: expanded from macro 'STMT_START'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */5
:                              ^ 
note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));:
80    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.hexpanded from macro 'STADTX_SCRAMBLE64':
72:47: note: expanded from macro 'STADTX_SCRAMBLE64'} STMT_END

  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:119:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ,SIPROUND;    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 175note: :expanded from macro 'STADTX_SCRAMBLE64'14
: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
    v ^= (v >> 46);                         \
                                            ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:219:5/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:: 119note: :expanded from macro 'PERL_SIPHASH_FNC'5
: note: ')' token is here
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    STADTX_SCRAMBLE64(state[3],UINT64_C(0x9999791977e30c13));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47    ,SIPROUND;:
      ^~~~~~~~note: 
expanded from macro 'STADTX_SCRAMBLE64'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
  } STMT_END                                              ^

  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h
                        ^:
120:5: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:55:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:36: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                   ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:72:47: note: expanded from macro 'STADTX_SCRAMBLE64'
#define STADTX_SCRAMBLE64(v,prime) STMT_START {    \
                                              ^
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3:    ,SIPROUND; 
note:      ^~~~~~~~expanded from macro 'STADTX_SCRAMBLE64'

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h3::667 :note: 21expanded from macro 'SIPROUND':
 note: expanded from macro 'STMT_END'
#   define STMT_END     )
  STMT_START {              \                        ^

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:79:45: note: expanded from macro 'STADTX_SCRAMBLE64'
    v ^= (v >> 46);                         \
                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:120:5: note: ')' token is here
    STADTX_SCRAMBLE64(state[3],UINT64_C(0xaab8b6b05abfc6cd));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/stadtx_hash.h:80:3: note: expanded from macro 'STADTX_SCRAMBLE64'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:93:93: note: expanded from macro '_PERL_HASH_SEED_STATE'
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: ')' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:94:3: note: expanded from macro '_PERL_HASH_SEED_STATE'
} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:43: note: expanded from macro '_PERL_HASH_SEED_STATE'
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                          ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: note: '{' token is here
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:91:54: note: expanded from macro '_PERL_HASH_SEED_STATE'
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#define _PERL_HASH_SEED_STATE(seed,state) STMT_START {                                      \
                                                     ^
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
    _PERL_HASH_SEED_STATE(seed,state);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::5:93 :note: 93expanded from macro 'PERL_SIPHASH_FNC':
 note: expanded from macro '_PERL_HASH_SEED_STATE'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    sbox32_seed_state96(seed + __PERL_HASH_SEED_BYTES, state + __PERL_HASH_STATE_BYTES);    \
                                                                                            ^    ,SIPROUND;

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:107:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :')' token is here175
:14: note: expanded from macro 'SIPROUND'
    _PERL_HASH_SEED_STATE(seed,state);  STMT_START {              \

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::21994::53::  note: note: expanded from macro 'PERL_SIPHASH_FNC'expanded from macro '_PERL_HASH_SEED_STATE'

} STMT_END
  ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:    SIP_ROUNDS;                             \ 
note:     ^~~~~~~~~~expanded from macro 'STMT_END'

#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:3921:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv.h:663:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::180219::35::  note: note: expanded from macro 'SIPROUND'expanded from macro 'PERL_SIPHASH_FNC'

  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3:    SIP_ROUNDS;                             \ 
note:     ^~~~~~~~~~expanded from macro 'PERL_SIPHASH_FNC'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: '{' token is here
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~    ,SIPROUND;

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :')' token is here175
:14: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h219::1805::5 :note:  expanded from macro 'PERL_SIPHASH_FNC'note: 
expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:    SIP_ROUNDS;                             \21
:    ^~~~~~~~~~ 
note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::14274:: 6note: :expanded from macro 'SIPROUND' 
warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  STMT_START {              \
    ,SIPROUND;             ^

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 180note: :expanded from macro 'PERL_SIPHASH_FNC'3
: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~    ,SIPROUND;

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:175:3: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::180666::529::  note: note: expanded from macro 'SIPROUND'expanded from macro 'STMT_START'

  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 244expanded from macro 'PERL_SIPHASH_FNC':
3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  ^~~~~~~~~~~~~~~~:
274:6: note: '{' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:274:6: note: ')' token is here
    ,SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note:     ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6    ,SIPROUND;SIPROUND;:
      ^~~~~~~~warning: 
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
  STMT_START {              \
             ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:180:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 219note: :expanded from macro 'SIPROUND'5
: note: expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'    SIP_ROUNDS;                             \

    ^~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  STMT_START {              \:
280  ^~~~~~~~~~:
6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: expanded from macro 'STMT_START'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3219:: 5note: :expanded from macro 'PERL_SIPHASH_FNC' 
note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
    SIP_ROUNDS;                             \  ^~~~~~~~~~~~~~~~

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::15280:: 6note: :'{' token is here 
note: ')' token is here
    ,SIPROUND;SIPROUND;    ,SIPROUND;SIPROUND;SIPROUND;

     ^~~~~~~~              ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::14180:: 5note: :expanded from macro 'SIPROUND' 
note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h21::244 :note: 3expanded from macro 'STMT_END':
 note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:  SIP_FINAL_ROUNDS                          \5
:  ^~~~~~~~~~~~~~~~ 
note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15:     ,SIPROUND;SIPROUND;SIPROUND;warning: 
                       ^~~~~~~~'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3:     ,SIPROUND;SIPROUND;note: 
expanded from macro 'SIPROUND'              ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3:  STMT_START {              \ 
note:   ^~~~~~~~~~expanded from macro 'SIPROUND'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:  } STMT_END29
:  ^ 
note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15:  SIP_FINAL_ROUNDS                          \ 
warning:   ^~~~~~~~~~~~~~~~'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  ^~~~~~~~~~:
275:24:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h :warning: 666'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
29: note: expanded from macro 'STMT_START'
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h                              ^:
180:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'SIPROUND'244
:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3:   SIP_FINAL_ROUNDS                          \note: 
expanded from macro 'PERL_SIPHASH_FNC'  ^~~~~~~~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: '{' token is here
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ,SIPROUND;SIPROUND;SIPROUND;:
275                       ^~~~~~~~:
24: note: ')' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h244::1803::5 :note:  expanded from macro 'PERL_SIPHASH_FNC'note: 
expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h  SIP_FINAL_ROUNDS                          \:
667  ^~~~~~~~~~~~~~~~:
21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:275:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;175
:     ^~~~~~~~3
: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note:   STMT_START {              \expanded from macro 'SIPROUND'

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:   STMT_START {              \note: 
expanded from macro 'STMT_START'  ^~~~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'    SIP_ROUNDS;                             \

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ,SIPROUND;SIPROUND;:
280     ^~~~~~~~:
6: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
  STMT_START {              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:             ^175
:14: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'SIPROUND':
219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5    SIP_ROUNDS;                             \:
     ^~~~~~~~~~note: 
expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::6280:: warning: 6'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 180expanded from macro 'SIPROUND':
3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
  } STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  ^:
219:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'PERL_SIPHASH_FNC'219
:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    SIP_ROUNDS;                             \:
280    ^~~~~~~~~~:
6: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h')' token is here:
280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5:  } STMT_END 
note:     ^~~~~~~~expanded from macro 'SIPROUND'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667  } STMT_END:
21    ^~~~~~~~:
 note: expanded from macro 'STMT_END'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: #   define STMT_END     )expanded from macro 'STMT_END'

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:#   define STMT_END     )5
:                        ^ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666  STMT_START {              \:
29  ^~~~~~~~~~:
 note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */:
                               ^note: 
expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15:    SIP_ROUNDS;                             \ 
note:     ^~~~~~~~~~'{' token is here

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;175
:              ^~~~~~~~14
: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5:  STMT_START {              \ 
note:              ^expanded from macro 'PERL_SIPHASH_FNC'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h: :warning: 280'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
    ,SIPROUND;SIPROUND;
              ^~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:180:3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'SIPROUND':
180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
  } STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  ^:
219:5: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hnote: :expanded from macro 'PERL_SIPHASH_FNC'219
:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
    SIP_ROUNDS;                             \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ^~~~~~~~~~:
280:15:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :note: 280')' token is here:
15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h5::180 :note: 5expanded from macro 'SIPROUND':
 note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~  } STMT_END

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::21667:: 21note: :expanded from macro 'STMT_END' 
note: expanded from macro 'STMT_END'
#   define STMT_END     )
#   define STMT_END     )                        ^

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h219::2195::5 :note:  expanded from macro 'PERL_SIPHASH_FNC'note: 
expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    SIP_ROUNDS;                             \    ^~~~~~~~~~

    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;280
:     ^~~~~~~~6
: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
  STMT_START {              \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:  ^~~~~~~~~~175
:3: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hnote: :expanded from macro 'SIPROUND'666
:29: note: expanded from macro 'STMT_START'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'  SIP_ROUNDS;                               \

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: '{' token is here
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280    ,SIPROUND;SIPROUND;:
6     ^~~~~~~~:
 note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:  STMT_START {              \14
:             ^ 
note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280  } STMT_END:
6  ^:
 warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:  SIP_ROUNDS;                               \3
:  ^~~~~~~~~~ 
note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note:   } STMT_END')' token is here

  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3:     ,SIPROUND;SIPROUND;note: 
expanded from macro 'PERL_SIPHASH_FNC'     ^~~~~~~~

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'  SIP_ROUNDS;                               \

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  } STMT_END:
280    ^~~~~~~~:
6: note: ')' token is here/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: note: expanded from macro 'STMT_END'
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h180::2385::3 :note:  expanded from macro 'SIPROUND'note: 
expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21:   SIP_ROUNDS;                               \note: 
expanded from macro 'STMT_END'  ^~~~~~~~~~

#   define STMT_END     )
                        ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:280:15:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h :warning: 238'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
  SIP_ROUNDS;                               \
  ^~~~~~~~~~/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:175:3: note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280  STMT_START {              \:
15  ^~~~~~~~~~:
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  STMT_START {              \:
238  ^~~~~~~~~~:
3: note: expanded from macro 'PERL_SIPHASH_FNC'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:666:29: note: expanded from macro 'STMT_START'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:    ,SIPROUND;SIPROUND;3
:              ^~~~~~~~ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280  STMT_START {              \:
15             ^:
 note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note:   SIP_ROUNDS;                               \expanded from macro 'SIPROUND'

  ^~~~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning:     SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:219:5: note: expanded from macro 'PERL_SIPHASH_FNC'
    SIP_ROUNDS;                             \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
  SIP_ROUNDS;                               \
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h  ^~~~~~~~~~:
175:3: note: expanded from macro 'SIPROUND'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:280:15: note: ')' token is here
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29:    ,SIPROUND;SIPROUND; 
note:               ^~~~~~~~expanded from macro 'STMT_START'

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
  } STMT_END                              ^

    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h238::6673::21 :note:  expanded from macro 'PERL_SIPHASH_FNC'note: 
expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3280:: 6note: :expanded from macro 'PERL_SIPHASH_FNC' 
note: '{' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6  SIP_ROUNDS;                               \:
   ^~~~~~~~~~warning: 
'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6:  SIP_FINAL_ROUNDS                          \ 
warning:   ^~~~~~~~~~~~~~~~'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:6: note: ')' token is here
    ,SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;

     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 244note: :expanded from macro 'SIPROUND'3
: note: expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3:   SIP_FINAL_ROUNDS                          \note: 
expanded from macro 'PERL_SIPHASH_FNC'  ^~~~~~~~~~~~~~~~

  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::6666:: 29warning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro] 
note: expanded from macro 'STMT_START'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h                              ^:
180:3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.hexpanded from macro 'SIPROUND':
244:3: note: expanded from macro 'PERL_SIPHASH_FNC'  } STMT_END

  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note:   SIP_FINAL_ROUNDS                          \'{' token is here

  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;:
14     ^~~~~~~~:
 note: expanded from macro 'SIPROUND'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note:   STMT_START {              \expanded from macro 'SIPROUND'

             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:  } STMT_END244
:    ^~~~~~~~3
: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
  SIP_FINAL_ROUNDS                          \#   define STMT_END     )

  ^~~~~~~~~~~~~~~~                        ^

/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note:     ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;expanded from macro 'SIPROUND'

                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 244note: :expanded from macro 'STMT_START'3
: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:280:15: note: '{' token is here
    ,SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_ROUNDS;                               \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h    ^~~~~~~~:
280:15: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hwarning: :'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]667
:21: note: expanded from macro 'STMT_END'
    ,SIPROUND;SIPROUND;
#   define STMT_END     )              ^~~~~~~~

                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::244180::33::  note: note: expanded from macro 'PERL_SIPHASH_FNC'expanded from macro 'SIPROUND'

  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238  SIP_FINAL_ROUNDS                          \:
3  ^~~~~~~~~~~~~~~~:
 note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:  SIP_ROUNDS;                               \281
:  ^~~~~~~~~~33
: warning: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h'(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
280:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
    ,SIPROUND;SIPROUND;                                ^~~~~~~~

              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h::3180:: 5note: :expanded from macro 'SIPROUND' 
note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~  STMT_START {              \

  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h::21666:: 29note: :expanded from macro 'STMT_END' 
note: expanded from macro 'STMT_START'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:238:3: note: #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */expanded from macro 'PERL_SIPHASH_FNC'

                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;281
:                                ^~~~~~~~15
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 244note: :expanded from macro 'SIPROUND'3
: note: expanded from macro 'PERL_SIPHASH_FNC'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'  SIP_FINAL_ROUNDS                          \

  ^~~~~~~~~~~~~~~~
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;

                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
  } STMT_END
  ^/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h
:175:14/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:: 244note: :expanded from macro 'SIPROUND'3
: note: expanded from macro 'PERL_SIPHASH_FNC'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:  SIP_FINAL_ROUNDS                          \3
:  ^~~~~~~~~~~~~~~~ 
note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33:   SIP_ROUNDS;                               \note: '{' token is here

  ^~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:6: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
     ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:15: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
              ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:24: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                       ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:3: note: expanded from macro 'SIPROUND'
  STMT_START {              \
  ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: '{' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:175:14: note: expanded from macro 'SIPROUND'
  STMT_START {              \
             ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:3: note: expanded from macro 'SIPROUND'
  } STMT_END
  ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:281:33: note: ')' token is here
    ,SIPROUND;SIPROUND;SIPROUND;SIPROUND;
                                ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:180:5: note: expanded from macro 'SIPROUND'
  } STMT_END
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/hv_func.h:244:3: note: expanded from macro 'PERL_SIPHASH_FNC'
  SIP_FINAL_ROUNDS                          \
  ^~~~~~~~~~~~~~~~
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
258 warnings generated.
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'ENV_LOCK'
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
                              ^~~~~~~~~~~~~~~~~~~~~~~~~    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" *//usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
    CX_POP_SAVEARRAY(cx);
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'

#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)    STMT_START {                                                        \
               ^

                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^

    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
    ^
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
:#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)2209:5: note: ')' token is here
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^

                        ^
In file included from cbc/typeinfo.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.hIn file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:5: note: expanded from macro 'CLEAR_ARGARRAY'
2925    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:31:#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here
         CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
note:     STMT_START {                                                        \
               ^
expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
note:         CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:5: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: ')' token is here
        CLEAR_ARGARRAY(av);expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'

#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671:7: note: expanded from macro 'CLEAR_ARGARRAY'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
mv pack.o tmppack.o
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
In file included from cbc/type.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/typeinfo.c:188:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarator", newSVpvf("%s:%d",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:188:7: note: '{' token is here
      HV_STORE_CONST(hv, "declarator", newSVpvf("%s:%d",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:188:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarator", newSVpvf("%s:%d",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:188:7: note: ')' token is here
      HV_STORE_CONST(hv, "declarator", newSVpvf("%s:%d",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:209:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarator", sv);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:209:7: note: '{' token is here
      HV_STORE_CONST(hv, "declarator", sv);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:209:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarator", sv);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:209:7: note: ')' token is here
      HV_STORE_CONST(hv, "declarator", sv);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:210:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "offset", newSViv(pDecl->offset));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:210:7: note: '{' token is here
      HV_STORE_CONST(hv, "offset", newSViv(pDecl->offset));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:210:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "offset", newSViv(pDecl->offset));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:210:7: note: ')' token is here
      HV_STORE_CONST(hv, "offset", newSViv(pDecl->offset));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:211:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "size", newSViv(pDecl->size));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
mv tmppack.o cbc/pack.o
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:211:7: note: '{' token is here
      HV_STORE_CONST(hv, "size", newSViv(pDecl->size));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:211:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "size", newSViv(pDecl->size));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:211:7: note: ')' token is here
      HV_STORE_CONST(hv, "size", newSViv(pDecl->size));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:247:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, &pStructDecl->type));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:247:5: note: '{' token is here
    HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, &pStructDecl->type));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:247:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, &pStructDecl->type));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:247:5: note: ')' token is here
    HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, &pStructDecl->type));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:250:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarators",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:250:7: note: '{' token is here
      HV_STORE_CONST(hv, "declarators",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:250:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      HV_STORE_CONST(hv, "declarators",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:250:7: note: ')' token is here
      HV_STORE_CONST(hv, "declarators",
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:300:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "declarator", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:300:3: note: '{' token is here
  HV_STORE_CONST(hv, "declarator", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:300:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "declarator", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:300:3: note: ')' token is here
  HV_STORE_CONST(hv, "declarator", sv);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:301:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, pTypedef->pType));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:301:3: note: '{' token is here
  HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, pTypedef->pType));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:301:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, pTypedef->pType));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:301:3: note: ')' token is here
  HV_STORE_CONST(hv, "type", get_type_spec_def(aTHX_ pCfg, pTypedef->pType));
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:328:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "identifier", newSVpv(pEnumSpec->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/bitfields.c
                              ^cbc/type.c:526:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

      CHECK_ALLOWED(ARRAYS, "an array type");cbc/typeinfo.c:328:5: note: '{' token is here
    HV_STORE_CONST(hv, "identifier", newSVpv(pEnumSpec->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~        STMT_START {                                                           \
                   ^

cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
        ^~~~~~~~~~
cbc/typeinfo.c:328:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */    HV_STORE_CONST(hv, "identifier", newSVpv(pEnumSpec->identifier, 0));
                              ^
cbc/type.c:526:7: note: '{' token is here

      CHECK_ALLOWED(ARRAYS, "an array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        STMT_START {                                                           \
                   ^
./cbc/cbc.h:276:9: note: cbc/type.c:526:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'HV_STORE_CONST'      CHECK_ALLOWED(ARRAYS, "an array type");
        } STMT_END
        ^
cbc/typeinfo.c:328:5: note: ')' token is here

    HV_STORE_CONST(hv, "identifier", newSVpv(pEnumSpec->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:526:7: note: ')' token is here

      CHECK_ALLOWED(ARRAYS, "an array type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )                        ^

                        ^
cbc/typeinfo.c:332:5cbc/type.c: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
:529    HV_STORE_CONST(hv, "sign", newSViv(pEnumSpec->tflags & T_SIGNED ? 1 : 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
:7:        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
 warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:332:5: note: '{' token is here

    HV_STORE_CONST(hv, "sign", newSViv(pEnumSpec->tflags & T_SIGNED ? 1 : 0));
      CHECK_ALLOWED(POINTERS, "a pointer type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
./cbc/cbc.h#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */:272:20: note: expanded from macro 'HV_STORE_CONST'

                              ^        STMT_START {                                                           \
                   ^

cbc/type.c:529:7: note: '{' token is here
      CHECK_ALLOWED(POINTERS, "a pointer type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
cbc/typeinfo.c        STMT_START {                                                           \
                   ^
:332:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]cbc/type.c:529:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

      CHECK_ALLOWED(POINTERS, "a pointer type");
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:529:7: note: ')' token is here
      CHECK_ALLOWED(POINTERS, "a pointer type");
    HV_STORE_CONST(hv, "sign", newSViv(pEnumSpec->tflags & T_SIGNED ? 1 : 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:332:5: note: ')' token is here
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    HV_STORE_CONST(hv, "sign", newSViv(pEnumSpec->tflags & T_SIGNED ? 1 : 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_ENDcbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^

          ^~~~~~~~
./ppport.h:cbc/type.c:533:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
3814:    CHECK_ALLOWED(BASIC_TYPES, "a basic type");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
20:         STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
note: expanded from macro 'STMT_END'#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
#  define STMT_END      )
                        ^

                              ^
cbc/typeinfo.c:333:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
cbc/type.c:    HV_STORE_CONST(hv, "size", newSViv(GET_ENUM_SIZE(pCfg, pEnumSpec)));533:5: note: '{' token is here

    CHECK_ALLOWED(BASIC_TYPES, "a basic type");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        STMT_START {                                                           \
                   ^
./cbc/cbc.h:272:9: note: cbc/type.c:533:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
expanded from macro 'HV_STORE_CONST'    CHECK_ALLOWED(BASIC_TYPES, "a basic type");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:533:5: note: ')' token is here

    CHECK_ALLOWED(BASIC_TYPES, "a basic type");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
                        ^
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:333:5: note: '{' token is here
    HV_STORE_CONST(hv, "size", newSViv(GET_ENUM_SIZE(pCfg, pEnumSpec)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:536:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
./cbc/cbc.h    CHECK_ALLOWED(UNIONS, "a union");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
:272:        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
20:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/type.c:536:5: note: '{' token is here
     CHECK_ALLOWED(UNIONS, "a union");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
In file included from                    ^
cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
cbc/type.c        STMT_START {                                                           \
                   ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:5: note: expanded from macro 'CX_POP_SAVEARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
:536#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: '{' token is here
:    CX_POP_SAVEARRAY(cx);
    ^~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:657:16: note: expanded from macro 'CX_POP_SAVEARRAY'
5    STMT_START {                                                        \
               ^
: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(UNIONS, "a union");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_ENDcbc/typeinfo.c:333:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

        ^In file included from cbc/util.c:21:
In file included from     HV_STORE_CONST(hv, "size", newSViv(GET_ENUM_SIZE(pCfg, pEnumSpec)));/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~6161
:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:./cbc/cbc.h5::276 :warning: 9'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
 note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
    CX_POP_SAVEARRAY(cx);        ^

    ^~~~~~~~~~~~~~~~~~~~
cbc/typeinfo.c:333:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h5::662 :note: 5')' token is here:
 note: expanded from macro 'CX_POP_SAVEARRAY'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2209:5: note: ')' token is here
    HV_STORE_CONST(hv, "size", newSViv(GET_ENUM_SIZE(pCfg, pEnumSpec)));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:    CX_POP_SAVEARRAY(cx);276
:    ^~~~~~~~~~~~~~~~~~~~11
: note: expanded from macro 'HV_STORE_CONST'
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:662:7: note: expanded from macro 'CX_POP_SAVEARRAY'        } STMT_END

          ^~~~~~~~
./ppport.h:    } STMT_END3814
:      ^~~~~~~~20
: note: expanded from macro 'STMT_END'/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h
:667:21: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
#   define STMT_END     )
                        ^
cbc/typeinfo.c:334:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]

    HV_STORE_CONST(hv, "enumerators",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
cbc/type.c:536        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
:5:#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:334:5: note: '{' token is here
     HV_STORE_CONST(hv, "enumerators",note: ')' token is here
    CHECK_ALLOWED(UNIONS, "a union");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~In file included from 
cbc/util.c:21:
./cbc/cbc.hIn file included from :/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h272::616120:
:/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h :note: 2215expanded from macro 'HV_STORE_CONST':
9: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
        STMT_START {                                                           \/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h
:                   ^667
:5: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

                        ^#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2215:9: note: '{' token is here

        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:667:16: note: expanded from macro 'CLEAR_ARGARRAY'
    STMT_START {                                                        \
               ^
cbc/type.c:539:5: cbc/typeinfo.c:334:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
    HV_STORE_CONST(hv, "enumerators",/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~2215
:9: warning: ./cbc/cbc.h'}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]:
276:9: note: expanded from macro 'HV_STORE_CONST'
        CLEAR_ARGARRAY(av);        } STMT_END

        ^~~~~~~~~~~~~~~~~~        ^

cbc/typeinfo.c/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h::334671::55::  note: note: ')' token is hereexpanded from macro 'CLEAR_ARGARRAY'

    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:    HV_STORE_CONST(hv, "enumerators",2215
:    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~9
: note: ')' token is here
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        CLEAR_ARGARRAY(av);
        ^~~~~~~~~~~~~~~~~~
        } STMT_END
          ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/cop.h:671./ppport.h::73814:: 20note: :expanded from macro 'CLEAR_ARGARRAY' 
note: expanded from macro 'STMT_END'
    } STMT_END
      ^~~~~~~~
#  define STMT_END      )
                        ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
cbc/typeinfo.c:338:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'

        STMT_START {                                                           \    CHECK_ALLOWED(STRUCTS, "a struct");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'

        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
        ^~~~~~~~~~
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/type.c:539:5: note: '{' token is here
    CHECK_ALLOWED(STRUCTS, "a struct");./ppport.h:3813:28: note: expanded from macro 'STMT_START'

#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:338:3: note: '{' token is here
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
cbc/type.c:        STMT_START {                                                           \
                   ^
495:20: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
                   ^
cbc/type.c:539:cbc/typeinfo.c:338:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
5  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(STRUCTS, "a struct");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:539:5: note: ')' token is here
    CHECK_ALLOWED(STRUCTS, "a struct");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:338:3: note: ')' token is here

  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^

                        ^
cbc/type.c:542:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(ENUMS, "an enum");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:9: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/type.c:542:5: note: '{' token is here
    CHECK_ALLOWED(ENUMS, "an enum");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:495:20: note: expanded from macro 'CHECK_ALLOWED'
        STMT_START {                                                           \
                   ^
cbc/type.c:542:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    CHECK_ALLOWED(ENUMS, "an enum");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:9: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
        ^
cbc/type.c:542:5: note: ')' token is here
    CHECK_ALLOWED(ENUMS, "an enum");
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cbc/type.c:499:11: note: expanded from macro 'CHECK_ALLOWED'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:367:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "identifier", newSVpv(pStruct->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:367:5: note: '{' token is here
    HV_STORE_CONST(hv, "identifier", newSVpv(pStruct->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:367:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "identifier", newSVpv(pStruct->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:367:5: note: ')' token is here
    HV_STORE_CONST(hv, "identifier", newSVpv(pStruct->identifier, 0));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:5: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'
#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: '{' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:214:16: note: expanded from macro 'MUTEX_LOCK'
    STMT_START {                                                \
               ^
In file included from cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
cbc/typeinfo.c#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:5: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2619:5: note: ')' token is here
    ENV_LOCK;
    ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2924:31: note: expanded from macro 'ENV_LOCK'
:#  define ENV_LOCK            MUTEX_LOCK(&PL_env_mutex)374
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:219:7: note: expanded from macro 'MUTEX_LOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )
                        ^
:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "type", type);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:In file included from 9cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;:
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
 note: #  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:5: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \expanded from macro 'HV_STORE_CONST'
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:666:29: note: expanded from macro 'STMT_START'

#   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                              ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: '{' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:222:16: note: expanded from macro 'MUTEX_UNLOCK'
    STMT_START {                                                \
               ^
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813In file included from :cbc/util.c:21:
In file included from /usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:6161:
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
28#  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex):
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:5: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
    ^
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/inline.h:2627:5: note: ')' token is here
    ENV_UNLOCK;
    ^~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:2925:31: note: expanded from macro 'ENV_UNLOCK'
 #  define ENV_UNLOCK          MUTEX_UNLOCK(&PL_env_mutex)note: 
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/thread.h:227:7: note: expanded from macro 'MUTEX_UNLOCK'
    } STMT_END
      ^~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/perl.h:667:21: note: expanded from macro 'STMT_END'
#   define STMT_END     )expanded from macro 'STMT_START'
                        ^

#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:374:3: note: '{' token is here
  HV_STORE_CONST(hv, "type", type);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:374:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "type", type);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:374:3: note: ')' token is here
  HV_STORE_CONST(hv, "type", type);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:378:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "size", newSViv(pStruct->size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:378:5: note: '{' token is here
    HV_STORE_CONST(hv, "size", newSViv(pStruct->size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:378:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "size", newSViv(pStruct->size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:378:5: note: ')' token is here
    HV_STORE_CONST(hv, "size", newSViv(pStruct->size));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:379:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "align", newSViv(pStruct->align));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:379:5: note: '{' token is here
    HV_STORE_CONST(hv, "align", newSViv(pStruct->align));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:379:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "align", newSViv(pStruct->align));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:379:5: note: ')' token is here
    HV_STORE_CONST(hv, "align", newSViv(pStruct->align));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:380:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "pack", newSViv(pStruct->pack));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:380:5: note: '{' token is here
    HV_STORE_CONST(hv, "pack", newSViv(pStruct->pack));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:380:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "pack", newSViv(pStruct->pack));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:380:5: note: ')' token is here
    HV_STORE_CONST(hv, "pack", newSViv(pStruct->pack));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:382:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "declarations",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:382:5: note: '{' token is here
    HV_STORE_CONST(hv, "declarations",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:382:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    HV_STORE_CONST(hv, "declarations",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:382:5: note: ')' token is here
    HV_STORE_CONST(hv, "declarations",
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/typeinfo.c:386:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:9: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/typeinfo.c:386:3: note: '{' token is here
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:272:20: note: expanded from macro 'HV_STORE_CONST'
        STMT_START {                                                           \
                   ^
cbc/typeinfo.c:386:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:9: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
        ^
cbc/typeinfo.c:386:3: note: ')' token is here
  HV_STORE_CONST(hv, "context", newSVpvf("%s(%lu)",
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:276:11: note: expanded from macro 'HV_STORE_CONST'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:223:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:5: note: expanded from macro 'PUSHMARK'
    STMT_START {                                                      \
    ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:223:3: note: '{' token is here
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:59:16: note: expanded from macro 'PUSHMARK'
    STMT_START {                                                      \
               ^
cbc/util.c:223:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:5: note: expanded from macro 'PUSHMARK'
    } STMT_END
    ^
cbc/util.c:223:3: note: ')' token is here
  PUSHMARK(SP);
  ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:68:7: note: expanded from macro 'PUSHMARK'
    } STMT_END
      ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:224:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:19: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:224:3: note: '{' token is here
  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:30: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                   ^
cbc/util.c:224:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:25: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:224:3: note: '{' token is here
  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:371:36: note: expanded from macro 'EXTEND'
#  define EXTEND(p,n)   STMT_START {                                    \
                                   ^
cbc/util.c:224:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:28: note: expanded from macro 'EXTEND'
                         } } STMT_END
                           ^
cbc/util.c:224:3: note: ')' token is here
  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:32: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                     ^~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:376:30: note: expanded from macro 'EXTEND'
                         } } STMT_END
                             ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:224:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:59: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                ^
cbc/util.c:224:3: note: ')' token is here
  XPUSHs(sv_2mortal(sv));
  ^~~~~~~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/perl/5.32/CORE/pp.h:462:61: note: expanded from macro 'XPUSHs'
#define XPUSHs(s)       STMT_START { EXTEND(sp,1); *++sp = (s); } STMT_END
                                                                  ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:288:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "%s in resolution of '%s'", errstr, name));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:288:7: note: '{' token is here
      WARN((aTHX_ "%s in resolution of '%s'", errstr, name));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/util.c:288:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "%s in resolution of '%s'", errstr, name));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/util.c:288:7: note: ')' token is here
      WARN((aTHX_ "%s in resolution of '%s'", errstr, name));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:290:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "%s in resolution of typedef", errstr));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:20: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                   ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:290:7: note: '{' token is here
      WARN((aTHX_ "%s in resolution of typedef", errstr));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:31: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                              ^
cbc/util.c:290:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      WARN((aTHX_ "%s in resolution of typedef", errstr));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:71: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                      ^
cbc/util.c:290:7: note: ')' token is here
      WARN((aTHX_ "%s in resolution of typedef", errstr));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cbc/cbc.h:225:73: note: expanded from macro 'WARN'
#define WARN(args) STMT_START { if (PERL_WARNINGS_ON) Perl_warn args; } STMT_END
                                                                        ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:634:3: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  DUMP_INDENT; level++;
  ^~~~~~~~~~~
cbc/util.c:574:9: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:634:3: note: '{' token is here
  DUMP_INDENT; level++;
  ^~~~~~~~~~~
cbc/util.c:574:20: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
                   ^
cbc/util.c:634:3: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  DUMP_INDENT; level++;
  ^~~~~~~~~~~
cbc/util.c:577:9: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
        ^
cbc/util.c:634:3: note: ')' token is here
  DUMP_INDENT; level++;
  ^~~~~~~~~~~
cbc/util.c:577:11: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:655:13: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            DUMP_INDENT;
            ^~~~~~~~~~~
cbc/util.c:574:9: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:655:13: note: '{' token is here
            DUMP_INDENT;
            ^~~~~~~~~~~
cbc/util.c:574:20: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
                   ^
cbc/util.c:655:13: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            DUMP_INDENT;
            ^~~~~~~~~~~
cbc/util.c:577:9: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
        ^
cbc/util.c:655:13: note: ')' token is here
            DUMP_INDENT;
            ^~~~~~~~~~~
cbc/util.c:577:11: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
cbc/util.c:670:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          DUMP_INDENT;
          ^~~~~~~~~~~
cbc/util.c:574:9: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
        ^~~~~~~~~~
./ppport.h:3813:28: note: expanded from macro 'STMT_START'
#  define STMT_START    (void)( /* gcc supports ``({ STATEMENTS; })'' */
                              ^
cbc/util.c:670:11: note: '{' token is here
          DUMP_INDENT;
          ^~~~~~~~~~~
cbc/util.c:574:20: note: expanded from macro 'DUMP_INDENT'
        STMT_START {                      \
                   ^
cbc/util.c:670:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
          DUMP_INDENT;
          ^~~~~~~~~~~
cbc/util.c:577:9: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
        ^
cbc/util.c:670:11: note: ')' token is here
          DUMP_INDENT;
          ^~~~~~~~~~~
cbc/util.c:577:11: note: expanded from macro 'DUMP_INDENT'
        } STMT_END
          ^~~~~~~~
./ppport.h:3814:20: note: expanded from macro 'STMT_END'
#  define STMT_END      )
                        ^
110 warnings generated.
mv type.o tmptype.o
mv tmptype.o cbc/type.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/byteorder.c
114 warnings generated.
mv util.o tmputil.o
138 warnings generated.
mv tmputil.o cbc/util.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/cterror.c
mv typeinfo.o tmptypeinfo.o
mv tmptypeinfo.o cbc/typeinfo.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/ctparse.c
mv bitfields.o tmpbitfields.o
mv tmpbitfields.o ctlib/bitfields.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/cttags.c
mv cterror.o tmpcterror.o
mv tmpcterror.o ctlib/cterror.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/cttype.c
mv byteorder.o tmpbyteorder.o
mv tmpbyteorder.o ctlib/byteorder.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/layout.c
mv cttags.o tmpcttags.o
mv tmpcttags.o ctlib/cttags.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/y_parser.c
mv ctparse.o tmpctparse.o
mv tmpctparse.o ctlib/ctparse.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ctlib/y_pragma.c
mv layout.o tmplayout.o
mv tmplayout.o ctlib/layout.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ucpp/assert.c
mv cttype.o tmpcttype.o
mv tmpcttype.o ctlib/cttype.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ucpp/cpp.c
mv y_pragma.o tmpy_pragma.o
mv tmpy_pragma.o ctlib/y_pragma.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ucpp/eval.c
mv assert.o tmpassert.o
mv tmpassert.o ucpp/assert.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ucpp/lexer.c
mv eval.o tmpeval.o
mv tmpeval.o ucpp/eval.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ucpp/macro.c
mv lexer.o tmplexer.o
mv tmplexer.o ucpp/lexer.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ucpp/mem.c
mv mem.o tmpmem.o
mv cpp.o tmpcpp.o
mv tmpmem.o ucpp/mem.o
mv tmpcpp.o ucpp/cpp.o
x86_64-linux-gnu-gcc -c  -I. -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.84\" -DXS_VERSION=\"0.84\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE"  -DUCPP_CONFIG -DUTIL_HAVE_CONFIG_H -DCBC_HAVE_IEEE_FP -DNDEBUG ucpp/nhash.c
mv nhash.o tmpnhash.o
mv tmpnhash.o ucpp/nhash.o
mv y_parser.o tmpy_parser.o
mv tmpy_parser.o ctlib/y_parser.o
mv macro.o tmpmacro.o
mv tmpmacro.o ucpp/macro.o
rm -f blib/arch/auto/Convert/Binary/C/C.so
x86_64-linux-gnu-gcc -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now  -shared -L/usr/local/lib -fstack-protector-strong  C.o cbc/basic.o cbc/dimension.o cbc/hook.o cbc/idl.o cbc/init.o cbc/macros.o cbc/member.o cbc/object.o cbc/option.o cbc/pack.o cbc/sourcify.o cbc/tag.o cbc/type.o cbc/typeinfo.o cbc/util.o ctlib/bitfields.o ctlib/byteorder.o ctlib/cterror.o ctlib/ctparse.o ctlib/cttags.o ctlib/cttype.o ctlib/fileinfo.o ctlib/layout.o ctlib/y_parser.o ctlib/y_pragma.o ucpp/assert.o ucpp/cpp.o ucpp/eval.o ucpp/lexer.o ucpp/macro.o ucpp/mem.o ucpp/nhash.o util/hash.o util/list.o util/memalloc.o  -o blib/arch/auto/Convert/Binary/C/C.so  \
      \
  
chmod 755 blib/arch/auto/Convert/Binary/C/C.so
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" bin/convert.PL examples/convert.pl 
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" bin/elf.PL examples/elf.pl 
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" bin/memmap.PL examples/memmap.pl 
"/usr/bin/perl" "-Iblib/arch" "-Iblib/lib" bin/perltypes.PL examples/perltypes.pl 
cp bin/ccconfig blib/script/ccconfig
"/usr/bin/perl" -MExtUtils::MY -e 'MY->fixin(shift)' -- blib/script/ccconfig
Manifying 1 pod document
Manifying 2 pod documents
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_test
	make -j4 test TEST_VERBOSE=1
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- C.bs blib/arch/auto/Convert/Binary/C/C.bs 644
PERL_DL_NONLAZY=1 "/usr/bin/perl" "-Iblib/lib" "-Iblib/arch" test.pl
Argument "" isn't numeric in numeric ge (>=) at test.pl line 31.
tests/001_init............
#   Failed test 'require Convert::Binary::C;'
#   in tests/001_init.t at line 17.
#     Tried to require 'Convert::Binary::C'.
#     Error:  Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
#   at (eval 3) line 2.
# Compilation failed in require at (eval 3) line 2.

#   Failed test 'require Convert::Binary::C::Cached;'
#   in tests/001_init.t at line 18.
#     Tried to require 'Convert::Binary::C::Cached'.
#     Error:  Attempt to reload Convert/Binary/C.pm aborted.
# Compilation failed in require at blib/lib/Convert/Binary/C/Cached.pm line 20.
# BEGIN failed--compilation aborted at blib/lib/Convert/Binary/C/Cached.pm line 20.
# Compilation failed in require at (eval 8) line 2.

#   Failed test 'create Convert::Binary::C object'
#   in tests/001_init.t at line 24.
#          got: 'Convert::Binary::C is not an object at tests/001_init.t line 23.
# '
#     expected: ''

#   Failed test 'blessed Convert::Binary::C reference'
#   in tests/001_init.t at line 25.
#          got: ''
#     expected: 'Convert::Binary::C'

#   Failed test 'create Convert::Binary::C::Cached object'
#   in tests/001_init.t at line 29.
#          got: 'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 28.
# '
#     expected: ''

#   Failed test 'blessed Convert::Binary::C::Cached reference'
#   in tests/001_init.t at line 30.
#          got: ''
#     expected: 'Convert::Binary::C::Cached'

#   Failed test 'create Convert::Binary::C object with arguments'
#   in tests/001_init.t at line 46.
#          got: 'Convert::Binary::C is not an object at tests/001_init.t line 37.
# '
#     expected: ''

#   Failed test 'blessed Convert::Binary::C reference'
#   in tests/001_init.t at line 47.
#          got: ''
#     expected: 'Convert::Binary::C'

#   Failed test 'create Convert::Binary::C::Cached object with arguments'
#   in tests/001_init.t at line 63.
#          got: 'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 53.
# '
#     expected: ''

#   Failed test 'blessed Convert::Binary::C::Cached reference'
#   in tests/001_init.t at line 64.
#          got: ''
#     expected: 'Convert::Binary::C::Cached'

#   Failed test in tests/001_init.t at line 85.
#                   'Convert::Binary::C is not an object at tests/001_init.t line 83.
# '
#     doesn't match '(?^:Invalid option 'FOO' at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 90.
#                   'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 88.
# '
#     doesn't match '(?^:Invalid option 'FOO' at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 98.
#                   'Convert::Binary::C is not an object at tests/001_init.t line 96.
# '
#     doesn't match '(?^:Number of configuration arguments to new must be even at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 103.
#                   'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 101.
# '
#     doesn't match '(?^:Number of configuration arguments to new must be even at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 111.
#                   'Convert::Binary::C is not an object at tests/001_init.t line 109.
# '
#     doesn't match '(?^:ByteOrder must be.*not 'FOO' at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 116.
#                   'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 114.
# '
#     doesn't match '(?^:ByteOrder must be.*not 'FOO' at tests\/001_init\.t)'

#   Failed test in tests/001_init.t at line 124.
#          got: 'foobar is not an object at tests/001_init.t line 122.
# '
#     expected: ''

#   Failed test in tests/001_init.t at line 134.
#          got: 'Convert::Binary::C is not an object at tests/001_init.t line 131.
# '
#     expected: ''

#   Failed test in tests/001_init.t at line 135.

#   Failed test in tests/001_init.t at line 142.
#          got: 'Convert::Binary::C is not an object at tests/001_init.t line 141.
# '
#     expected: ''

#   Failed test in tests/001_init.t at line 145.
#                   ''
#     doesn't match '(?^:^Modification of a read-only value attempted)'

#   Failed test in tests/001_init.t at line 150.
#                   'Can't call method "clean" on unblessed reference at tests/001_init.t line 149.
# '
#     doesn't match '(?^:THIS is corrupt)'

#   Failed test in tests/001_init.t at line 158.
#                   'Can't locate object method "clean" via package "HASH" at tests/001_init.t line 157.
# '
#     doesn't match '(?^:THIS->hv is corrupt)'

#   Failed test in tests/001_init.t at line 142.
#          got: 'Can't locate object method "new" via package "Convert::Binary::C::Cached" at tests/001_init.t line 141.
# '
#     expected: ''

#   Failed test in tests/001_init.t at line 145.
#                   ''
#     doesn't match '(?^:^Modification of a read-only value attempted)'

#   Failed test in tests/001_init.t at line 150.
#                   'Can't call method "clean" on unblessed reference at tests/001_init.t line 149.
# '
#     doesn't match '(?^:THIS is corrupt)'

#   Failed test in tests/001_init.t at line 158.
#                   'Can't locate object method "clean" via package "HASH" at tests/001_init.t line 157.
# '
#     doesn't match '(?^:THIS->hv is corrupt)'
# Looks like you failed 27 tests of 29.
dubious
	Test returned status 27 (wstat 6912, 0x1b00)
DIED. FAILED tests 1-10, 12-18, 20-29
	Failed 27/29 tests, 6.90% okay
tests/101_basic...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/101_basic.t line 9.
Compilation failed in require at tests/101_basic.t line 9.
BEGIN failed--compilation aborted at tests/101_basic.t line 9.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/201_config..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/201_config.t line 10.
Compilation failed in require at tests/201_config.t line 10.
BEGIN failed--compilation aborted at tests/201_config.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/202_misc............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/202_misc.t line 10.
Compilation failed in require at tests/202_misc.t line 10.
BEGIN failed--compilation aborted at tests/202_misc.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/203_warnings........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/203_warnings.t line 10.
Compilation failed in require at tests/203_warnings.t line 10.
BEGIN failed--compilation aborted at tests/203_warnings.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/204_enum............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/204_enum.t line 10.
Compilation failed in require at tests/204_enum.t line 10.
BEGIN failed--compilation aborted at tests/204_enum.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/205_pack............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/205_pack.t line 10.
Compilation failed in require at tests/205_pack.t line 10.
BEGIN failed--compilation aborted at tests/205_pack.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/206_parse...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/206_parse.t line 10.
Compilation failed in require at tests/206_parse.t line 10.
BEGIN failed--compilation aborted at tests/206_parse.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/207_typedef.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/207_typedef.t line 10.
Compilation failed in require at tests/207_typedef.t line 10.
BEGIN failed--compilation aborted at tests/207_typedef.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/208_float...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/208_float.t line 10.
Compilation failed in require at tests/208_float.t line 10.
BEGIN failed--compilation aborted at tests/208_float.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/209_sourcify........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/209_sourcify.t line 10.
Compilation failed in require at tests/209_sourcify.t line 10.
BEGIN failed--compilation aborted at tests/209_sourcify.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/210_depend..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/210_depend.t line 10.
Compilation failed in require at tests/210_depend.t line 10.
BEGIN failed--compilation aborted at tests/210_depend.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/211_clone...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/211_clone.t line 10.
Compilation failed in require at tests/211_clone.t line 10.
BEGIN failed--compilation aborted at tests/211_clone.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/212_clean...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/212_clean.t line 10.
Compilation failed in require at tests/212_clean.t line 10.
BEGIN failed--compilation aborted at tests/212_clean.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/213_string..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/213_string.t line 10.
Compilation failed in require at tests/213_string.t line 10.
BEGIN failed--compilation aborted at tests/213_string.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/214_cache...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/214_cache.t line 11.
Compilation failed in require at tests/214_cache.t line 11.
BEGIN failed--compilation aborted at tests/214_cache.t line 11.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/215_local...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/215_local.t line 10.
Compilation failed in require at tests/215_local.t line 10.
BEGIN failed--compilation aborted at tests/215_local.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/216_language........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/216_language.t line 10.
Compilation failed in require at tests/216_language.t line 10.
BEGIN failed--compilation aborted at tests/216_language.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/217_preproc.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/217_preproc.t line 10.
Compilation failed in require at tests/217_preproc.t line 10.
BEGIN failed--compilation aborted at tests/217_preproc.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-43
	Failed 43/43 tests, 0.00% okay
tests/218_member..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/218_member.t line 10.
Compilation failed in require at tests/218_member.t line 10.
BEGIN failed--compilation aborted at tests/218_member.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/219_def.............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/219_def.t line 10.
Compilation failed in require at tests/219_def.t line 10.
BEGIN failed--compilation aborted at tests/219_def.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/220_new.............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/220_new.t line 10.
Compilation failed in require at tests/220_new.t line 10.
BEGIN failed--compilation aborted at tests/220_new.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/221_asm.............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/221_asm.t line 10.
Compilation failed in require at tests/221_asm.t line 10.
BEGIN failed--compilation aborted at tests/221_asm.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/222_ieee............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/222_ieee.t line 10.
Compilation failed in require at tests/222_ieee.t line 10.
BEGIN failed--compilation aborted at tests/222_ieee.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/223_initializer.....Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/223_initializer.t line 10.
Compilation failed in require at tests/223_initializer.t line 10.
BEGIN failed--compilation aborted at tests/223_initializer.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/224_typeof..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/224_typeof.t line 10.
Compilation failed in require at tests/224_typeof.t line 10.
BEGIN failed--compilation aborted at tests/224_typeof.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/225_magic...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/225_magic.t line 10.
Compilation failed in require at tests/225_magic.t line 10.
BEGIN failed--compilation aborted at tests/225_magic.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/226_indexed.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/226_indexed.t line 10.
Compilation failed in require at tests/226_indexed.t line 10.
BEGIN failed--compilation aborted at tests/226_indexed.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/227_flexarray.......Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/227_flexarray.t line 10.
Compilation failed in require at tests/227_flexarray.t line 10.
BEGIN failed--compilation aborted at tests/227_flexarray.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/228_hooks...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/228_hooks.t line 10.
Compilation failed in require at tests/228_hooks.t line 10.
BEGIN failed--compilation aborted at tests/228_hooks.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/229_substr..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/229_substr.t line 10.
Compilation failed in require at tests/229_substr.t line 10.
BEGIN failed--compilation aborted at tests/229_substr.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/230_compiler........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/230_compiler.t line 10.
Compilation failed in require at tests/230_compiler.t line 10.
BEGIN failed--compilation aborted at tests/230_compiler.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/231_align...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/231_align.t line 10.
Compilation failed in require at tests/231_align.t line 10.
BEGIN failed--compilation aborted at tests/231_align.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/232_native..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/232_native.t line 11.
Compilation failed in require at tests/232_native.t line 11.
BEGIN failed--compilation aborted at tests/232_native.t line 11.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/233_tags............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/233_tags.t line 10.
Compilation failed in require at tests/233_tags.t line 10.
BEGIN failed--compilation aborted at tests/233_tags.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/234_format..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/234_format.t line 10.
Compilation failed in require at tests/234_format.t line 10.
BEGIN failed--compilation aborted at tests/234_format.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/235_basic...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/235_basic.t line 10.
Compilation failed in require at tests/235_basic.t line 10.
BEGIN failed--compilation aborted at tests/235_basic.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/236_typeinfo........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/236_typeinfo.t line 10.
Compilation failed in require at tests/236_typeinfo.t line 10.
BEGIN failed--compilation aborted at tests/236_typeinfo.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/237_parser..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/237_parser.t line 10.
Compilation failed in require at tests/237_parser.t line 10.
BEGIN failed--compilation aborted at tests/237_parser.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/238_byteorder.......Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/238_byteorder.t line 10.
Compilation failed in require at tests/238_byteorder.t line 10.
BEGIN failed--compilation aborted at tests/238_byteorder.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-32
	Failed 32/32 tests, 0.00% okay
tests/239_macros..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/239_macros.t line 10.
Compilation failed in require at tests/239_macros.t line 10.
BEGIN failed--compilation aborted at tests/239_macros.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-54
	Failed 54/54 tests, 0.00% okay
tests/240_offsetof........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/240_offsetof.t line 10.
Compilation failed in require at tests/240_offsetof.t line 10.
BEGIN failed--compilation aborted at tests/240_offsetof.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-377
	Failed 377/377 tests, 0.00% okay
tests/241_sizeof..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/241_sizeof.t line 10.
Compilation failed in require at tests/241_sizeof.t line 10.
BEGIN failed--compilation aborted at tests/241_sizeof.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-71
	Failed 71/71 tests, 0.00% okay
tests/242_dimension.......Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/242_dimension.t line 10.
Compilation failed in require at tests/242_dimension.t line 10.
BEGIN failed--compilation aborted at tests/242_dimension.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-1535
	Failed 1535/1535 tests, 0.00% okay
tests/243_parser..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/243_parser.t line 10.
Compilation failed in require at tests/243_parser.t line 10.
BEGIN failed--compilation aborted at tests/243_parser.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-2
	Failed 2/2 tests, 0.00% okay
tests/501_bfsimple........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/501_bfsimple.t line 10.
Compilation failed in require at tests/501_bfsimple.t line 10.
BEGIN failed--compilation aborted at tests/501_bfsimple.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-8990
	Failed 8990/8990 tests, 0.00% okay
tests/502_bfmicrosoft.....Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/502_bfmicrosoft.t line 10.
Compilation failed in require at tests/502_bfmicrosoft.t line 10.
BEGIN failed--compilation aborted at tests/502_bfmicrosoft.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-9031
	Failed 9031/9031 tests, 0.00% okay
tests/503_bfgeneric.......Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/503_bfgeneric.t line 10.
Compilation failed in require at tests/503_bfgeneric.t line 10.
BEGIN failed--compilation aborted at tests/503_bfgeneric.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-9031
	Failed 9031/9031 tests, 0.00% okay
tests/601_speed...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/601_speed.t line 10.
Compilation failed in require at tests/601_speed.t line 10.
BEGIN failed--compilation aborted at tests/601_speed.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/602_threads.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/602_threads.t line 11.
Compilation failed in require at tests/602_threads.t line 11.
BEGIN failed--compilation aborted at tests/602_threads.t line 11.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/603_complex.........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/603_complex.t line 16.
Compilation failed in require at tests/603_complex.t line 16.
BEGIN failed--compilation aborted at tests/603_complex.t line 16.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
tests/701_debug...........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/701_debug.t line 10.
Compilation failed in require at tests/701_debug.t line 10.
BEGIN failed--compilation aborted at tests/701_debug.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/702_env.............# Test 1 got: "Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.\n\0 at tests/702_env.t line 45.\nCompilation failed in require at tests/702_env.t line 45.\n" (tests/702_env.t at line 46)
#   Expected: "" (could not require Convert::Binary::C)
#  tests/702_env.t line 46 is: ok( $@, '', "could not require Convert::Binary::C" );
# Test 3 got: "Convert::Binary::C is not an object at tests/702_env.t line 52.\n" (tests/702_env.t at line 53)
#   Expected: "" (could not create Convert::Binary::C object)
#  tests/702_env.t line 53 is: ok( $@, '', "could not create Convert::Binary::C object" );
# Test 4 got: "1" (tests/702_env.t at line 40 fail #2)
#   Expected: "0" (warnings check failed)
#  tests/702_env.t line 40 is:   ok( $fail, 0, "warnings check failed" );
Can't call method "OrderMembers" on an undefined value at tests/702_env.t line 55.
dubious
	Test returned status 2 (wstat 512, 0x200)
DIED. FAILED tests 1, 3-16
	Failed 15/16 tests, 6.25% okay
tests/703_bugs............Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/703_bugs.t line 10.
Compilation failed in require at tests/703_bugs.t line 10.
BEGIN failed--compilation aborted at tests/703_bugs.t line 10.
# Looks like your test died before it could output anything.
dubious
	Test returned status 255 (wstat 65280, 0xff00)
DIED. FAILED tests 1-11
	Failed 11/11 tests, 0.00% okay
tests/801_examples........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/801_examples.t line 10.
Compilation failed in require at tests/801_examples.t line 10.
BEGIN failed--compilation aborted at tests/801_examples.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
tests/802_pod.............ok
tests/803_pod_coverage....
#   Failed test 'Pod coverage on Convert::Binary::C'
#   in tests/803_pod_coverage.t at line 21.
# Convert::Binary::C: requiring 'Convert::Binary::C' failed

#   Failed test 'Pod coverage on Convert::Binary::C::Cached'
#   in tests/803_pod_coverage.t at line 22.
# Convert::Binary::C::Cached: Couldn't compile 'Convert::Binary::C::Cached' to inspect: Attempt to reload Convert/Binary/C.pm aborted.
# Compilation failed in require at blib/lib/Convert/Binary/C/Cached.pm line 20.
# BEGIN failed--compilation aborted at blib/lib/Convert/Binary/C/Cached.pm line 20.
# Compilation failed in require at (eval 13) line 1.
# Looks like you failed 2 tests of 2.
dubious
	Test returned status 2 (wstat 512, 0x200)
DIED. FAILED tests 1-2
	Failed 2/2 tests, 0.00% okay
tests/901_memory..........Can't load 'blib/arch/auto/Convert/Binary/C/C.so' for module Convert::Binary::C: blib/arch/auto/Convert/Binary/C/C.so: undefined symbol: perl_tsa_mutex_lock at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 187.
  at tests/901_memory.t line 10.
Compilation failed in require at tests/901_memory.t line 10.
BEGIN failed--compilation aborted at tests/901_memory.t line 10.
dubious
	Test returned status 2 (wstat 512, 0x200)
Failed Test              Stat Wstat Total Fail  List of Failed
-------------------------------------------------------------------------------
tests/001_init.t           27  6912    29   27  1-10 12-18 20-29
tests/101_basic.t           2   512    ??   ??  ??
tests/201_config.t          2   512    ??   ??  ??
tests/202_misc.t            2   512    ??   ??  ??
tests/203_warnings.t        2   512    ??   ??  ??
tests/204_enum.t            2   512    ??   ??  ??
tests/205_pack.t            2   512    ??   ??  ??
tests/206_parse.t           2   512    ??   ??  ??
tests/207_typedef.t         2   512    ??   ??  ??
tests/208_float.t           2   512    ??   ??  ??
tests/209_sourcify.t        2   512    ??   ??  ??
tests/210_depend.t          2   512    ??   ??  ??
tests/211_clone.t           2   512    ??   ??  ??
tests/212_clean.t           2   512    ??   ??  ??
tests/213_string.t          2   512    ??   ??  ??
tests/214_cache.t           2   512    ??   ??  ??
tests/215_local.t           2   512    ??   ??  ??
tests/216_language.t        2   512    ??   ??  ??
tests/217_preproc.t       255 65280    43   86  1-43
tests/218_member.t          2   512    ??   ??  ??
tests/219_def.t             2   512    ??   ??  ??
tests/220_new.t             2   512    ??   ??  ??
tests/221_asm.t             2   512    ??   ??  ??
tests/222_ieee.t            2   512    ??   ??  ??
tests/223_initializer.t     2   512    ??   ??  ??
tests/224_typeof.t          2   512    ??   ??  ??
tests/225_magic.t           2   512    ??   ??  ??
tests/226_indexed.t         2   512    ??   ??  ??
tests/227_flexarray.t       2   512    ??   ??  ??
tests/228_hooks.t           2   512    ??   ??  ??
tests/229_substr.t          2   512    ??   ??  ??
tests/230_compiler.t        2   512    ??   ??  ??
tests/231_align.t           2   512    ??   ??  ??
tests/232_native.t          2   512    ??   ??  ??
tests/233_tags.t            2   512    ??   ??  ??
tests/234_format.t          2   512    ??   ??  ??
tests/235_basic.t           2   512    ??   ??  ??
tests/236_typeinfo.t        2   512    ??   ??  ??
tests/237_parser.t          2   512    ??   ??  ??
tests/238_byteorder.t     255 65280    32   64  1-32
tests/239_macros.t        255 65280    54  108  1-54
tests/240_offsetof.t      255 65280   377  754  1-377
tests/241_sizeof.t        255 65280    71  142  1-71
tests/242_dimension.t     255 65280  1535 3070  1-1535
tests/243_parser.t        255 65280     2    4  1-2
tests/501_bfsimple.t      255 65280  8990 1798  1-8990
tests/502_bfmicrosoft.t   255 65280  9031 1806  1-9031
tests/503_bfgeneric.t     255 65280  9031 1806  1-9031
tests/601_speed.t           2   512    ??   ??  ??
tests/602_threads.t         2   512    ??   ??  ??
tests/603_complex.t       255 65280    ??   ??  ??
tests/701_debug.t           2   512    ??   ??  ??
tests/702_env.t             2   512    16   27  1 3-16
tests/703_bugs.t          255 65280    11   22  1-11
tests/801_examples.t        2   512    ??   ??  ??
tests/803_pod_coverage.t    2   512     2    2  1-2
tests/901_memory.t          2   512    ??   ??  ??
Failed 57/58 test scripts. 29221/29228 subtests failed.
Files=58, Tests=29228,  1 wallclock secs ( 0.81 cusr +  0.08 csys =  0.89 CPU)
Failed 57/58 test programs. 29221/29228 subtests failed.
make[1]: *** [Makefile:1156: test_dynamic] Error 2
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
dh_auto_test: error: make -j4 test TEST_VERBOSE=1 returned exit code 2
make: *** [debian/rules:6: binary] Error 25
dpkg-buildpackage: error: debian/rules binary subprocess returned exit status 2
--------------------------------------------------------------------------------
Build finished at 2021-10-26T23:04:55Z

Finished
--------


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use
E: Build failure (dpkg-buildpackage died)

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 18444
Build-Time: 7
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 4
Job: libconvert-binary-c-perl_0.84-1
Machine Architecture: amd64
Package: libconvert-binary-c-perl
Package-Time: 32
Source-Version: 0.84-1
Space: 18444
Status: attempted
Version: 0.84-1
--------------------------------------------------------------------------------
Finished at 2021-10-26T23:04:55Z
Build needed 00:00:32, 18444k disk space
E: Build failure (dpkg-buildpackage died)
DC-Status: Failed 33.487973857s
