Preprocessing

1) Build with clang
2) Normal build

In some case, we get a raw list of results

cqa-compare-ref-rebuild -s /tmp/log-clang-14-06-16/ -o /tmp/log-clang-14-06-16-results -i clang

or
use the script
$ bash -v process-log.sh res.unstable scanlog-8-2020-02-24 logs/2020-02-24-8 8

you might need to run
for f in *gz; do gunzip $f; done

or
mkdir clang/
mv *clang5.0.log clang
cqa-scanlogs > normal.txt
cd clang
cqa-scanlogs > clang.txt
cqa-compare-results ../normal.txt clang.txt |grep DIFFRES > fail-clang.txt
LIST=$(awk '{print $1}' fail-clang.txt)
for f in $LIST; do cp "$f"_*log results/; done



In case you need to rename the log:
for f in *clang4.0*; do git mv $f $(echo $f|sed -e "s|clang4.0|clang|g"); done

3) Generation the list of packages. It will find the error.

From the log directory, run:
cqa-scanlogs > ../../scanlog-3.1-2012-06-23

This program can be found here:
https://salsa.debian.org/lucas/collab-qa-tools
and Debian packages should be created

4) Import the file into the database
Edit insert.php
Update the path, the version and the date

Run, it should insert in the db

With reimport-all.sh, all previous scanlog-* are going to be reimported.
This should be done when new categories are created.

5) Update status.php to add the support of the new version
update config.inc.php for the number of packages

6) Check:
http://localhost/status.php?version=X.Y&key=NO_CAT

Check for new common error message and add then listErrors.php

7) Get the number of packages in the archive with
wget -q -O - ftp://ftp.fr.debian.org/debian/dists/sid/main/source/Sources.gz | zgrep -c '^Package: '
and update config.inc.php

8) Refresh the list of maintainers
bash -v generate-dd-list.sh 9.0.1 2020-02-24


Notes:
* Add &sort=true in the URL to get a SOUNDEX() sort
Example:
http://clang.debian.net/status.php?version=3.5.0&key=NO_CAT&sort=true



To compute:
grep -v " OK " scanlog-12.0.1-2021-10-25 > scanlog-12.0.1-2021-10-25.res


if you have only the .diff, you can try
LIST=$(grep "OK Failed DIFFRES"  diff.clang13.txt|awk '{print $1}')
for f in $LIST; do
    F=$(ls "$f"_*log)
    echo "Copy of $F"
    cp "$F" results/
done

